[{"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/index.js":"1","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/reportWebVitals.js":"2","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js":"3","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/local-dev-config.js":"4","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js":"5","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/index.js":"6","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Drops/index.js":"7","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/Viridian1EPassMethods.js":"8","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/index.js":"9","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/index.js":"10","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/index.js":"11","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Modal/index.js":"12","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Image.js":"13","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Icon.js":"14","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js":"15","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/Group/index.js":"16","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Dropdown/index.js":"17","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/Item/index.js":"18","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Theme/index.js":"19","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js":"20","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Open/index.js":"21","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Verify/index.js":"22","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/WalletSelector/index.js":"23","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/connectors.js":"24","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/walletHandlers.js":"25","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/utils.js":"26"},{"size":506,"mtime":1651710104091,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1643655018399,"results":"29","hashOfConfig":"28"},{"size":9107,"mtime":1651773515843,"results":"30","hashOfConfig":"28"},{"size":1838,"mtime":1650934778733,"results":"31","hashOfConfig":"28"},{"size":2533,"mtime":1651772385196,"results":"32","hashOfConfig":"28"},{"size":145,"mtime":1643653269634,"results":"33","hashOfConfig":"28"},{"size":13030,"mtime":1651710001693,"results":"34","hashOfConfig":"28"},{"size":7474,"mtime":1651694999440,"results":"35","hashOfConfig":"28"},{"size":6237,"mtime":1651772585481,"results":"36","hashOfConfig":"28"},{"size":4169,"mtime":1643655591244,"results":"37","hashOfConfig":"28"},{"size":11105,"mtime":1641160069679,"results":"38","hashOfConfig":"28"},{"size":1494,"mtime":1643653317419,"results":"39","hashOfConfig":"28"},{"size":379,"mtime":1637244256672,"results":"40","hashOfConfig":"28"},{"size":28130,"mtime":1637244256670,"results":"41","hashOfConfig":"28"},{"size":9055,"mtime":1651772973272,"results":"42","hashOfConfig":"28"},{"size":1068,"mtime":1624424612627,"results":"43","hashOfConfig":"28"},{"size":1281,"mtime":1632849901986,"results":"44","hashOfConfig":"28"},{"size":708,"mtime":1637244256731,"results":"45","hashOfConfig":"28"},{"size":691,"mtime":1624424612647,"results":"46","hashOfConfig":"28"},{"size":4946,"mtime":1650737523326,"results":"47","hashOfConfig":"28"},{"size":10726,"mtime":1651078177334,"results":"48","hashOfConfig":"28"},{"size":4875,"mtime":1651530928031,"results":"49","hashOfConfig":"28"},{"size":2484,"mtime":1651709784067,"results":"50","hashOfConfig":"28"},{"size":746,"mtime":1651700774876,"results":"51","hashOfConfig":"28"},{"size":1303,"mtime":1651702610789,"results":"52","hashOfConfig":"28"},{"size":360,"mtime":1651771053309,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1feyeat",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/index.js",[],["114","115"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/reportWebVitals.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/local-dev-config.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js",["136","137","138","139","140","141","142","143","144","145","146","147"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Drops/index.js",["148","149","150","151","152","153"],"import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {totalSupply, mint} from \"../../smartContracts/Viridian1EPassMethods\";\nimport {Breakpoint} from 'react-socks';\nimport { CrossmintPayButton } from \"@crossmint/client-sdk-react-ui\";\nimport ReactLoading from \"react-loading\";\nimport Icon from \"../../components/Icon\";\nimport Countdown from \"react-countdown\";\nimport { useWeb3React } from '@web3-react/core';\nimport { switchNetwork } from \"../../utils/walletHandlers\";\n\nconst Drops = (props) => {\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState(0);\n    const [minting, setMinting] = useState(false);\n    const [mintSucceeded, setMintSucceeded] = useState(false);\n    const [mintFailed, setMintFailed] = useState(false);\n    const [whitelistMintingEnabled, setWhitelistMintingEnabled] = useState(true);\n    const [addressOnWhitelist, setAddressOnWhitelist] = useState(true);\n    const [publicMintingEnabled, setPublicMintingEnabled] = useState(false);\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        setMinted(await totalSupply());\n    }, [])\n\n    document.getElementsByClassName('crossmintParagraph-2-2-3 crossmintParagraph-d3-2-2-7').innerText = 'Hide';\n\n    const renderer = ({ hours, minutes, seconds, completed }) => {\n        if (completed) {\n            // Render a completed state\n            return <h1 style={{marginTop: '2ex', textAlign: 'center'}}>Starting Whitelist Mint...</h1>;\n        } else {\n            // Render a countdown\n            return <h1 style={{textAlign: 'center', color: 'gray', marginTop: '2ex'}}> Whitelist mint starts in:\n            <h1 style={{textAlign: 'center', color: 'white'}}>{hours}:{minutes}:{seconds}</h1></h1>;\n        }\n    }\n\n    const rendererPM = ({ hours, minutes, seconds, completed }) => {\n        if (completed) {\n            // Render a completed state\n            return <h1 style={{marginTop: '2ex', textAlign: 'center'}}>Starting Public Mint...</h1>;\n        } else {\n            // Render a countdown\n            return <div> <h1 style={{textAlign: 'center', color: 'gray', marginTop: '2ex'}}> Public Mint Starts in:\n                <h1 style={{textAlign: 'center', color: 'white'}}>{hours}:{minutes}:{seconds}</h1></h1>\n                <h2 style={{marginTop: '-2ex', marginBottom: '-3ex', color: 'white', textAlign: 'center'}}>\n                    <svg height=\"100\" width=\"100\" style={{marginRight: '-7.75ex'}}>\n                        <circle cx=\"5\" cy=\"50\" r=\"3\" stroke=\"red\" stroke-width=\"3\" fill=\"red\" />\n                    </svg> Whitelist Unapproved\n                </h2></div>;\n        }\n    }\n\n\n    return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                <p2 style={{color: 'grey'}}>Viridian Packs contain physically-backed NFTs</p2>\n                <h3 className={cn(\"h3\", styles.title)}>Mint Viridian Genesis Packs</h3>\n                <Breakpoint small down>\n                    <div style={{textAlign: 'center'}}>\n                        <video autoPlay loop muted playsInline style={{marginTop: '0ex', maxWidth: '40ex', borderRadius: '25px'}}>\n                            <source src='https://content.viridianexchange.com/videos/GenesisPackLoopCrop.mp4' type=\"video/mp4\"/>\n                        </video>\n                    </div>\n                </Breakpoint>\n                <Breakpoint medium up>\n                    <div style={{textAlign: 'center'}}>\n                        <video autoPlay loop muted playsInline style={{marginTop: '-7ex', maxWidth: '40ex', borderRadius: '25px'}}>\n                            <source src='https://content.viridianexchange.com/videos/GenesisPackLoopCrop.mp4' type=\"video/mp4\"/>\n                        </video>\n                    </div>\n                </Breakpoint>\n\n                {!whitelistMintingEnabled && <Countdown\n                    date={Date.parse('24 May 2022 00:04:00 EST')}\n                    renderer={renderer}\n                />}\n\n                {whitelistMintingEnabled && !publicMintingEnabled && !addressOnWhitelist && <Countdown\n                    date={Date.parse('25 May 2022 00:04:00 EST')}\n                    renderer={rendererPM}\n                />}\n\n                {(publicMintingEnabled || (whitelistMintingEnabled && addressOnWhitelist)) && <div>\n                    <h2 style={{marginTop: '2ex', textAlign: 'center'}}>\n                        Mint Amount\n                    </h2>\n                    <div style={{textAlign: 'center'}} >\n                    <Range\n                        values={values}\n                        step={STEP}\n                        min={MIN}\n                        max={MAX}\n                        onChange={(values) => {setValues(values);}}\n                        renderTrack={({ props, children }) => (\n                            <div\n                                onMouseDown={props.onMouseDown}\n                                onTouchStart={props.onTouchStart}\n                                style={{\n                                    ...props.style,\n                                    height: \"36px\",\n                                    display: \"flex\",\n                                    alignSelf: \"center\",\n                                    justifyContent: \"center\",\n                                }}\n                            >\n                                <div\n                                    ref={props.ref}\n                                    style={{\n                                        height: \"8px\",\n                                        width: \"50%\",\n                                        borderRadius: \"4px\",\n                                        background: getTrackBackground({\n                                            values,\n                                            colors: [\"#3772FF\", \"#E6E8EC\"],\n                                            min: MIN,\n                                            max: MAX,\n                                        }),\n                                        alignSelf: \"center\",\n                                        justifyContent: \"center\",\n                                    }}\n                                >\n                                    {children}\n                                </div>\n                            </div>\n                        )}\n                        renderThumb={({ props, isDragged }) => (\n                            <div\n                                {...props}\n                                style={{\n                                    ...props.style,\n                                    height: \"24px\",\n                                    width: \"24px\",\n                                    borderRadius: \"50%\",\n                                    backgroundColor: \"#3772FF\",\n                                    border: \"4px solid #FCFCFD\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        position: \"absolute\",\n                                        top: \"-33px\",\n                                        color: \"#fff\",\n                                        fontWeight: \"600\",\n                                        fontSize: \"14px\",\n                                        lineHeight: \"18px\",\n                                        fontFamily: \"Poppins\",\n                                        padding: \"4px 4px\",\n                                        borderRadius: \"8px\",\n                                        backgroundColor: \"#141416\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\",\n                                    }}\n                                >\n                                    {values[0]}\n                                </div>\n                            </div>\n                        )}\n                    />\n                    </div>\n                    <h3 style={{marginBottom: '2ex', textAlign: 'center'}}>\n                        <div className={styles.wallet}>\n                            <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n                            {values[0] / 10}\n                        </div>\n                    </h3>\n                    <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                        {props.account ? <div> {!minting ? <button\n                            className={cn(styles.link, {})}\n                            onClick={async () => {setMinting(true); await mint(props.account, values[0], setMintSucceeded, setMintFailed, setMinting);}}\n                        > <>\n                            <img style={{width: '4ex', marginTop: '-.5ex', marginLeft: '-1.5ex', marginRight: '1ex'}}\n                                 src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg'\n                                 alt='ETH' /> Buy with Polygon ETH </>\n                        </button> :  <button\n                            className={cn(styles.link, {\n                                [styles.active]: true,\n                            })}\n                        > <div>\n                            <ReactLoading type={'spin'} color={'#bf9a36'} height={'25%'} width={'25%'} /></div> <div style={{marginLeft: '6ex', marginTop: '-2.75ex'}}>Minting...</div>\n                        </button>}</div> : <button\n                            className={cn(styles.link, {\n                                [styles.active]: false,\n                            })}\n                        > <div style={{color: 'white'}}>\n                            <img style={{width: '4ex', marginTop: '-.5ex', marginLeft: '-1.5ex', marginRight: '1ex'}}\n                                 src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg'\n                                 alt='ETH' />\n                            Connect Wallet to Mint w/ Ξ</div>\n                        </button>}\n                        <div style={{display: 'flex', justifyContent: 'center', width: '100%', marginTop: '3ex'}}>\n                            {publicMintingEnabled && <CrossmintPayButton\n                                collectionTitle=\"Viridian Genesis Pack Testnet\"\n                                collectionDescription=\"Viridian testnet pack system\"\n                                collectionPhoto=\"https://lh3.googleusercontent.com/hEAvHhkzaJZo4oBE7cVaL7bRjVgyoHgKmuBu9Zhl6vVjM8pe3cGU9yDVU4OxHBm2FR84KcmRSsJ0UXlRqJwJyLDP6jnPvWxS_9QvYaQ=h600\"\n                                clientId=\"e2b98186-642d-430a-ab76-57cb49d80a11\"\n                                className=\"my-custom-crossmint-button\"\n                                mintConfig={{\n                                    type: \"erc-721\",\n                                    price: \"0.1\",\n                                    _numMint: values[0],\n                                    _to: props.account\n                                }}\n                            />}\n                        </div>\n                        {mintSucceeded && <div style={{marginTop: '3ex', color: 'green'}}>\n                            <Icon name=\"check\" size=\"20\" fill={\"#BF9A36\"} style={{marginRight: \"3ex\"}}/> Mint Successful\n                        </div>}\n                        {mintFailed && <div style={{marginTop: '3ex', color: 'red'}}>\n                            <Icon name=\"close\" size=\"20\" fill={\"#FF0000\"} style={{marginRight: \"3ex\"}}/> Mint Failed, Try Again.\n                        </div>}\n                </div>\n                    <h2 style={{marginTop: '-2ex', marginBottom: '-3ex', color: 'white', textAlign: 'center'}}>\n                        <svg height=\"100\" width=\"100\" style={{marginRight: '-7.75ex'}}>\n                            <circle cx=\"5\" cy=\"50\" r=\"3\" stroke=\"green\" stroke-width=\"3\" fill=\"green\"/>\n                        </svg> Whitelist Approved\n                    </h2>\n                </div>}\n                <div style={{marginTop: '3ex', textAlign: 'center'}}>\n                    <ProgressBar barContainerClassName=\"barContainer\"\n                                 completedClassName=\"barCompleted\"\n                                 labelClassName=\"barLabel\"\n                                 completed={40} customLabel={minted + \"/2000 Minted\"} />\n                </div>\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Drops;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/Viridian1EPassMethods.js",["154"],"import config from \"../local-dev-config\";\nimport vGPJSON from \"../abis/ViridianGenesisPack.json\";\nimport {Biconomy} from \"@biconomy/mexa\";\nimport Web3 from \"web3\";\nimport {useWeb3React} from \"@web3-react/core\";\n\nlet web3Wallet = new Web3(Web3.givenProvider);// || new Web3.providers.HttpProvider( \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"));\n//\nlet web3WS = new Web3(new Web3.providers.WebsocketProvider( \"wss://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"));\n//\nconst biconomy = new Biconomy(Web3.givenProvider || new Web3.providers.HttpProvider( \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"),{apiKey: \"TVCsgQVfk.a6031565-1cb6-40da-8a60-2ffec22e3bed\", debug: true});\n//\n// let biconomyWeb3 = new Web3(biconomy);\n\n// biconomy.onEvent(biconomy.READY, () => {\n//     // Initialize your dapp here like getting user accounts etc\n//     console.log(\"initialized\");\n// }).onEvent(biconomy.ERROR, (error, message) => {\n//     // Handle error while initializing mexa\n//     console.error(error);\n// });\n\n// export async function tokenURI(tokenId) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     //console.log(\"ABIMETHODS: \" + tokenId);\n//     let nft = vNFTABI.methods.tokenURI(tokenId).call();\n//\n//     //alert(nft);\n//\n//     return nft;\n// }\n//\n// export async function ownerOf(tokenId) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     //console.log(\"ABIMETHODS1: \" + tokenId);\n//     let owner = await vNFTABI.methods.ownerOf(tokenId).call();\n//\n//     //alert(nft);\n//\n//     return owner;\n// }\n//\n// export async function ownerOfNoReq(tokenId) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     //console.log(\"ABIMETHODS2: \" + tokenId);\n//     let owner = await vNFTABI.methods.ownerOf(tokenId).call();\n//\n//     //alert(nft);\n//\n//     return owner;\n// }\n//\n// export async function setApprovalForAll(from, exchangeAddress) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     return await vNFTABI.methods.setApprovalForAll(exchangeAddress, true).send({from: from});\n// }\n\nexport async function mint(from, numMint, setSuccess, setFailed, setMinting) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    //alert((100000000000000000 * numMint).toString());\n    try {\n        await vNFTABI.methods.mint(numMint, from).send({\n            from: from, value: (100000000000000000 * numMint).toString(),\n            //signatureType: biconomy.EIP712_SIGN\n        });\n\n        let vNFTABIWS = new web3WS.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n\n        await vNFTABIWS.events.Transfer({filter: {from: from}}).on('data', async function (event) {\n            setSuccess(true);\n            setFailed(false);\n            setMinting(false);\n        }).on('err', (e) => {console.error(e); setFailed(true); setMinting(false);});\n\n    } catch(e) {\n        setFailed(true);\n        setMinting(false);\n        console.error(e);\n    }\n}\n\nexport async function openPack(from, tokenId, setSuccess, setFailed, setMinting) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    //alert((100000000000000000 * numMint).toString());\n    try {\n        await vNFTABI.methods.openPack(tokenId).send({\n            from: from,\n            signatureType: biconomy.EIP712_SIGN\n        });\n\n        let vNFTABIWS = new web3WS.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n\n        await vNFTABIWS.events.Transfer({filter: {from: from}}).on('data', async function (event) {\n            setSuccess(true);\n            setFailed(false);\n            setMinting(false);\n        }).on('err', (e) => {console.error(e); setFailed(true); setMinting(false);});\n\n    } catch(e) {\n        setFailed(true);\n        setMinting(false);\n        console.error(e);\n    }\n}\n\n// export async function bridge(from, bridgeNFTs) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.rinkeby_contract_addresses.v1ep_contract;\n//\n//     let vNFTABI = new biconomyWeb3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     return await vNFTABI.methods.bridge(bridgeNFTs).send({from: from});\n// }\n\nexport async function totalSupply(provider) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    if (provider) {\n        const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n\n        let vNFTABI = new provider.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n        return await vNFTABI.methods.totalSupply().call();\n    }\n    //return await vNFTABI.methods.getNumNFTs().call();\n}\n\nexport async function getOwnedNFTs(from) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n    //alert(from)\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    let ownedNFTS = await vNFTABI.methods.getOwnedNFTs().call({from: from});\n    //alert(ownedNFTS);\n    return ownedNFTS;\n}\n\nexport async function tokenURI(tokenID, from) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n    //alert(from)\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    let ownedNFTS = await vNFTABI.methods.tokenURI(tokenID).call({from: from});\n    //alert(ownedNFTS);\n    return ownedNFTS;\n}\n\n//\n// export async function isApprovedForAll(owner, operator) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//\n//     return await vNFTABI.methods.isApprovedForAll(owner, operator).call();\n// }\n\n// export async function safeTransferFrom(from, to, tokenId) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//\n//     return await vNFTABI.methods.safeTransferFrom(from, to, tokenId).send({from: from});\n// }\n//\n// export async function burn(from, tokenId) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//\n//     return await vNFTABI.methods.burn(tokenId).send({from: from, signatureType: biconomy.EIP712_SIGN});\n// }","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/index.js",["155","156","157"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/index.js",["158","159","160","161","162","163","164"],"import React, { useState, Button } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport styles from \"./Footer.module.sass\";\nimport Group from \"./Group\";\nimport Image from \"../Image\";\n// import Form from \"../Form\";\n// import Theme from \"../Theme\";\n// import {HandleAddEmail} from '../../apis/EmailListAPI'\n// import config from '../../config.json'\n// import styles1 from \"../Form/Form.module.sass\";\nimport Icon from \"../Icon\";\n\nconst items = [\n  {\n    title: \"Viridian Exchange\",\n    menu: [\n      {\n        title: \"Home\",\n        url: \"/\",\n      },\n      {\n        title: \"Contact Us\",\n        url: \"mailto:contact@viridianexchange.com\",\n      },\n      {\n        title: \"FAQ\",\n        url: \"/faq\",\n      },\n\n    ],\n  },\n  {\n    title: \"Follow us\",\n    menu: [\n      {\n        title: \"Linkedin\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.linkedin.com/company/viridian-exchange/\"\n      },\n      {\n        title: \"Twitter\",\n        //url: \"/BuyCrypto\",\n        url: \"https://twitter.com/ViridianEx\"\n      },\n      {\n        title: \"Instagram\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.instagram.com/viridianexchange/\"\n      },\n      {\n        title: \"Facebook\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.facebook.com/Viridian-Exchange-106600915066707\"\n      },\n      {\n        title: \"Telegram\",\n        //url: \"/BuyCrypto\",\n        url: \"https://t.me/viridian_exchange\"\n      },\n    ],\n  },\n];\n\n\nconst Footers = () => {\n  const [email, setEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = React.useState(false);\n\n  const handleSubmit = (e) => {\n    alert();\n  };\n\n  const successfulMessage = () => {\n    if (successMessage) {\n      return <div style={{marginLeft: \"10px\"}}> <Icon name=\"check\" size=\"18\" fill={\"#BF9A36\"} /> <a>Sign Up Successful!</a></div>\n    }\n  };\n\n  return (\n    <footer className={styles.footer}>\n      <div className={cn(\"container\", styles.container)}>\n        <div className={styles.row}>\n          <div className={styles.col}>\n            <Link className={styles.logo} to=\"/\">\n              <Image\n                className={styles.pic}\n                src=\"/logo.svg\"\n                srcDark=\"/logo.svg\"\n                alt=\"Viridian Exchange\"\n              />\n            </Link>\n            <div className={styles.info}>The future of collectible exchange.</div>\n            {/*<div className={styles.version}>*/}\n            {/*  <div className={styles.details}>Dark theme</div>*/}\n            {/*  <Theme className=\"theme-big\" />*/}\n            {/*</div>*/}\n          </div>\n          <div className={styles.col}>\n            {items.map((x, index) => (\n              <Group className={styles.group} item={x} key={index} />\n            ))}\n          </div>\n          {/*<div className={styles.col}>*/}\n          {/*  <div className={styles.category}>Join Our Newsletter</div>*/}\n          {/*  <div className={styles.text}>*/}\n          {/*    Be the first to hear about new product updates and exclusive pack releases!*/}\n          {/*  </div>*/}\n          {/*  /!*<Form*!/*/}\n          {/*  /!*  className={styles.form}*!/*/}\n          {/*  /!*  setValue={setEmail}*!/*/}\n          {/*  /!*  click={() => {HandleAddEmail(email); setSuccessMessage(true)}}*!/*/}\n          {/*  /!*  placeholder=\"Enter your email\"*!/*/}\n          {/*  /!*  type=\"email\"*!/*/}\n          {/*  /!*  name=\"email\"*!/*/}\n          {/*  /!*>*!/*/}\n\n\n          {/*/!*<button className = {styles1.btn}*!/*/}\n          {/*/!*       type = \"submit\" inverted basic onClick={(e) => {HandleAddEmail(email); setSuccessMessage(true);}}>Sign up</button>*!/*/}\n\n\n\n          {/*  /!*</Form>*!/*/}\n          {/*  {successfulMessage()}*/}\n\n          {/*</div>*/}\n        </div>\n        <div>\n\n        </div>\n        <div className={styles.foot}>\n          <div className={styles.copyright}>\n            Copyright © 2021 Viridian Exchange Inc. All rights reserved\n          </div>\n          <div className={styles.note}>\n            We use cookies for better service. <a href=\"/#\">Accept</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footers;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Modal/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Image.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Icon.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js",["165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/Group/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Dropdown/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/Item/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Theme/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js",[],["180","181"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Open/index.js",["182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199"],"import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {totalSupply, mint, getOwnedNFTs, openPack, tokenURI} from \"../../smartContracts/Viridian1EPassMethods\"\n//import {useCryptoPrices} from \"react-realtime-crypto-prices\";\nimport {Breakpoint} from 'react-socks';\nimport {Carousel} from '3d-react-carousal';\nimport ReactLoading from \"react-loading\";\n\n// let slidez = [\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>];\n\nconst Open = (props) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState(0);\n    //const prices = useCryptoPrices([\"eth\"]);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [loadingOpening, setLoadingOpening] = useState(false);\n    const [showOpeningAnimation, setShowOpeningAnimation] = useState(false);\n    const [showOpenedCard, setShowOpenedCard] = useState(false);\n    const [slides, setSlides] = useState([]);\n    const [tokenIds, setTokenIds] = useState([]);\n\n    const [fetched, setFetched] = useState(false)\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        //alert(JSON.stringify(props));\n        if (props.account) {\n            //alert(await getOwnedNFTs(props.account));\n            if (!fetched) {\n                //alert('hi');\n               // alert('hi1');\n                //alert(await getOwnedNFTs(props.account));\n                //alert('hi3');\n                //setMinted(await totalSupply());\n\n\n                let nfts = await getOwnedNFTs(props.account);\n\n                //alert(\"NFTS: \" /+ JSON.stringify(nfts));\n\n                let slidesTemp = [];\n\n                let tID = [];\n\n                nfts.map(async (x, index) => {\n                    slidesTemp.push(<video autoPlay muted loop={true} playsInline style={{maxWidth: '60ex'}}>\n                        <source src='https://content.viridianexchange.com/videos/GenesisPackLoopCrop.mp4'\n                                type=\"video/mp4\"/>\n                    </video>);\n                    let uri = await tokenURI(x, props.account);\n                    tID.push(uri.split('/')[4]);\n                });\n\n                setSlides(slidesTemp);\n                slidesTemp = [];\n                setTokenIds(tID);\n                setFetched(true);\n            }\n        }\n        else {\n            setFetched(false);\n        }\n    }, [fetched, props]);\n\n    // let slides = [\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n    // ]\n\n    const callback = function(index){\n        console.log(\"callback\",index);\n        if (tokenIds.length <= 3) {\n            setCurrentIndex(index % tokenIds.length);\n        }\n        else {\n            setCurrentIndex(index);\n        }\n    }\n\n    const idParse = (id) => {\n        if (id) {\n            return \"#\" + id;\n        }\n        else {\n            return \"\";\n        }\n    }\n\n  return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                <p2 style={{color: 'grey'}}>Reveal the physically-backed NFT inside!</p2>\n                <h3 className={cn(\"h3\", styles.title)}>Open Viridian Genesis Packs</h3>\n                {/*{JSON.stringify(tokenIds)}*/}\n                {/*{JSON.stringify(slides.length)}*/}\n                {showOpenedCard && <div style={{textAlign: 'center'}}>\n                    <video autoPlay muted playsInline loop={true} style={{maxWidth: '100ex', borderRadius: '25px'}}>\n                        <source src='https://content.viridianexchange.com/videos/PikachuLoop.mp4'\n                                type=\"video/mp4\"/>\n                    </video></div>}\n\n                {showOpeningAnimation && !showOpenedCard &&\n                <div style={{textAlign: 'center'}}>\n                    <video autoPlay muted playsInline style={{maxWidth: '100ex', borderRadius: '25px'}}>\n                        <source src='https://content.viridianexchange.com/videos/PackOpenAnimation.mp4'\n                                type=\"video/mp4\"/>\n                    </video></div>}\n\n                {slides.length > 0 && !showOpeningAnimation && <Breakpoint small down>\n                    <div style={{textAlign: 'center'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint> }\n                {slides.length > 0 && !showOpeningAnimation && <Breakpoint medium up>\n                    <div style={{textAlign: 'center', minHeight: '65ex'}}>\n                        <Carousel slides={slides} onSlideChange={callback} arrows={true}/>\n                    </div>\n                </Breakpoint>}\n\n                {slides.length === 0 &&\n                    <div style={{textAlign: 'center', marginTop: '3ex'}}>\n                        <h2 style={{textAlign: 'center', color: 'gray', marginBottom: '2ex'}}>\n                            Purchase a Viridian Genesis Pack on secondary to open\n                        </h2>\n                        <a\n                        href=\"https://opensea.io\"\n                        target=\"_blank\" rel=\"noopener noreferrer\"\n                           style={{marginRight: '1ex'}}\n                        >\n                            <button\n                                className={cn(styles.link, {\n                                })}\n                            >\n                                <img style={{maxWidth: '5ex', marginRight: '1.5ex', marginLeft: '-.5ex'}} src='https://opensea.io/static/images/logos/opensea.svg'/>\n                                Opensea\n                            </button>\n                        </a>\n\n                        <a\n                           href=\"https://looksrare.org\"\n                           target=\"_blank\" rel=\"noopener noreferrer\"\n                            style={{marginLeft: '1ex'}}\n                        >\n                            <button\n                                className={cn(styles.link, {\n                                })}\n                            >\n                                <img style={{maxWidth: '6.8ex', marginLeft: '-2ex'}} src='https://logowik.com/content/uploads/images/looksrare9736.jpg'/>\n                                Looksrare\n                            </button>\n                        </a>\n                    </div>\n                }\n                {/*<h2 style={{marginTop: '2ex', textAlign: 'center'}}>*/}\n                {/*    Open 🃏*/}\n                {/*</h2>*/}\n                {/*<h3 style={{marginBottom: '2ex', textAlign: 'center'}}>*/}\n                {/*    <div className={styles.wallet}>*/}\n                {/*        <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                {/*        {values[0]}*/}\n                {/*    </div>*/}\n                {/*    {prices.eth && <p2 style={{color: 'grey'}}>*/}\n                {/*        ${((values[0] * prices.eth) * 100) / 100}*/}\n                {/*    </p2>}*/}\n                {/*</h3>*/}\n                {slides.length > 0 && <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                    {/*{JSON.stringify(props)}*/}\n                    {loadingOpening && !showOpeningAnimation && <button\n                        className={cn(styles.link, {\n                        })}\n                        style={{color: 'black'}}\n                    >\n                        <ReactLoading type={'spin'} color={'#bf9a36'} height={'25%'} width={'25%'} /> <div style={{marginLeft: '6ex', marginTop: '-2.75ex', marginBottom: '1ex'}}>Opening...</div>\n                    </button>}\n\n                    {!loadingOpening && <button\n                        className={cn(styles.link, {\n                        })}\n                        onClick={async () => {/*await openPack(props.account, values[0])*/ setLoadingOpening(true); setShowOpeningAnimation(true); await setTimeout(function() { setShowOpenedCard(true) }, 11500);}}\n                    >\n                        <img style={{width: '4ex', marginTop: '-.5ex', height: '6ex', marginRight: '1ex'}}\n                             src='/trading_card_icon.svg'\n                             alt='ETH' /> {\"Open Pack \" + idParse(tokenIds[currentIndex])}\n                    </button>}\n                </div>}\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Open;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Verify/index.js",["200","201","202","203","204","205","206","207","208","209","210","211"],"import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {totalSupply, mint} from \"../../smartContracts/Viridian1EPassMethods\"\nimport {useCryptoPrices} from \"react-realtime-crypto-prices\";\nimport {Breakpoint} from 'react-socks';\nimport {Carousel} from '3d-react-carousal';\n\nlet slides = [\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>];\n\nconst Drops = (props) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState(0);\n    const prices = useCryptoPrices([\"eth\"]);\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        setMinted(await totalSupply());\n    }, []);\n\n    // let slides = [\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n    // ]\n\n    const callback = function(index){\n        console.log(\"callback\",index);\n    }\n\n  return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                <h3 className={cn(\"h3\", styles.title)}>Verify Viridian Genesis Pack</h3>\n                <Breakpoint small down>\n                    <div style={{textAlign: 'center'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint>\n                <Breakpoint medium up>\n                    <div style={{textAlign: 'center',minHeight: '65ex'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint>\n                {/*<h2 style={{marginTop: '2ex', textAlign: 'center'}}>*/}\n                {/*    Open 🃏*/}\n                {/*</h2>*/}\n                {/*<h3 style={{marginBottom: '2ex', textAlign: 'center'}}>*/}\n                {/*    <div className={styles.wallet}>*/}\n                {/*        <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                {/*        {values[0]}*/}\n                {/*    </div>*/}\n                {/*    {prices.eth && <p2 style={{color: 'grey'}}>*/}\n                {/*        ${((values[0] * prices.eth) * 100) / 100}*/}\n                {/*    </p2>}*/}\n                {/*</h3>*/}\n                <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                    {/*{JSON.stringify(props)}*/}\n                    <button\n                        className={cn(styles.link, {\n                            [styles.active]: true,\n                        })}\n                        onClick={async () => {await mint(props.account, values[0])}}\n                    >\n                        Verify ✅\n                    </button>\n                </div>\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Drops;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/WalletSelector/index.js",["212","213","214","215","216","217","218","219","220","221","222"],"import React, {useEffect} from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./SignupPrompt.module.sass\";\nimport { useWeb3React } from '@web3-react/core'\nimport { Injected, WalletConnect, CoinbaseWallet } from \"../../utils/connectors\";\nimport {switchNetwork} from \"../../utils/walletHandlers\";\nimport Web3Modal from \"web3modal\";\nimport Web3 from \"web3\";\n\n//TODO: PASS IN USERINFO AND UPDATE THIS WHEN PUSHED TO DYNAMO\n// SET FETCHED PROP SO WHEN THAT CHANGES, FETCHES THE USER AND SETS IT TO USERINFO\nconst WalletSelector = ({ className }) => {\n\n  // return (\n  //   <div className={cn(className, styles.transfer)} style={{textAlign: 'center', marginTop: '-2ex'}}>\n  //     <div className={cn(\"h4\", styles.info)}>Wallet Providers</div>\n  //       <div className={styles.btns}>\n  //           <a className={cn(\"button-stroke\", styles.button)} onClick={() => { activate(Injected).then(() => {\n  //               localStorage.setItem('connection', 'mm');\n  //               alert(account);\n  //               localStorage.setItem('lastAddConn', account);\n  //\n  //           }); }}>\n  //               <img src='/images/content/metamask-fox.svg' style={{maxWidth: '5ex', marginRight: '2ex', marginLeft: '-4ex'}}/>Metamask</a>\n  //           <a className={cn(\"button-stroke\", styles.button)} onClick={() => {activate(WalletConnect).then(() => {\n  //               localStorage.setItem('connection', 'wc');\n  //               localStorage.setItem('lastAddConn', account);\n  //           }) }}>\n  //               <img src='https://d1nxzqpcg2bym0.cloudfront.net/google_play/com.connectwallet.protocol/a7569c36-9df9-11eb-b409-2380f9a26ccc/128x128'\n  //                    style={{maxWidth: '5ex', marginRight: '2ex'}}/>WalletConnect</a>\n  //           <a className={cn(\"button-stroke\", styles.button)} onClick={() => { activate(CoinbaseWallet).then(() => {\n  //               localStorage.setItem('connection', 'cb');\n  //               localStorage.setItem('lastAddConn', account);\n  //           }) }}>\n  //               <img src='/cb-wallet.svg'\n  //                    style={{maxWidth: '5ex', marginRight: '2ex', marginLeft: '-5.5ex'}}/>Coinbase</a>\n  //       </div>\n  //       <div style={{marginTop: '1ex'}}>\n  //     <a className={styles.text} target=\"_blank\" rel=\"noopener noreferrer\" href='https://www.youtube.com/watch?v=YVgfHZMFFFQ&t=37s'>\n  //       What is a crypto wallet?\n  //     </a>\n  //       </div>\n  //   </div>\n  // );\n};\n\nexport default WalletSelector;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/connectors.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/walletHandlers.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/utils.js",[],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":1,"column":60,"nodeType":"229","messageId":"230","endLine":1,"endColumn":70},{"ruleId":"227","severity":1,"message":"231","line":11,"column":10,"nodeType":"229","messageId":"230","endLine":11,"endColumn":22},{"ruleId":"227","severity":1,"message":"232","line":12,"column":10,"nodeType":"229","messageId":"230","endLine":12,"endColumn":20},{"ruleId":"227","severity":1,"message":"233","line":13,"column":10,"nodeType":"229","messageId":"230","endLine":13,"endColumn":22},{"ruleId":"227","severity":1,"message":"234","line":14,"column":9,"nodeType":"229","messageId":"230","endLine":14,"endColumn":17},{"ruleId":"227","severity":1,"message":"235","line":15,"column":9,"nodeType":"229","messageId":"230","endLine":15,"endColumn":28},{"ruleId":"227","severity":1,"message":"236","line":16,"column":9,"nodeType":"229","messageId":"230","endLine":16,"endColumn":31},{"ruleId":"227","severity":1,"message":"237","line":17,"column":9,"nodeType":"229","messageId":"230","endLine":17,"endColumn":26},{"ruleId":"227","severity":1,"message":"238","line":18,"column":9,"nodeType":"229","messageId":"230","endLine":18,"endColumn":25},{"ruleId":"227","severity":1,"message":"239","line":22,"column":16,"nodeType":"229","messageId":"230","endLine":22,"endColumn":31},{"ruleId":"227","severity":1,"message":"240","line":68,"column":29,"nodeType":"229","messageId":"230","endLine":68,"endColumn":47},{"ruleId":"227","severity":1,"message":"241","line":75,"column":12,"nodeType":"229","messageId":"230","endLine":75,"endColumn":19},{"ruleId":"227","severity":1,"message":"242","line":78,"column":12,"nodeType":"229","messageId":"230","endLine":78,"endColumn":20},{"ruleId":"227","severity":1,"message":"243","line":95,"column":11,"nodeType":"229","messageId":"230","endLine":95,"endColumn":24},{"ruleId":"227","severity":1,"message":"244","line":100,"column":11,"nodeType":"229","messageId":"230","endLine":100,"endColumn":22},{"ruleId":"227","severity":1,"message":"245","line":125,"column":11,"nodeType":"229","messageId":"230","endLine":125,"endColumn":22},{"ruleId":"227","severity":1,"message":"246","line":139,"column":11,"nodeType":"229","messageId":"230","endLine":139,"endColumn":24},{"ruleId":"247","severity":1,"message":"248","line":166,"column":15,"nodeType":"249","endLine":173,"endColumn":6},{"ruleId":"247","severity":1,"message":"248","line":175,"column":15,"nodeType":"249","endLine":179,"endColumn":6},{"ruleId":"247","severity":1,"message":"250","line":209,"column":8,"nodeType":"251","endLine":209,"endColumn":18,"suggestions":"252"},{"ruleId":"227","severity":1,"message":"253","line":2,"column":10,"nodeType":"229","messageId":"230","endLine":2,"endColumn":20},{"ruleId":"227","severity":1,"message":"233","line":10,"column":9,"nodeType":"229","messageId":"230","endLine":10,"endColumn":21},{"ruleId":"227","severity":1,"message":"254","line":11,"column":10,"nodeType":"229","messageId":"230","endLine":11,"endColumn":18},{"ruleId":"227","severity":1,"message":"255","line":11,"column":20,"nodeType":"229","messageId":"230","endLine":11,"endColumn":33},{"ruleId":"227","severity":1,"message":"256","line":11,"column":35,"nodeType":"229","messageId":"230","endLine":11,"endColumn":49},{"ruleId":"227","severity":1,"message":"257","line":12,"column":10,"nodeType":"229","messageId":"230","endLine":12,"endColumn":23},{"ruleId":"227","severity":1,"message":"258","line":15,"column":12,"nodeType":"229","messageId":"230","endLine":15,"endColumn":23},{"ruleId":"227","severity":1,"message":"259","line":15,"column":25,"nodeType":"229","messageId":"230","endLine":15,"endColumn":39},{"ruleId":"227","severity":1,"message":"260","line":16,"column":12,"nodeType":"229","messageId":"230","endLine":16,"endColumn":36},{"ruleId":"227","severity":1,"message":"261","line":16,"column":38,"nodeType":"229","messageId":"230","endLine":16,"endColumn":65},{"ruleId":"227","severity":1,"message":"262","line":19,"column":7,"nodeType":"229","messageId":"230","endLine":19,"endColumn":11},{"ruleId":"247","severity":1,"message":"248","line":41,"column":13,"nodeType":"249","endLine":47,"endColumn":4},{"ruleId":"227","severity":1,"message":"233","line":12,"column":10,"nodeType":"229","messageId":"230","endLine":12,"endColumn":22},{"ruleId":"227","severity":1,"message":"257","line":13,"column":10,"nodeType":"229","messageId":"230","endLine":13,"endColumn":23},{"ruleId":"227","severity":1,"message":"263","line":21,"column":37,"nodeType":"229","messageId":"230","endLine":21,"endColumn":63},{"ruleId":"227","severity":1,"message":"264","line":22,"column":32,"nodeType":"229","messageId":"230","endLine":22,"endColumn":53},{"ruleId":"227","severity":1,"message":"265","line":23,"column":34,"nodeType":"229","messageId":"230","endLine":23,"endColumn":57},{"ruleId":"247","severity":1,"message":"248","line":29,"column":15,"nodeType":"249","endLine":31,"endColumn":6},{"ruleId":"227","severity":1,"message":"233","line":5,"column":9,"nodeType":"229","messageId":"230","endLine":5,"endColumn":21},{"ruleId":"227","severity":1,"message":"266","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"267","line":2,"column":16,"nodeType":"229","messageId":"230","endLine":2,"endColumn":23},{"ruleId":"227","severity":1,"message":"268","line":5,"column":8,"nodeType":"229","messageId":"230","endLine":5,"endColumn":12},{"ruleId":"227","severity":1,"message":"269","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":33},{"ruleId":"227","severity":1,"message":"270","line":67,"column":10,"nodeType":"229","messageId":"230","endLine":67,"endColumn":15},{"ruleId":"227","severity":1,"message":"271","line":67,"column":17,"nodeType":"229","messageId":"230","endLine":67,"endColumn":25},{"ruleId":"227","severity":1,"message":"272","line":68,"column":26,"nodeType":"229","messageId":"230","endLine":68,"endColumn":43},{"ruleId":"227","severity":1,"message":"273","line":70,"column":9,"nodeType":"229","messageId":"230","endLine":70,"endColumn":21},{"ruleId":"227","severity":1,"message":"274","line":74,"column":9,"nodeType":"229","messageId":"230","endLine":74,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":76,"column":98,"nodeType":"277","endLine":76,"endColumn":101},{"ruleId":"227","severity":1,"message":"278","line":8,"column":8,"nodeType":"229","messageId":"230","endLine":8,"endColumn":12},{"ruleId":"227","severity":1,"message":"279","line":9,"column":8,"nodeType":"229","messageId":"230","endLine":9,"endColumn":14},{"ruleId":"227","severity":1,"message":"280","line":11,"column":8,"nodeType":"229","messageId":"230","endLine":11,"endColumn":14},{"ruleId":"227","severity":1,"message":"281","line":14,"column":8,"nodeType":"229","messageId":"230","endLine":14,"endColumn":20},{"ruleId":"227","severity":1,"message":"282","line":16,"column":3,"nodeType":"229","messageId":"230","endLine":16,"endColumn":18},{"ruleId":"227","severity":1,"message":"283","line":17,"column":3,"nodeType":"229","messageId":"230","endLine":17,"endColumn":22},{"ruleId":"227","severity":1,"message":"284","line":20,"column":8,"nodeType":"229","messageId":"230","endLine":20,"endColumn":29},{"ruleId":"227","severity":1,"message":"233","line":22,"column":10,"nodeType":"229","messageId":"230","endLine":22,"endColumn":22},{"ruleId":"227","severity":1,"message":"285","line":23,"column":8,"nodeType":"229","messageId":"230","endLine":23,"endColumn":25},{"ruleId":"227","severity":1,"message":"286","line":24,"column":8,"nodeType":"229","messageId":"230","endLine":24,"endColumn":17},{"ruleId":"227","severity":1,"message":"287","line":44,"column":5,"nodeType":"229","messageId":"230","endLine":44,"endColumn":13},{"ruleId":"227","severity":1,"message":"288","line":45,"column":5,"nodeType":"229","messageId":"230","endLine":45,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":52,"column":13,"nodeType":"249","endLine":58,"endColumn":4},{"ruleId":"247","severity":1,"message":"289","line":58,"column":6,"nodeType":"251","endLine":58,"endColumn":8,"suggestions":"290"},{"ruleId":"227","severity":1,"message":"291","line":73,"column":9,"nodeType":"229","messageId":"230","endLine":73,"endColumn":14},{"ruleId":"223","replacedBy":"292"},{"ruleId":"225","replacedBy":"293"},{"ruleId":"227","severity":1,"message":"294","line":3,"column":8,"nodeType":"229","messageId":"230","endLine":3,"endColumn":19},{"ruleId":"227","severity":1,"message":"295","line":5,"column":9,"nodeType":"229","messageId":"230","endLine":5,"endColumn":27},{"ruleId":"227","severity":1,"message":"296","line":5,"column":29,"nodeType":"229","messageId":"230","endLine":5,"endColumn":34},{"ruleId":"227","severity":1,"message":"297","line":6,"column":9,"nodeType":"229","messageId":"230","endLine":6,"endColumn":20},{"ruleId":"227","severity":1,"message":"298","line":6,"column":22,"nodeType":"229","messageId":"230","endLine":6,"endColumn":26},{"ruleId":"227","severity":1,"message":"299","line":6,"column":42,"nodeType":"229","messageId":"230","endLine":6,"endColumn":50},{"ruleId":"227","severity":1,"message":"300","line":33,"column":12,"nodeType":"229","messageId":"230","endLine":33,"endColumn":25},{"ruleId":"227","severity":1,"message":"301","line":33,"column":27,"nodeType":"229","messageId":"230","endLine":33,"endColumn":43},{"ruleId":"227","severity":1,"message":"302","line":34,"column":12,"nodeType":"229","messageId":"230","endLine":34,"endColumn":18},{"ruleId":"227","severity":1,"message":"303","line":34,"column":20,"nodeType":"229","messageId":"230","endLine":34,"endColumn":29},{"ruleId":"227","severity":1,"message":"304","line":35,"column":12,"nodeType":"229","messageId":"230","endLine":35,"endColumn":18},{"ruleId":"227","severity":1,"message":"305","line":35,"column":20,"nodeType":"229","messageId":"230","endLine":35,"endColumn":29},{"ruleId":"227","severity":1,"message":"306","line":46,"column":11,"nodeType":"229","messageId":"230","endLine":46,"endColumn":15},{"ruleId":"227","severity":1,"message":"307","line":47,"column":11,"nodeType":"229","messageId":"230","endLine":47,"endColumn":14},{"ruleId":"227","severity":1,"message":"308","line":48,"column":11,"nodeType":"229","messageId":"230","endLine":48,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":50,"column":15,"nodeType":"249","endLine":88,"endColumn":6},{"ruleId":"309","severity":1,"message":"310","line":163,"column":33,"nodeType":"277","endLine":163,"endColumn":165},{"ruleId":"309","severity":1,"message":"310","line":177,"column":33,"nodeType":"277","endLine":177,"endColumn":154},{"ruleId":"227","severity":1,"message":"294","line":3,"column":8,"nodeType":"229","messageId":"230","endLine":3,"endColumn":19},{"ruleId":"227","severity":1,"message":"295","line":5,"column":9,"nodeType":"229","messageId":"230","endLine":5,"endColumn":27},{"ruleId":"227","severity":1,"message":"296","line":5,"column":29,"nodeType":"229","messageId":"230","endLine":5,"endColumn":34},{"ruleId":"227","severity":1,"message":"300","line":29,"column":12,"nodeType":"229","messageId":"230","endLine":29,"endColumn":25},{"ruleId":"227","severity":1,"message":"301","line":29,"column":27,"nodeType":"229","messageId":"230","endLine":29,"endColumn":43},{"ruleId":"227","severity":1,"message":"303","line":30,"column":20,"nodeType":"229","messageId":"230","endLine":30,"endColumn":29},{"ruleId":"227","severity":1,"message":"304","line":31,"column":12,"nodeType":"229","messageId":"230","endLine":31,"endColumn":18},{"ruleId":"227","severity":1,"message":"311","line":32,"column":11,"nodeType":"229","messageId":"230","endLine":32,"endColumn":17},{"ruleId":"227","severity":1,"message":"306","line":34,"column":11,"nodeType":"229","messageId":"230","endLine":34,"endColumn":15},{"ruleId":"227","severity":1,"message":"307","line":35,"column":11,"nodeType":"229","messageId":"230","endLine":35,"endColumn":14},{"ruleId":"227","severity":1,"message":"308","line":36,"column":11,"nodeType":"229","messageId":"230","endLine":36,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":38,"column":15,"nodeType":"249","endLine":40,"endColumn":6},{"ruleId":"227","severity":1,"message":"312","line":1,"column":8,"nodeType":"229","messageId":"230","endLine":1,"endColumn":13},{"ruleId":"227","severity":1,"message":"266","line":1,"column":16,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"313","line":2,"column":8,"nodeType":"229","messageId":"230","endLine":2,"endColumn":10},{"ruleId":"227","severity":1,"message":"314","line":3,"column":8,"nodeType":"229","messageId":"230","endLine":3,"endColumn":14},{"ruleId":"227","severity":1,"message":"233","line":4,"column":10,"nodeType":"229","messageId":"230","endLine":4,"endColumn":22},{"ruleId":"227","severity":1,"message":"254","line":5,"column":10,"nodeType":"229","messageId":"230","endLine":5,"endColumn":18},{"ruleId":"227","severity":1,"message":"255","line":5,"column":20,"nodeType":"229","messageId":"230","endLine":5,"endColumn":33},{"ruleId":"227","severity":1,"message":"256","line":5,"column":35,"nodeType":"229","messageId":"230","endLine":5,"endColumn":49},{"ruleId":"227","severity":1,"message":"257","line":6,"column":9,"nodeType":"229","messageId":"230","endLine":6,"endColumn":22},{"ruleId":"227","severity":1,"message":"286","line":7,"column":8,"nodeType":"229","messageId":"230","endLine":7,"endColumn":17},{"ruleId":"227","severity":1,"message":"278","line":8,"column":8,"nodeType":"229","messageId":"230","endLine":8,"endColumn":12},"no-native-reassign",["315"],"no-negated-in-lhs",["316"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Web3Provider' is defined but never used.","'Breakpoint' is defined but never used.","'useWeb3React' is defined but never used.","'Biconomy' is defined but never used.","'WalletLinkConnector' is defined but never used.","'WalletConnectConnector' is defined but never used.","'InjectedConnector' is defined but never used.","'NetworkConnector' is defined but never used.","'truncateAddress' is defined but never used.","'setBiconomyFetched' is assigned a value but never used.","'network' is assigned a value but never used.","'verified' is assigned a value but never used.","'handleNetwork' is assigned a value but never used.","'handleInput' is assigned a value but never used.","'signMessage' is assigned a value but never used.","'verifyMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'disconnect' and 'error'. Either include them or remove the dependency array.","ArrayExpression",["317"],"'withRouter' is defined but never used.","'Injected' is defined but never used.","'WalletConnect' is defined but never used.","'CoinbaseWallet' is defined but never used.","'switchNetwork' is defined but never used.","'networkName' is assigned a value but never used.","'setNetworkName' is assigned a value but never used.","'visibleModalWrongNetwork' is assigned a value but never used.","'setVisibleModalWrongNetwork' is assigned a value but never used.","'web3' is assigned a value but never used.","'setWhitelistMintingEnabled' is assigned a value but never used.","'setAddressOnWhitelist' is assigned a value but never used.","'setPublicMintingEnabled' is assigned a value but never used.","'useEffect' is defined but never used.","'NavLink' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setSuccessMessage' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'successfulMessage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Web3' is defined but never used.","'config' is defined but never used.","'vTJSON' is defined but never used.","'ReactLoading' is defined but never used.","'useCryptoPrices' is defined but never used.","'CryptoPriceProvider' is defined but never used.","'WalletConnectProvider' is defined but never used.","'CoinbaseWalletSDK' is defined but never used.","'Web3Modal' is defined but never used.","'provider' is defined but never used.","'selectedAccount' is defined but never used.","React Hook useEffect has a missing dependency: 'account'. Either include it or remove the dependency array.",["318"],"'round' is assigned a value but never used.",["315"],["316"],"'ProgressBar' is defined but never used.","'getTrackBackground' is defined but never used.","'Range' is defined but never used.","'totalSupply' is defined but never used.","'mint' is defined but never used.","'openPack' is defined but never used.","'initialLoaded' is assigned a value but never used.","'setInitialLoaded' is assigned a value but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'minted' is assigned a value but never used.","'setMinted' is assigned a value but never used.","'STEP' is assigned a value but never used.","'MIN' is assigned a value but never used.","'MAX' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'prices' is assigned a value but never used.","'React' is defined but never used.","'cn' is defined but never used.","'styles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},"Update the dependencies array to be: [disconnect, error, provider]",{"range":"323","text":"324"},"Update the dependencies array to be: [account]",{"range":"325","text":"326"},[7353,7363],"[disconnect, error, provider]",[2195,2197],"[account]"]