[{"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/index.js":"1","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/reportWebVitals.js":"2","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js":"3","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/local-dev-config.js":"4","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js":"5","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/index.js":"6","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Drops/index.js":"7","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/Viridian1EPassMethods.js":"8","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/index.js":"9","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/index.js":"10","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/index.js":"11","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Modal/index.js":"12","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Image.js":"13","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Icon.js":"14","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js":"15","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/Group/index.js":"16","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Dropdown/index.js":"17","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/Item/index.js":"18","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Theme/index.js":"19","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js":"20"},{"size":500,"mtime":1643648444584,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1643655018399,"results":"23","hashOfConfig":"22"},{"size":11930,"mtime":1644001823921,"results":"24","hashOfConfig":"22"},{"size":1839,"mtime":1644080988759,"results":"25","hashOfConfig":"22"},{"size":4105,"mtime":1643653447859,"results":"26","hashOfConfig":"22"},{"size":145,"mtime":1643653269634,"results":"27","hashOfConfig":"22"},{"size":6759,"mtime":1643739526194,"results":"28","hashOfConfig":"22"},{"size":4467,"mtime":1644081918303,"results":"29","hashOfConfig":"22"},{"size":5334,"mtime":1644013874598,"results":"30","hashOfConfig":"22"},{"size":4169,"mtime":1643655591244,"results":"31","hashOfConfig":"22"},{"size":11105,"mtime":1641160069679,"results":"32","hashOfConfig":"22"},{"size":1494,"mtime":1643653317419,"results":"33","hashOfConfig":"22"},{"size":379,"mtime":1637244256672,"results":"34","hashOfConfig":"22"},{"size":28130,"mtime":1637244256670,"results":"35","hashOfConfig":"22"},{"size":10773,"mtime":1643656052612,"results":"36","hashOfConfig":"22"},{"size":1068,"mtime":1624424612627,"results":"37","hashOfConfig":"22"},{"size":1281,"mtime":1632849901986,"results":"38","hashOfConfig":"22"},{"size":708,"mtime":1637244256731,"results":"39","hashOfConfig":"22"},{"size":691,"mtime":1624424612647,"results":"40","hashOfConfig":"22"},{"size":4564,"mtime":1644081971010,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"sqqznx",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/index.js",[],["87","88"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/reportWebVitals.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/local-dev-config.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js",["125","126","127","128","129"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n// import {tokenURI, ownerOfNoReq} from \"../../smartContracts/ViridianNFTMethods\";\n// import {tokenPackURI, ownerOfPackNoReq} from \"../../smartContracts/ViridianPackMethods\";\n// import ReactLoading from 'react-loading';\n// import Image from \"../Image\";\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\n\nconst Page = ({ setPromptInstallMetamask, users, ownedNFTs, ownedPacks, nfts, filteredNfts, setFilteredNFTs, children, account, setAccount, connected, setConnected, userInfo, setUserInfo, ethBalance, setEthBalance, vextBalance, setVextBalance }) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [networkName, setNetworkName] = useState(\"peen\");\n    const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n    // console.log(networkName === \"ropsten\");\n    // if(networkName === \"ropsten\") {\n\n  useEffect(async () => {\n    //window.scrollTo(0, 0);\n    clearAllBodyScrollLocks();\n\n    setNetworkName(await web3.eth.net.getNetworkType());\n  }, [account]);\n\n  //if (initialLoaded) {\n      return (\n          <div className={styles.page}>\n              {(networkName !== 'ropsten' && networkName !== '') && <Modal\n                  visible={visibleModalWrongNetwork}\n                  onClose={() => {\n                      setVisibleModalWrongNetwork(false);\n                      //history.push(\"/\");\n                  }}\n              >\n              </Modal>}\n              {/*{account}*/}\n              {/*{JSON.stringify(location.state)}*/}\n              {/*{JSON.stringify(nfts)}*/}\n              {/*{JSON.stringify(initialLoaded)}*/}\n              <Header setPromptInstallMetamask={setPromptInstallMetamask} vextBalance={vextBalance} setVextBalance={setVextBalance} ethBalance={ethBalance} setEthBalance={setEthBalance} account={account}\n                      setAccount={setAccount} connected={connected} setConnected={setConnected} />\n              <div className={styles.inner}>{children}</div>\n              <Footer/>\n          </div>\n      );\n  //}\n  // else {\n  //     return (\n  //         <div className={styles.page}>\n  //             {account}\n  //             {JSON.stringify(location.state)}\n  //             {/*{JSON.stringify(nfts)}*/}\n  //             {JSON.stringify(initialLoaded)}\n  //             <Header nfts={nfts} filteredNfts={filteredNfts} setFilteredNFTs={setFilteredNFTs}\n  //                     vextBalance={vextBalance} setVextBalance={setVextBalance} account={account}\n  //                     setAccount={setAccount} connected={connected} setConnected={setConnected} userInfo={userInfo}\n  //                     setUserInfo={setUserInfo}/>\n  //             <div style={{display: 'flex',\n  //                 justifyContent: 'center',\n  //                 alignItems: 'center',\n  //                 position: 'relative',\n  //                 marginTop: '20ex', marginBottom: '20ex'}}>\n  //                 <ReactLoading type={'spin'} color={'#bf9a36'} height={'10%'} width={'10%'} />\n  //             </div>\n  //             <div style={{display: 'flex',\n  //                 justifyContent: 'center',\n  //                 position: 'absolute',\n  //                 alignItems: 'center',\n  //                 top: '26.3%',\n  //                 left: '40.656%', transform: 'scale(.36, .36)'}}>\n  //                 <Image\n  //                     style={{maxWidth: '1ex', maxHeight: '1ex'}}\n  //                     src=\"/logo.svg\"\n  //                     srcDark=\"/logo.svg\"\n  //                     alt=\"Viridian Exchange\"\n  //                 />\n  //             </div>\n  //             <Footer/>\n  //         </div>\n  //     )\n  // }\n};\n\nexport default Page;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Drops/index.js",["130","131","132"],"import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {getNumNFTs, mint} from \"../../smartContracts/Viridian1EPassMethods\"\nimport {useCryptoPrices} from \"react-realtime-crypto-prices\";\nimport {Breakpoint} from 'react-socks';\n\nconst Drops = (props) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState(0);\n    const prices = useCryptoPrices([\"eth\"]);\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        setMinted(await getNumNFTs());\n    }, []);\n\n  return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                <p2 style={{color: 'grey'}}>Recieve a card-backed nft from the 1st edition Pokemon booster box break, along with platform perks!</p2>\n                <h3 className={cn(\"h3\", styles.title)}>Mint Viridian 1st Edition Pass</h3>\n                <Breakpoint small down>\n                    <div style={{textAlign: 'center'}}>\n                        <video autoPlay loop muted playsInline style={{marginTop: '0ex', maxWidth: '40ex', borderRadius: '25px'}}>\n                            <source src='https://d4xub33rt3s5u.cloudfront.net/passVidGoodLoop.mp4' type=\"video/mp4\"/>\n                        </video>\n                    </div>\n                </Breakpoint>\n                <Breakpoint medium up>\n                    <div style={{textAlign: 'center'}}>\n                        <video autoPlay loop muted playsInline style={{marginTop: '-4ex', maxWidth: '90ex', borderRadius: '25px'}}>\n                            <source src='https://d4xub33rt3s5u.cloudfront.net/passVidGoodLoop.mp4' type=\"video/mp4\"/>\n                        </video>\n                    </div>\n                </Breakpoint>\n                <h2 style={{marginTop: '2ex', textAlign: 'center'}}>\n                    Number to Mint\n                </h2>\n                <Range\n                    values={values}\n                    step={STEP}\n                    min={MIN}\n                    max={MAX}\n                    onChange={(values) => {setValues(values);}}\n                    renderTrack={({ props, children }) => (\n                        <div\n                            onMouseDown={props.onMouseDown}\n                            onTouchStart={props.onTouchStart}\n                            style={{\n                                ...props.style,\n                                height: \"36px\",\n                                display: \"flex\",\n                                width: \"100%\",\n                            }}\n                        >\n                            <div\n                                ref={props.ref}\n                                style={{\n                                    height: \"8px\",\n                                    width: \"100%\",\n                                    borderRadius: \"4px\",\n                                    background: getTrackBackground({\n                                        values,\n                                        colors: [\"#3772FF\", \"#E6E8EC\"],\n                                        min: MIN,\n                                        max: MAX,\n                                    }),\n                                    alignSelf: \"center\",\n                                }}\n                            >\n                                {children}\n                            </div>\n                        </div>\n                    )}\n                    renderThumb={({ props, isDragged }) => (\n                        <div\n                            {...props}\n                            style={{\n                                ...props.style,\n                                height: \"24px\",\n                                width: \"24px\",\n                                borderRadius: \"50%\",\n                                backgroundColor: \"#3772FF\",\n                                border: \"4px solid #FCFCFD\",\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <div\n                                style={{\n                                    position: \"absolute\",\n                                    top: \"-33px\",\n                                    color: \"#fff\",\n                                    fontWeight: \"600\",\n                                    fontSize: \"14px\",\n                                    lineHeight: \"18px\",\n                                    fontFamily: \"Poppins\",\n                                    padding: \"4px 8px\",\n                                    borderRadius: \"8px\",\n                                    backgroundColor: \"#141416\",\n                                }}\n                            >\n                                {values[0]}\n                            </div>\n                        </div>\n                    )}\n                />\n                <h3 style={{marginBottom: '2ex', textAlign: 'center'}}>\n                    <div className={styles.wallet}>\n                        <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n                        {values[0]}\n                    </div>\n                    {prices.eth && <p2 style={{color: 'grey'}}>\n                        ${((values[0] * prices.eth) * 100) / 100}\n                    </p2>}\n                </h3>\n                <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                    {/*{JSON.stringify(props)}*/}\n                    <button\n                        className={cn(styles.link, {\n                            [styles.active]: true,\n                        })}\n                        onClick={async () => {await mint(props.account, values[0])}}\n                    >\n                        MINT 💎\n                    </button>\n                </div>\n                <div style={{textAlign: 'center', marginTop: '3ex'}}>\n                    <ProgressBar barContainerClassName=\"barContainer\"\n                                 completedClassName=\"barCompleted\"\n                                 labelClassName=\"barLabel\"\n                                 completed={40} customLabel={minted + \"/396 Minted\"} />\n                </div>\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Drops;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/Viridian1EPassMethods.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/index.js",["133","134","135"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/index.js",["136","137","138","139","140","141","142"],"import React, { useState, Button } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport styles from \"./Footer.module.sass\";\nimport Group from \"./Group\";\nimport Image from \"../Image\";\n// import Form from \"../Form\";\n// import Theme from \"../Theme\";\n// import {HandleAddEmail} from '../../apis/EmailListAPI'\n// import config from '../../config.json'\n// import styles1 from \"../Form/Form.module.sass\";\nimport Icon from \"../Icon\";\n\nconst items = [\n  {\n    title: \"Viridian Exchange\",\n    menu: [\n      {\n        title: \"Home\",\n        url: \"/\",\n      },\n      {\n        title: \"Contact Us\",\n        url: \"mailto:contact@viridianexchange.com\",\n      },\n      {\n        title: \"FAQ\",\n        url: \"/faq\",\n      },\n\n    ],\n  },\n  {\n    title: \"Follow us\",\n    menu: [\n      {\n        title: \"Linkedin\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.linkedin.com/company/viridian-exchange/\"\n      },\n      {\n        title: \"Twitter\",\n        //url: \"/BuyCrypto\",\n        url: \"https://twitter.com/ViridianEx\"\n      },\n      {\n        title: \"Instagram\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.instagram.com/viridianexchange/\"\n      },\n      {\n        title: \"Facebook\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.facebook.com/Viridian-Exchange-106600915066707\"\n      },\n      {\n        title: \"Telegram\",\n        //url: \"/BuyCrypto\",\n        url: \"https://t.me/viridian_exchange\"\n      },\n    ],\n  },\n];\n\n\nconst Footers = () => {\n  const [email, setEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = React.useState(false);\n\n  const handleSubmit = (e) => {\n    alert();\n  };\n\n  const successfulMessage = () => {\n    if (successMessage) {\n      return <div style={{marginLeft: \"10px\"}}> <Icon name=\"check\" size=\"18\" fill={\"#BF9A36\"} /> <a>Sign Up Successful!</a></div>\n    }\n  };\n\n  return (\n    <footer className={styles.footer}>\n      <div className={cn(\"container\", styles.container)}>\n        <div className={styles.row}>\n          <div className={styles.col}>\n            <Link className={styles.logo} to=\"/\">\n              <Image\n                className={styles.pic}\n                src=\"/logo.svg\"\n                srcDark=\"/logo.svg\"\n                alt=\"Viridian Exchange\"\n              />\n            </Link>\n            <div className={styles.info}>The future of collectible exchange.</div>\n            {/*<div className={styles.version}>*/}\n            {/*  <div className={styles.details}>Dark theme</div>*/}\n            {/*  <Theme className=\"theme-big\" />*/}\n            {/*</div>*/}\n          </div>\n          <div className={styles.col}>\n            {items.map((x, index) => (\n              <Group className={styles.group} item={x} key={index} />\n            ))}\n          </div>\n          {/*<div className={styles.col}>*/}\n          {/*  <div className={styles.category}>Join Our Newsletter</div>*/}\n          {/*  <div className={styles.text}>*/}\n          {/*    Be the first to hear about new product updates and exclusive pack releases!*/}\n          {/*  </div>*/}\n          {/*  /!*<Form*!/*/}\n          {/*  /!*  className={styles.form}*!/*/}\n          {/*  /!*  setValue={setEmail}*!/*/}\n          {/*  /!*  click={() => {HandleAddEmail(email); setSuccessMessage(true)}}*!/*/}\n          {/*  /!*  placeholder=\"Enter your email\"*!/*/}\n          {/*  /!*  type=\"email\"*!/*/}\n          {/*  /!*  name=\"email\"*!/*/}\n          {/*  /!*>*!/*/}\n\n\n          {/*/!*<button className = {styles1.btn}*!/*/}\n          {/*/!*       type = \"submit\" inverted basic onClick={(e) => {HandleAddEmail(email); setSuccessMessage(true);}}>Sign up</button>*!/*/}\n\n\n\n          {/*  /!*</Form>*!/*/}\n          {/*  {successfulMessage()}*/}\n\n          {/*</div>*/}\n        </div>\n        <div>\n\n        </div>\n        <div className={styles.foot}>\n          <div className={styles.copyright}>\n            Copyright © 2021 Viridian Exchange Inc. All rights reserved\n          </div>\n          <div className={styles.note}>\n            We use cookies for better service. <a href=\"/#\">Accept</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footers;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Modal/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Image.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Icon.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js",["143","144","145","146","147"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport styles from \"./User.module.sass\";\nimport Icon from \"../../Icon\";\nimport Theme from \"../../Theme\";\nimport Web3 from \"web3\";\nimport config from \"../../../local-dev-config\";\n//import veJSON from \"../../../abis/ViridianExchange.json\";\nimport vTJSON from \"../../../abis/ViridianToken.json\";\nimport BigNumber from \"bignumber.js\";\n//import {FetchUser} from \"../../../apis/UserAPI\";\nimport ReactLoading from \"react-loading\";\nimport {\n  useCryptoPrices,\n  CryptoPriceProvider\n} from \"react-realtime-crypto-prices\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n\n//TODO: Instead of account, pass in user with all info through to profile/user\nconst items = (account) => [\n  {\n    title: \"Disconnect\",\n    icon: \"exit\",\n    url: \"/\",\n  },\n];\n\nconst User = ({ className, account, setAccount, connected, setConnected, userInfo, setUserInfo, vextBalance, setVextBalance, ethBalance, setEthBalance, setPromptInstallMetamask}) => {\n  const [visible, setVisible] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const prices = useCryptoPrices([\"eth\"]);\n\n\n\n  //ABI Stuff\n\n\n  //Todo: if they press skip for now, then link address to user struct and default profile picture\n  //const [ethBalance, setEthBalance] = useState(0);\n  //const [vextBalance, setVextBalance] = useState(0);\n\n  useEffect(() => {\n    if (Web3.givenProvider) {\n      const connect = async () => {\n        //alert(\"connecting wallet\")\n        await connectWallet();\n        //console.log(connected);\n        //alert()\n      }\n      //connect().then(() => setConnected(true));\n    }\n  }, [web3.givenProvider]);\n\n\n  const isMetaMaskInstalled = () => {\n    //Have to check the ethereum binding on the window object to see if it's installed\n    const {ethereum} = window;\n    if (!Boolean(ethereum && ethereum.isMetaMask)) {\n      setPromptInstallMetamask(true);\n    }\n  };\n\n\n  async function connectWallet() {\n    try {\n      // Will open the MetaMask UI\n      // You should disable this button while the request is pending!\n      await window.ethereum.request({ method: 'eth_requestAccounts' }).then(async (accounts) => {\n        setAccount(accounts[0]);\n        if (accounts[0]) {\n          //await FetchUser(setUserInfo, accounts[0]);\n          //alert(\"FETCH FROM USER SCREEN\")\n        }\n        //alert(accounts[0]);\n        //alert(JSON.stringify(account));\n      });\n\n\n      //alert(JSON.stringify(web3));\n      await web3.eth.getBalance(account).then(async (balance) => {\n        //alert(balance);\n          await setEthBalance(round(balance * .000000000000000001, 4))});\n      await setVextBalance(await getVEXTBalance());\n      await setConnected(true);\n\n      //alert(\"setting connected from user/index\");\n\n      // await setUserInfo(await getUserInfo());\n\n\n\n\n\n      //alert(account);\n      //await web3.eth.sign(web3.utils.sha3(\"test\"), account, function (err, result) { //console.log(err, result); });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function getVEXTBalance() {\n\n    const vtContractAddress = config.mumbai_contract_addresses.vt_contract;\n    ////console.log(JSON.stringify(vNFTJSON));\n    let vtABI = new web3.eth.Contract(vTJSON['abi'], vtContractAddress);\n    return await vtABI.methods.balanceOf(account).call();\n  }\n\n  function parseVextBalance(vextBalance) {\n    //alert(\"BEF: \" + vextBalance);\n    vextBalance = new BigNumber(vextBalance);\n    vextBalance = vextBalance.shiftedBy(-18);\n    vextBalance = vextBalance.toNumber();\n    //alert(vextBalance);\n    //alert(vextBalance < 1000000.0);\n    if (10000 < vextBalance && vextBalance < 1000000.0) {\n      return (vextBalance / 1000).toFixed(2) + \"K\"\n    }\n    else if (vextBalance > 1000000.0) {\n      //alert(\"DIV: \" + vextBalance / 1000000)\n      return (vextBalance / 1000000).toFixed(2) + \"M\"\n    }\n    else {\n      return vextBalance.toFixed(2);\n    }\n  }\n\n  const round = (number, decimalPlaces) => {\n    const factorOfTen = Math.pow(10, decimalPlaces)\n    return Math.round(number * factorOfTen) / factorOfTen\n  }\n\n  const shortenAccount = () => {\n    if (account) {\n      return account.toString().substring(0, 6) + \"...\" + account.toString().substring(38);\n    }\n  }\n\n  //alert(account);\n  if (connected) {\n    //if username is empty, ask to set up\n  return (\n    <OutsideClickHandler onOutsideClick={() => setVisible(false)}>\n      <div className={cn(styles.user, className)}>\n        <div className={styles.head} onClick={() => setVisible(!visible)}>\n          {(!vextBalance) ?\n              [<div className={styles.avatar}>\n                <ReactLoading type={'spin'} color={'#bf9a36'} height={'100%'} width={'100%'} />\n              </div>,\n                <div className={styles.wallet}>\n                  <span className={styles.currency}><img style={{width: '3ex', marginTop: '-.4ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' /></span>\n                </div>] : [<div className={styles.avatar}>\n            <img src='/images/content/ve_circle.png' alt=\"Avatar\" />\n            </div>,\n                <div>{(ethBalance === 0) && (parseVextBalance(vextBalance) !== \"0.00\") ? <div className={styles.wallet}>\n          {parseVextBalance(vextBalance)} <span className={styles.currency}>USDT</span>\n            </div> : <div className={styles.wallet}>\n                  <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n                  {ethBalance}\n                </div>}</div>]}\n        </div>\n            {visible && (\n                <div className={styles.body}>\n                  {/*<div className={styles.name}>{userInfo.displayName}</div>*/}\n                  <CopyToClipboard text={account}\n                      // onCopy={() => this.setState({copied: true})}\n                  >\n                    <div className={styles.code}>\n                      <div className={styles.number}>{shortenAccount()}</div>\n                      <button className={styles.copy}>\n                        <Icon name=\"copy\" size=\"16\"/>\n                      </button>\n                    </div>\n                  </CopyToClipboard>\n                  <div className={styles.wrap}>\n                    <div className={styles.line}>\n                      {/*<div className={styles.preview}>*/}\n                      {/*  <img*/}\n                      {/*      src=\"/images/content/ve_circle.png\"*/}\n                      {/*      alt=\"Ethereum\"*/}\n                      {/*  />*/}\n                      {/*</div>*/}\n                      <div className={styles.details} style={{marginLeft: '-1ex'}}>\n                        <div className={styles.info}>Balance</div>\n                        <div>{(ethBalance === 0) ? <div className={styles.price}>\n                          {parseVextBalance(vextBalance)} <span className={styles.currency}>USDT</span>\n                        </div> : <div className={styles.price}>\n                          <img style={{width: '2ex', marginTop: '-.4ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n                          {ethBalance}\n                          <>{prices.eth && <div style={{color: 'grey', fontSize: '5'}}>${Math.round((prices.eth * ethBalance) * 100) / 100}</div>}</>\n                          {/*<span className={styles.currency}>ETH</span>*/}\n                        </div>}</div>\n                      </div>\n                    </div>\n                    {/*<button*/}\n                    {/*    className={cn(\"button-stroke button-small\", styles.button)}*/}\n                    {/*>*/}\n                    {/*  Manage fun on Coinbase*/}\n                    {/*</button>*/}\n                  </div>\n                  <div className={styles.menu}>\n                    {items(account).map((x, index) =>\n                        x.url ? (\n                            x.url.startsWith(\"http\") ? (\n                                <a\n                                    className={styles.item}\n                                    href={x.url}\n                                    rel=\"noopener noreferrer\"\n                                    key={index}\n                                >\n                                  <div className={styles.icon}>\n                                    <Icon name={x.icon} size=\"20\"/>\n                                  </div>\n                                  <div className={styles.text}>{x.title}</div>\n                                </a>\n                            ) : (\n                                <Link\n                                    className={styles.item}\n                                    onClick={() => setVisible(!visible)}\n                                    key={index}\n                                    to={{ pathname: x.url, state: { account: account }}}\n                                >\n                                  <div className={styles.icon}>\n                                    <Icon name={x.icon} size=\"20\"/>\n                                  </div>\n                                  <div className={styles.text}>{x.title}</div>\n                                </Link>\n                            )\n                        ) : (\n                            <div className={styles.item} key={index}>\n                              <div className={styles.icon}>\n                                <Icon name={x.icon} size=\"20\"/>\n                              </div>\n                              <div className={styles.text}>{x.title}</div>\n                              <Theme className={styles.theme}/>\n                            </div>\n                        )\n                    )}\n                  </div>\n                </div>\n            )}\n          </div>\n        </OutsideClickHandler>\n    );\n  }\n  else {\n    return (\n        <OutsideClickHandler onOutsideClick={() => {}}>\n          <div className={cn(styles.user, className)}>\n            <div className={styles.head} onClick={async () => {isMetaMaskInstalled(); await connectWallet()}}>\n              <div className={styles.disconnectedWallet}>\n                Connect Wallet\n              </div>\n            </div>\n          </div>\n        </OutsideClickHandler>\n    );\n  }\n};\n\nexport default User;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/Group/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Dropdown/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/Item/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Theme/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":1,"column":60,"nodeType":"170","messageId":"171","endLine":1,"endColumn":70},{"ruleId":"168","severity":1,"message":"172","line":13,"column":11,"nodeType":"170","messageId":"171","endLine":13,"endColumn":21},{"ruleId":"168","severity":1,"message":"173","line":16,"column":3,"nodeType":"170","messageId":"171","endLine":16,"endColumn":18},{"ruleId":"168","severity":1,"message":"174","line":33,"column":10,"nodeType":"170","messageId":"171","endLine":33,"endColumn":18},{"ruleId":"168","severity":1,"message":"175","line":33,"column":20,"nodeType":"170","messageId":"171","endLine":33,"endColumn":31},{"ruleId":"168","severity":1,"message":"176","line":34,"column":10,"nodeType":"170","messageId":"171","endLine":34,"endColumn":14},{"ruleId":"168","severity":1,"message":"177","line":34,"column":16,"nodeType":"170","messageId":"171","endLine":34,"endColumn":23},{"ruleId":"168","severity":1,"message":"178","line":35,"column":10,"nodeType":"170","messageId":"171","endLine":35,"endColumn":19},{"ruleId":"168","severity":1,"message":"179","line":35,"column":21,"nodeType":"170","messageId":"171","endLine":35,"endColumn":33},{"ruleId":"168","severity":1,"message":"180","line":36,"column":10,"nodeType":"170","messageId":"171","endLine":36,"endColumn":20},{"ruleId":"168","severity":1,"message":"181","line":36,"column":22,"nodeType":"170","messageId":"171","endLine":36,"endColumn":35},{"ruleId":"168","severity":1,"message":"182","line":37,"column":10,"nodeType":"170","messageId":"171","endLine":37,"endColumn":26},{"ruleId":"168","severity":1,"message":"183","line":37,"column":28,"nodeType":"170","messageId":"171","endLine":37,"endColumn":47},{"ruleId":"168","severity":1,"message":"184","line":41,"column":10,"nodeType":"170","messageId":"171","endLine":41,"endColumn":23},{"ruleId":"168","severity":1,"message":"185","line":41,"column":25,"nodeType":"170","messageId":"171","endLine":41,"endColumn":41},{"ruleId":"168","severity":1,"message":"186","line":44,"column":10,"nodeType":"170","messageId":"171","endLine":44,"endColumn":21},{"ruleId":"168","severity":1,"message":"187","line":44,"column":23,"nodeType":"170","messageId":"171","endLine":44,"endColumn":37},{"ruleId":"168","severity":1,"message":"188","line":45,"column":10,"nodeType":"170","messageId":"171","endLine":45,"endColumn":31},{"ruleId":"168","severity":1,"message":"189","line":46,"column":10,"nodeType":"170","messageId":"171","endLine":46,"endColumn":21},{"ruleId":"168","severity":1,"message":"190","line":46,"column":23,"nodeType":"170","messageId":"171","endLine":46,"endColumn":37},{"ruleId":"168","severity":1,"message":"191","line":47,"column":27,"nodeType":"170","messageId":"171","endLine":47,"endColumn":45},{"ruleId":"168","severity":1,"message":"192","line":48,"column":9,"nodeType":"170","messageId":"171","endLine":48,"endColumn":17},{"ruleId":"168","severity":1,"message":"193","line":49,"column":10,"nodeType":"170","messageId":"171","endLine":49,"endColumn":15},{"ruleId":"168","severity":1,"message":"194","line":49,"column":17,"nodeType":"170","messageId":"171","endLine":49,"endColumn":25},{"ruleId":"168","severity":1,"message":"195","line":50,"column":10,"nodeType":"170","messageId":"171","endLine":50,"endColumn":23},{"ruleId":"168","severity":1,"message":"196","line":50,"column":25,"nodeType":"170","messageId":"171","endLine":50,"endColumn":41},{"ruleId":"168","severity":1,"message":"197","line":51,"column":10,"nodeType":"170","messageId":"171","endLine":51,"endColumn":22},{"ruleId":"168","severity":1,"message":"198","line":51,"column":24,"nodeType":"170","messageId":"171","endLine":51,"endColumn":39},{"ruleId":"168","severity":1,"message":"199","line":52,"column":10,"nodeType":"170","messageId":"171","endLine":52,"endColumn":17},{"ruleId":"168","severity":1,"message":"200","line":52,"column":19,"nodeType":"170","messageId":"171","endLine":52,"endColumn":29},{"ruleId":"168","severity":1,"message":"201","line":53,"column":10,"nodeType":"170","messageId":"171","endLine":53,"endColumn":15},{"ruleId":"168","severity":1,"message":"202","line":53,"column":17,"nodeType":"170","messageId":"171","endLine":53,"endColumn":25},{"ruleId":"168","severity":1,"message":"203","line":55,"column":7,"nodeType":"170","messageId":"171","endLine":55,"endColumn":14},{"ruleId":"168","severity":1,"message":"204","line":230,"column":12,"nodeType":"170","messageId":"171","endLine":230,"endColumn":28},{"ruleId":"205","severity":1,"message":"206","line":255,"column":13,"nodeType":"207","endLine":276,"endColumn":4},{"ruleId":"205","severity":1,"message":"208","line":276,"column":6,"nodeType":"209","endLine":276,"endColumn":17,"suggestions":"210"},{"ruleId":"168","severity":1,"message":"211","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":20},{"ruleId":"168","severity":1,"message":"195","line":15,"column":12,"nodeType":"170","messageId":"171","endLine":15,"endColumn":25},{"ruleId":"168","severity":1,"message":"196","line":15,"column":27,"nodeType":"170","messageId":"171","endLine":15,"endColumn":43},{"ruleId":"205","severity":1,"message":"206","line":23,"column":13,"nodeType":"207","endLine":28,"endColumn":4},{"ruleId":"205","severity":1,"message":"212","line":28,"column":6,"nodeType":"209","endLine":28,"endColumn":15,"suggestions":"213"},{"ruleId":"168","severity":1,"message":"195","line":11,"column":12,"nodeType":"170","messageId":"171","endLine":11,"endColumn":25},{"ruleId":"168","severity":1,"message":"196","line":11,"column":27,"nodeType":"170","messageId":"171","endLine":11,"endColumn":43},{"ruleId":"205","severity":1,"message":"206","line":20,"column":15,"nodeType":"207","endLine":22,"endColumn":6},{"ruleId":"168","severity":1,"message":"214","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"215","line":2,"column":16,"nodeType":"170","messageId":"171","endLine":2,"endColumn":23},{"ruleId":"168","severity":1,"message":"216","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":12},{"ruleId":"168","severity":1,"message":"217","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":33},{"ruleId":"168","severity":1,"message":"218","line":67,"column":10,"nodeType":"170","messageId":"171","endLine":67,"endColumn":15},{"ruleId":"168","severity":1,"message":"219","line":67,"column":17,"nodeType":"170","messageId":"171","endLine":67,"endColumn":25},{"ruleId":"168","severity":1,"message":"220","line":68,"column":26,"nodeType":"170","messageId":"171","endLine":68,"endColumn":43},{"ruleId":"168","severity":1,"message":"221","line":70,"column":9,"nodeType":"170","messageId":"171","endLine":70,"endColumn":21},{"ruleId":"168","severity":1,"message":"222","line":74,"column":9,"nodeType":"170","messageId":"171","endLine":74,"endColumn":26},{"ruleId":"223","severity":1,"message":"224","line":76,"column":98,"nodeType":"225","endLine":76,"endColumn":101},{"ruleId":"168","severity":1,"message":"226","line":17,"column":3,"nodeType":"170","messageId":"171","endLine":17,"endColumn":22},{"ruleId":"168","severity":1,"message":"227","line":33,"column":10,"nodeType":"170","messageId":"171","endLine":33,"endColumn":17},{"ruleId":"168","severity":1,"message":"228","line":33,"column":19,"nodeType":"170","messageId":"171","endLine":33,"endColumn":29},{"ruleId":"168","severity":1,"message":"229","line":47,"column":13,"nodeType":"170","messageId":"171","endLine":47,"endColumn":20},{"ruleId":"205","severity":1,"message":"230","line":55,"column":6,"nodeType":"209","endLine":55,"endColumn":26,"suggestions":"231"},{"ruleId":"168","severity":1,"message":"232","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":19},{"ruleId":"168","severity":1,"message":"233","line":5,"column":9,"nodeType":"170","messageId":"171","endLine":5,"endColumn":27},{"ruleId":"168","severity":1,"message":"234","line":5,"column":29,"nodeType":"170","messageId":"171","endLine":5,"endColumn":34},{"ruleId":"168","severity":1,"message":"172","line":8,"column":9,"nodeType":"170","messageId":"171","endLine":8,"endColumn":19},{"ruleId":"168","severity":1,"message":"195","line":11,"column":12,"nodeType":"170","messageId":"171","endLine":11,"endColumn":25},{"ruleId":"168","severity":1,"message":"196","line":11,"column":27,"nodeType":"170","messageId":"171","endLine":11,"endColumn":43},{"ruleId":"168","severity":1,"message":"235","line":12,"column":12,"nodeType":"170","messageId":"171","endLine":12,"endColumn":18},{"ruleId":"168","severity":1,"message":"236","line":12,"column":20,"nodeType":"170","messageId":"171","endLine":12,"endColumn":29},{"ruleId":"168","severity":1,"message":"237","line":16,"column":11,"nodeType":"170","messageId":"171","endLine":16,"endColumn":17},{"ruleId":"168","severity":1,"message":"238","line":18,"column":11,"nodeType":"170","messageId":"171","endLine":18,"endColumn":15},{"ruleId":"168","severity":1,"message":"239","line":19,"column":11,"nodeType":"170","messageId":"171","endLine":19,"endColumn":14},{"ruleId":"168","severity":1,"message":"240","line":20,"column":11,"nodeType":"170","messageId":"171","endLine":20,"endColumn":14},{"ruleId":"205","severity":1,"message":"206","line":22,"column":15,"nodeType":"207","endLine":29,"endColumn":6},{"ruleId":"205","severity":1,"message":"241","line":29,"column":8,"nodeType":"209","endLine":29,"endColumn":17,"suggestions":"242"},{"ruleId":"168","severity":1,"message":"243","line":31,"column":14,"nodeType":"170","messageId":"171","endLine":31,"endColumn":33},{"ruleId":"244","severity":1,"message":"245","line":77,"column":33,"nodeType":"225","endLine":77,"endColumn":138},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Breakpoint' is defined but never used.","'useCryptoPrices' is defined but never used.","'listings' is assigned a value but never used.","'setListings' is assigned a value but never used.","'nfts' is assigned a value but never used.","'setNfts' is assigned a value but never used.","'ownedNfts' is assigned a value but never used.","'setOwnedNfts' is assigned a value but never used.","'ownedPacks' is assigned a value but never used.","'setOwnedPacks' is assigned a value but never used.","'fetchedAndParsed' is assigned a value but never used.","'setFetchedAndParsed' is assigned a value but never used.","'ethBalanceUSD' is assigned a value but never used.","'setEthBalanceUSD' is assigned a value but never used.","'promptSetup' is assigned a value but never used.","'setPromptSetup' is assigned a value but never used.","'promptInstallMetamask' is assigned a value but never used.","'userFetched' is assigned a value but never used.","'setUserFetched' is assigned a value but never used.","'setCheckUserPrompt' is assigned a value but never used.","'nftsCopy' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'initialLoaded' is assigned a value but never used.","'setInitialLoaded' is assigned a value but never used.","'filteredNfts' is assigned a value but never used.","'setFilteredNFTs' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'nftsSet' is assigned a value but never used.","'parseVextBalance' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'checkUserPrompt' and 'connectWallet'. Either include them or remove the dependency array.","ArrayExpression",["248"],"'withRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'web3.eth.net'. Either include it or remove the dependency array.",["249"],"'useEffect' is defined but never used.","'NavLink' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setSuccessMessage' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'successfulMessage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CryptoPriceProvider' is defined but never used.","'balance' is assigned a value but never used.","'setBalance' is assigned a value but never used.","'connect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'connectWallet'. Either include it or remove the dependency array. Outer scope values like 'web3.givenProvider' aren't valid dependencies because mutating them doesn't re-render the component.",["250"],"'ProgressBar' is defined but never used.","'getTrackBackground' is defined but never used.","'Range' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'prices' is assigned a value but never used.","'STEP' is assigned a value but never used.","'MIN' is assigned a value but never used.","'MAX' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.account'. Either include it or remove the dependency array. If 'setMinted' needs the current value of 'props.account', you can also switch to useReducer instead of useState and read 'props.account' in the reducer.",["251"],"'removeItemFromArray' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [checkUserPrompt, connectWallet, connected]",{"range":"260","text":"261"},"Update the dependencies array to be: [account, web3.eth.net]",{"range":"262","text":"263"},"Update the dependencies array to be: [connectWallet]",{"range":"264","text":"265"},"Update the dependencies array to be: [fetched, props.account]",{"range":"266","text":"267"},[9456,9467],"[checkUserPrompt, connectWallet, connected]",[1450,1459],"[account, web3.eth.net]",[2025,2045],"[connectWallet]",[1049,1058],"[fetched, props.account]"]