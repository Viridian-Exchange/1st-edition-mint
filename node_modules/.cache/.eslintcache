[{"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/index.js":"1","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/reportWebVitals.js":"2","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js":"3","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/local-dev-config.js":"4","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js":"5","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/index.js":"6","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Drops/index.js":"7","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/Viridian1EPassMethods.js":"8","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/index.js":"9","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/index.js":"10","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/index.js":"11","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Modal/index.js":"12","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Image.js":"13","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Icon.js":"14","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js":"15","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/Group/index.js":"16","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Dropdown/index.js":"17","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/Item/index.js":"18","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Theme/index.js":"19","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js":"20","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Open/index.js":"21","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Verify/index.js":"22","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/WalletSelector/index.js":"23"},{"size":500,"mtime":1643648444584,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1643655018399,"results":"26","hashOfConfig":"25"},{"size":3550,"mtime":1651682260308,"results":"27","hashOfConfig":"25"},{"size":1838,"mtime":1650934778733,"results":"28","hashOfConfig":"25"},{"size":3122,"mtime":1651681349025,"results":"29","hashOfConfig":"25"},{"size":145,"mtime":1643653269634,"results":"30","hashOfConfig":"25"},{"size":13131,"mtime":1651682673945,"results":"31","hashOfConfig":"25"},{"size":7353,"mtime":1650945988038,"results":"32","hashOfConfig":"25"},{"size":6163,"mtime":1651682260300,"results":"33","hashOfConfig":"25"},{"size":4169,"mtime":1643655591244,"results":"34","hashOfConfig":"25"},{"size":11105,"mtime":1641160069679,"results":"35","hashOfConfig":"25"},{"size":1494,"mtime":1643653317419,"results":"36","hashOfConfig":"25"},{"size":379,"mtime":1637244256672,"results":"37","hashOfConfig":"25"},{"size":28130,"mtime":1637244256670,"results":"38","hashOfConfig":"25"},{"size":11149,"mtime":1651678724088,"results":"39","hashOfConfig":"25"},{"size":1068,"mtime":1624424612627,"results":"40","hashOfConfig":"25"},{"size":1281,"mtime":1632849901986,"results":"41","hashOfConfig":"25"},{"size":708,"mtime":1637244256731,"results":"42","hashOfConfig":"25"},{"size":691,"mtime":1624424612647,"results":"43","hashOfConfig":"25"},{"size":4946,"mtime":1650737523326,"results":"44","hashOfConfig":"25"},{"size":10726,"mtime":1651078177334,"results":"45","hashOfConfig":"25"},{"size":4875,"mtime":1651530928031,"results":"46","hashOfConfig":"25"},{"size":3023,"mtime":1651681393204,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1feyeat",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/index.js",[],["100","101"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/reportWebVitals.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js",["102","103","104","105","106","107","108","109","110"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/local-dev-config.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js",["111","112","113","114","115"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Drops/index.js",["116","117","118","119","120","121","122"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/Viridian1EPassMethods.js",["123"],"import config from \"../local-dev-config\";\nimport vGPJSON from \"../abis/ViridianGenesisPack.json\";\nimport {Biconomy} from \"@biconomy/mexa\";\nimport Web3 from \"web3\";\n\nlet web3Wallet = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider( \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"));\n\nlet web3WS = new Web3(new Web3.providers.WebsocketProvider( \"wss://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"));\n\nconst biconomy = new Biconomy(Web3.givenProvider || new Web3.providers.HttpProvider( \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"),{apiKey: \"TVCsgQVfk.a6031565-1cb6-40da-8a60-2ffec22e3bed\", debug: true});\n\nlet biconomyWeb3 = new Web3(biconomy);\n\nbiconomy.onEvent(biconomy.READY, () => {\n    // Initialize your dapp here like getting user accounts etc\n    console.log(\"initialized\");\n}).onEvent(biconomy.ERROR, (error, message) => {\n    // Handle error while initializing mexa\n    console.error(error);\n});\n\n// export async function tokenURI(tokenId) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     //console.log(\"ABIMETHODS: \" + tokenId);\n//     let nft = vNFTABI.methods.tokenURI(tokenId).call();\n//\n//     //alert(nft);\n//\n//     return nft;\n// }\n//\n// export async function ownerOf(tokenId) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     //console.log(\"ABIMETHODS1: \" + tokenId);\n//     let owner = await vNFTABI.methods.ownerOf(tokenId).call();\n//\n//     //alert(nft);\n//\n//     return owner;\n// }\n//\n// export async function ownerOfNoReq(tokenId) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     //console.log(\"ABIMETHODS2: \" + tokenId);\n//     let owner = await vNFTABI.methods.ownerOf(tokenId).call();\n//\n//     //alert(nft);\n//\n//     return owner;\n// }\n//\n// export async function setApprovalForAll(from, exchangeAddress) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     return await vNFTABI.methods.setApprovalForAll(exchangeAddress, true).send({from: from});\n// }\n\nexport async function mint(from, numMint, setSuccess, setFailed, setMinting) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    //alert((100000000000000000 * numMint).toString());\n    try {\n        await vNFTABI.methods.mint(numMint, from).send({\n            from: from, value: (100000000000000000 * numMint).toString(),\n            //signatureType: biconomy.EIP712_SIGN\n        });\n\n        let vNFTABIWS = new web3WS.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n\n        await vNFTABIWS.events.Transfer({filter: {from: from}}).on('data', async function (event) {\n            setSuccess(true);\n            setFailed(false);\n            setMinting(false);\n        }).on('err', (e) => {console.error(e); setFailed(true); setMinting(false);});\n\n    } catch(e) {\n        setFailed(true);\n        setMinting(false);\n        console.error(e);\n    }\n}\n\nexport async function openPack(from, tokenId, setSuccess, setFailed, setMinting) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    //alert((100000000000000000 * numMint).toString());\n    try {\n        await vNFTABI.methods.openPack(tokenId).send({\n            from: from,\n            signatureType: biconomy.EIP712_SIGN\n        });\n\n        let vNFTABIWS = new web3WS.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n\n        await vNFTABIWS.events.Transfer({filter: {from: from}}).on('data', async function (event) {\n            setSuccess(true);\n            setFailed(false);\n            setMinting(false);\n        }).on('err', (e) => {console.error(e); setFailed(true); setMinting(false);});\n\n    } catch(e) {\n        setFailed(true);\n        setMinting(false);\n        console.error(e);\n    }\n}\n\n// export async function bridge(from, bridgeNFTs) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.rinkeby_contract_addresses.v1ep_contract;\n//\n//     let vNFTABI = new biconomyWeb3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     return await vNFTABI.methods.bridge(bridgeNFTs).send({from: from});\n// }\n\nexport async function totalSupply(from) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    return await vNFTABI.methods.totalSupply().call();\n    //return await vNFTABI.methods.getNumNFTs().call();\n}\n\nexport async function getOwnedNFTs(from) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n    //alert(from)\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    let ownedNFTS = await vNFTABI.methods.getOwnedNFTs().call({from: from});\n    //alert(ownedNFTS);\n    return ownedNFTS;\n}\n\nexport async function tokenURI(tokenID, from) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n    //alert(from)\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    let ownedNFTS = await vNFTABI.methods.tokenURI(tokenID).call({from: from});\n    //alert(ownedNFTS);\n    return ownedNFTS;\n}\n\n//\n// export async function isApprovedForAll(owner, operator) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//\n//     return await vNFTABI.methods.isApprovedForAll(owner, operator).call();\n// }\n\n// export async function safeTransferFrom(from, to, tokenId) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//\n//     return await vNFTABI.methods.safeTransferFrom(from, to, tokenId).send({from: from});\n// }\n//\n// export async function burn(from, tokenId) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//\n//     return await vNFTABI.methods.burn(tokenId).send({from: from, signatureType: biconomy.EIP712_SIGN});\n// }","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/index.js",["124","125","126"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/index.js",["127","128","129","130","131","132","133"],"import React, { useState, Button } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport styles from \"./Footer.module.sass\";\nimport Group from \"./Group\";\nimport Image from \"../Image\";\n// import Form from \"../Form\";\n// import Theme from \"../Theme\";\n// import {HandleAddEmail} from '../../apis/EmailListAPI'\n// import config from '../../config.json'\n// import styles1 from \"../Form/Form.module.sass\";\nimport Icon from \"../Icon\";\n\nconst items = [\n  {\n    title: \"Viridian Exchange\",\n    menu: [\n      {\n        title: \"Home\",\n        url: \"/\",\n      },\n      {\n        title: \"Contact Us\",\n        url: \"mailto:contact@viridianexchange.com\",\n      },\n      {\n        title: \"FAQ\",\n        url: \"/faq\",\n      },\n\n    ],\n  },\n  {\n    title: \"Follow us\",\n    menu: [\n      {\n        title: \"Linkedin\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.linkedin.com/company/viridian-exchange/\"\n      },\n      {\n        title: \"Twitter\",\n        //url: \"/BuyCrypto\",\n        url: \"https://twitter.com/ViridianEx\"\n      },\n      {\n        title: \"Instagram\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.instagram.com/viridianexchange/\"\n      },\n      {\n        title: \"Facebook\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.facebook.com/Viridian-Exchange-106600915066707\"\n      },\n      {\n        title: \"Telegram\",\n        //url: \"/BuyCrypto\",\n        url: \"https://t.me/viridian_exchange\"\n      },\n    ],\n  },\n];\n\n\nconst Footers = () => {\n  const [email, setEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = React.useState(false);\n\n  const handleSubmit = (e) => {\n    alert();\n  };\n\n  const successfulMessage = () => {\n    if (successMessage) {\n      return <div style={{marginLeft: \"10px\"}}> <Icon name=\"check\" size=\"18\" fill={\"#BF9A36\"} /> <a>Sign Up Successful!</a></div>\n    }\n  };\n\n  return (\n    <footer className={styles.footer}>\n      <div className={cn(\"container\", styles.container)}>\n        <div className={styles.row}>\n          <div className={styles.col}>\n            <Link className={styles.logo} to=\"/\">\n              <Image\n                className={styles.pic}\n                src=\"/logo.svg\"\n                srcDark=\"/logo.svg\"\n                alt=\"Viridian Exchange\"\n              />\n            </Link>\n            <div className={styles.info}>The future of collectible exchange.</div>\n            {/*<div className={styles.version}>*/}\n            {/*  <div className={styles.details}>Dark theme</div>*/}\n            {/*  <Theme className=\"theme-big\" />*/}\n            {/*</div>*/}\n          </div>\n          <div className={styles.col}>\n            {items.map((x, index) => (\n              <Group className={styles.group} item={x} key={index} />\n            ))}\n          </div>\n          {/*<div className={styles.col}>*/}\n          {/*  <div className={styles.category}>Join Our Newsletter</div>*/}\n          {/*  <div className={styles.text}>*/}\n          {/*    Be the first to hear about new product updates and exclusive pack releases!*/}\n          {/*  </div>*/}\n          {/*  /!*<Form*!/*/}\n          {/*  /!*  className={styles.form}*!/*/}\n          {/*  /!*  setValue={setEmail}*!/*/}\n          {/*  /!*  click={() => {HandleAddEmail(email); setSuccessMessage(true)}}*!/*/}\n          {/*  /!*  placeholder=\"Enter your email\"*!/*/}\n          {/*  /!*  type=\"email\"*!/*/}\n          {/*  /!*  name=\"email\"*!/*/}\n          {/*  /!*>*!/*/}\n\n\n          {/*/!*<button className = {styles1.btn}*!/*/}\n          {/*/!*       type = \"submit\" inverted basic onClick={(e) => {HandleAddEmail(email); setSuccessMessage(true);}}>Sign up</button>*!/*/}\n\n\n\n          {/*  /!*</Form>*!/*/}\n          {/*  {successfulMessage()}*/}\n\n          {/*</div>*/}\n        </div>\n        <div>\n\n        </div>\n        <div className={styles.foot}>\n          <div className={styles.copyright}>\n            Copyright © 2021 Viridian Exchange Inc. All rights reserved\n          </div>\n          <div className={styles.note}>\n            We use cookies for better service. <a href=\"/#\">Accept</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footers;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Modal/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Image.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Icon.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js",["134","135","136","137","138","139","140","141","142"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport styles from \"./User.module.sass\";\nimport Icon from \"../../Icon\";\nimport Theme from \"../../Theme\";\nimport Web3 from \"web3\";\nimport config from \"../../../local-dev-config\";\n//import veJSON from \"../../../abis/ViridianExchange.json\";\nimport vTJSON from \"../../../abis/ViridianToken.json\";\nimport BigNumber from \"bignumber.js\";\n//import {FetchUser} from \"../../../apis/UserAPI\";\nimport ReactLoading from \"react-loading\";\nimport {\n  useCryptoPrices,\n  CryptoPriceProvider\n} from \"react-realtime-crypto-prices\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletSelector from \"../../WalletSelector\";\nimport { useWeb3React } from '@web3-react/core'\n\nconst wcProvider = new WalletConnectProvider({\n  rpc: {1: \"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\"},\n  bridge: \"https://bridge.walletconnect.org\",\n  qrcodeModalOptions: {\n  },\n});\n\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n\n//TODO: Instead of account, pass in user with all info through to profile/user\nconst items = (account) => [\n];\n\nconst User = ({ className, setAccount, connected, setConnected, userInfo, setUserInfo, vextBalance, setVextBalance, ethBalance, setEthBalance, setPromptInstallMetamask, setVisibleModalWallets}) => {\n  const [visible, setVisible] = useState(false);\n  const [walletVis, setWalletVis] = useState(false);\n  //const [balance, setBalance] = useState(0);\n  //const prices = useCryptoPrices([\"eth\"]);\n\n\n\n  //ABI Stuff\n\n\n  //Todo: if they press skip for now, then link address to user struct and default profile picture\n  //const [ethBalance, setEthBalance] = useState(0);\n  //const [vextBalance, setVextBalance] = useState(0);\n\n  const { library, active, chainId, account } = useWeb3React();\n\n  useEffect(async () => {\n    if(account) {\n      setVextBalance(parseVextBalance(await getVEXTBalance()));\n    }\n  }, [active]);\n\n\n  const isMetaMaskInstalled = () => {\n    //Have to check the ethereum binding on the window object to see if it's installed\n    const {ethereum} = window;\n    if (!Boolean(ethereum && ethereum.isMetaMask)) {\n      setPromptInstallMetamask(true);\n    }\n  };\n\n\n  async function connectWallet() {\n    try {\n      // Will open the MetaMask UI\n      // You should disable this button while the request is pending!\n      await window.ethereum.request({ method: 'eth_requestAccounts' }).then(async (accounts) => {\n        setAccount(accounts[0]);\n        if (accounts[0]) {\n          //await FetchUser(setUserInfo, accounts[0]);\n          //alert(\"FETCH FROM USER SCREEN\")\n        }\n        //alert(accounts[0]);\n        //alert(JSON.stringify(account));\n      });\n\n\n      //alert(JSON.stringify(web3));\n      await web3.eth.getBalance(account).then(async (balance) => {\n        //alert(balance);\n          await setEthBalance(round(balance * .000000000000000001, 4))});\n      await setVextBalance(await getVEXTBalance());\n      await setConnected(true);\n\n      //alert(\"setting connected from user/index\");\n\n      // await setUserInfo(await getUserInfo());\n\n\n\n\n\n      //alert(account);\n      //await web3.eth.sign(web3.utils.sha3(\"test\"), account, function (err, result) { //console.log(err, result); });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function getVEXTBalance() {\n\n    const vtContractAddress = config.mumbai_contract_addresses.vt_contract;\n    ////console.log(JSON.stringify(vNFTJSON));\n    //alert(account);\n    let vtABI = new web3.eth.Contract(vTJSON['abi'], vtContractAddress);\n    return await vtABI.methods.balanceOf(account).call();\n  }\n\n  function parseVextBalance(vextBalance) {\n    //alert(\"BEF: \" + vextBalance);\n    vextBalance = new BigNumber(vextBalance);\n    vextBalance = vextBalance.shiftedBy(-18);\n    vextBalance = vextBalance.toNumber();\n    //alert(vextBalance);\n    //alert(vextBalance < 1000000.0);\n    if (10000 < vextBalance && vextBalance < 1000000.0) {\n      return (vextBalance / 1000).toFixed(2) + \"K\"\n    }\n    else if (vextBalance > 1000000.0) {\n      //alert(\"DIV: \" + vextBalance / 1000000)\n      return (vextBalance / 1000000).toFixed(2) + \"M\"\n    }\n    else {\n      return vextBalance.toFixed(2);\n    }\n  }\n\n  const round = (number, decimalPlaces) => {\n    const factorOfTen = Math.pow(10, decimalPlaces)\n    return Math.round(number * factorOfTen) / factorOfTen\n  }\n\n  const shortenAccount = () => {\n    if (account) {\n      return account.toString().substring(0, 6) + \"...\" + account.toString().substring(38);\n    }\n  }\n\n  //alert(account);\n  if (active) {\n    //if username is empty, ask to set up\n  return (\n    <OutsideClickHandler onOutsideClick={() => setVisible(false)}>\n      <div className={cn(styles.user, className)}>\n        <div className={styles.head} onClick={() => setVisible(!visible)}>\n          {(!vextBalance) ?\n              [<div className={styles.avatar}>\n                <Icon name=\"wallet\" fill='white' size=\"32\" />\n              </div>,\n                <div className={styles.wallet}>\n                  {account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)}\n                </div>] : [<div className={styles.avatar}>\n                <Icon name=\"wallet\" fill='white' size=\"32\" />\n            </div>,\n                <div>{(ethBalance === 0) && (parseVextBalance(vextBalance) !== \"0.00\") ? <div className={styles.wallet}>\n          {parseVextBalance(vextBalance)} <span className={styles.currency}>USDT</span>\n            </div> : <div className={styles.wallet}>\n                  {/*<img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                  {/*{ethBalance}*/}\n                  {account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)}\n                </div>}</div>]}\n        </div>\n            {visible && (\n                <div className={styles.body}>\n                  <div className={styles.name}>{JSON.stringify(library)}</div>\n                  <CopyToClipboard text={account}\n                      // onCopy={() => this.setState({copied: true})}\n                  >\n                    <div className={styles.code}>\n                      <div className={styles.number}>{shortenAccount()}</div>\n                      <button className={styles.copy}>\n                        <Icon name=\"copy\" size=\"16\"/>\n                      </button>\n                    </div>\n                  </CopyToClipboard>\n                  <div className={styles.wrap}>\n                    <div className={styles.line}>\n                      {/*<div className={styles.preview}>*/}\n                      {/*  <img*/}\n                      {/*      src=\"/images/content/ve_circle.png\"*/}\n                      {/*      alt=\"Ethereum\"*/}\n                      {/*  />*/}\n                      {/*</div>*/}\n                      <div className={styles.details} style={{marginLeft: '-1ex'}}>\n                        <div className={styles.info}>Balance</div>\n                        <div>{(ethBalance === 0) ? <div className={styles.price}>\n                          {parseVextBalance(vextBalance)} <span className={styles.currency}>USDT</span>\n                        </div> : <div className={styles.price}>\n                          <img style={{width: '2ex', marginTop: '-.4ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n                          {ethBalance}\n                          {/*<>{prices.eth && <div style={{color: 'grey', fontSize: '5'}}>${Math.round((prices.eth * ethBalance) * 100) / 100}</div>}</>*/}\n                          {/*<span className={styles.currency}>ETH</span>*/}\n                        </div>}</div>\n                      </div>\n                    </div>\n                    {/*<button*/}\n                    {/*    className={cn(\"button-stroke button-small\", styles.button)}*/}\n                    {/*>*/}\n                    {/*  Manage fun on Coinbase*/}\n                    {/*</button>*/}\n                  </div>\n                  <div className={styles.menu}>\n                    {items(account).map((x, index) =>\n                        x.url ? (\n                            x.url.startsWith(\"http\") ? (\n                                <a\n                                    className={styles.item}\n                                    href={x.url}\n                                    rel=\"noopener noreferrer\"\n                                    key={index}\n                                >\n                                  <div className={styles.icon}>\n                                    <Icon name={x.icon} size=\"20\"/>\n                                  </div>\n                                  <div className={styles.text}>{x.title}</div>\n                                </a>\n                            ) : (\n                                <Link\n                                    className={styles.item}\n                                    onClick={() => setVisible(!visible)}\n                                    key={index}\n                                    to={{ pathname: x.url, state: { account: account }}}\n                                >\n                                  <div className={styles.icon}>\n                                    <Icon name={x.icon} size=\"20\"/>\n                                  </div>\n                                  <div className={styles.text}>{x.title}</div>\n                                </Link>\n                            )\n                        ) : (\n                            <div className={styles.item} key={index}>\n                              <div className={styles.icon}>\n                                <Icon name={x.icon} size=\"20\"/>\n                              </div>\n                              <div className={styles.text}>{x.title}</div>\n                              <Theme className={styles.theme}/>\n                            </div>\n                        )\n                    )}\n                  </div>\n                </div>\n            )}\n          </div>\n        </OutsideClickHandler>\n    );\n  }\n  else {\n    return (\n        <OutsideClickHandler onOutsideClick={() => {setWalletVis(false)}}>\n          <div className={cn(styles.user, className)}>\n           <div className={styles.head} onClick={() => setWalletVis(!visible)}>\n              <div className={styles.disconnectedWallet}>\n                Connect Wallet\n              </div>\n            </div>\n          {walletVis && (\n              <div className={styles.body}>\n                <WalletSelector/>\n              </div>\n          )}\n          </div>\n        </OutsideClickHandler>\n    );\n  }\n};\n\nexport default User;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/Group/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Dropdown/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/Item/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Theme/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Open/index.js",["143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {totalSupply, mint, getOwnedNFTs, openPack, tokenURI} from \"../../smartContracts/Viridian1EPassMethods\"\n//import {useCryptoPrices} from \"react-realtime-crypto-prices\";\nimport {Breakpoint} from 'react-socks';\nimport {Carousel} from '3d-react-carousal';\nimport ReactLoading from \"react-loading\";\n\n// let slidez = [\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>];\n\nconst Open = (props) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState(0);\n    //const prices = useCryptoPrices([\"eth\"]);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [loadingOpening, setLoadingOpening] = useState(false);\n    const [showOpeningAnimation, setShowOpeningAnimation] = useState(false);\n    const [showOpenedCard, setShowOpenedCard] = useState(false);\n    const [slides, setSlides] = useState([]);\n    const [tokenIds, setTokenIds] = useState([]);\n\n    const [fetched, setFetched] = useState(false)\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        //alert(JSON.stringify(props));\n        if (props.account) {\n            //alert(await getOwnedNFTs(props.account));\n            if (!fetched) {\n                //alert('hi');\n               // alert('hi1');\n                //alert(await getOwnedNFTs(props.account));\n                //alert('hi3');\n                //setMinted(await totalSupply());\n\n\n                let nfts = await getOwnedNFTs(props.account);\n\n                //alert(\"NFTS: \" /+ JSON.stringify(nfts));\n\n                let slidesTemp = [];\n\n                let tID = [];\n\n                nfts.map(async (x, index) => {\n                    slidesTemp.push(<video autoPlay muted loop={true} playsInline style={{maxWidth: '60ex'}}>\n                        <source src='https://content.viridianexchange.com/videos/GenesisPackLoopCrop.mp4'\n                                type=\"video/mp4\"/>\n                    </video>);\n                    let uri = await tokenURI(x, props.account);\n                    tID.push(uri.split('/')[4]);\n                });\n\n                setSlides(slidesTemp);\n                slidesTemp = [];\n                setTokenIds(tID);\n                setFetched(true);\n            }\n        }\n        else {\n            setFetched(false);\n        }\n    }, [fetched, props]);\n\n    // let slides = [\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n    // ]\n\n    const callback = function(index){\n        console.log(\"callback\",index);\n        if (tokenIds.length <= 3) {\n            setCurrentIndex(index % tokenIds.length);\n        }\n        else {\n            setCurrentIndex(index);\n        }\n    }\n\n    const idParse = (id) => {\n        if (id) {\n            return \"#\" + id;\n        }\n        else {\n            return \"\";\n        }\n    }\n\n  return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                <p2 style={{color: 'grey'}}>Reveal the physically-backed NFT inside!</p2>\n                <h3 className={cn(\"h3\", styles.title)}>Open Viridian Genesis Packs</h3>\n                {/*{JSON.stringify(tokenIds)}*/}\n                {/*{JSON.stringify(slides.length)}*/}\n                {showOpenedCard && <div style={{textAlign: 'center'}}>\n                    <video autoPlay muted playsInline loop={true} style={{maxWidth: '100ex', borderRadius: '25px'}}>\n                        <source src='https://content.viridianexchange.com/videos/PikachuLoop.mp4'\n                                type=\"video/mp4\"/>\n                    </video></div>}\n\n                {showOpeningAnimation && !showOpenedCard &&\n                <div style={{textAlign: 'center'}}>\n                    <video autoPlay muted playsInline style={{maxWidth: '100ex', borderRadius: '25px'}}>\n                        <source src='https://content.viridianexchange.com/videos/PackOpenAnimation.mp4'\n                                type=\"video/mp4\"/>\n                    </video></div>}\n\n                {slides.length > 0 && !showOpeningAnimation && <Breakpoint small down>\n                    <div style={{textAlign: 'center'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint> }\n                {slides.length > 0 && !showOpeningAnimation && <Breakpoint medium up>\n                    <div style={{textAlign: 'center', minHeight: '65ex'}}>\n                        <Carousel slides={slides} onSlideChange={callback} arrows={true}/>\n                    </div>\n                </Breakpoint>}\n\n                {slides.length === 0 &&\n                    <div style={{textAlign: 'center', marginTop: '3ex'}}>\n                        <h2 style={{textAlign: 'center', color: 'gray', marginBottom: '2ex'}}>\n                            Purchase a Viridian Genesis Pack on secondary to open\n                        </h2>\n                        <a\n                        href=\"https://opensea.io\"\n                        target=\"_blank\" rel=\"noopener noreferrer\"\n                           style={{marginRight: '1ex'}}\n                        >\n                            <button\n                                className={cn(styles.link, {\n                                })}\n                            >\n                                <img style={{maxWidth: '5ex', marginRight: '1.5ex', marginLeft: '-.5ex'}} src='https://opensea.io/static/images/logos/opensea.svg'/>\n                                Opensea\n                            </button>\n                        </a>\n\n                        <a\n                           href=\"https://looksrare.org\"\n                           target=\"_blank\" rel=\"noopener noreferrer\"\n                            style={{marginLeft: '1ex'}}\n                        >\n                            <button\n                                className={cn(styles.link, {\n                                })}\n                            >\n                                <img style={{maxWidth: '6.8ex', marginLeft: '-2ex'}} src='https://logowik.com/content/uploads/images/looksrare9736.jpg'/>\n                                Looksrare\n                            </button>\n                        </a>\n                    </div>\n                }\n                {/*<h2 style={{marginTop: '2ex', textAlign: 'center'}}>*/}\n                {/*    Open 🃏*/}\n                {/*</h2>*/}\n                {/*<h3 style={{marginBottom: '2ex', textAlign: 'center'}}>*/}\n                {/*    <div className={styles.wallet}>*/}\n                {/*        <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                {/*        {values[0]}*/}\n                {/*    </div>*/}\n                {/*    {prices.eth && <p2 style={{color: 'grey'}}>*/}\n                {/*        ${((values[0] * prices.eth) * 100) / 100}*/}\n                {/*    </p2>}*/}\n                {/*</h3>*/}\n                {slides.length > 0 && <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                    {/*{JSON.stringify(props)}*/}\n                    {loadingOpening && !showOpeningAnimation && <button\n                        className={cn(styles.link, {\n                        })}\n                        style={{color: 'black'}}\n                    >\n                        <ReactLoading type={'spin'} color={'#bf9a36'} height={'25%'} width={'25%'} /> <div style={{marginLeft: '6ex', marginTop: '-2.75ex', marginBottom: '1ex'}}>Opening...</div>\n                    </button>}\n\n                    {!loadingOpening && <button\n                        className={cn(styles.link, {\n                        })}\n                        onClick={async () => {/*await openPack(props.account, values[0])*/ setLoadingOpening(true); setShowOpeningAnimation(true); await setTimeout(function() { setShowOpenedCard(true) }, 11500);}}\n                    >\n                        <img style={{width: '4ex', marginTop: '-.5ex', height: '6ex', marginRight: '1ex'}}\n                             src='/trading_card_icon.svg'\n                             alt='ETH' /> {\"Open Pack \" + idParse(tokenIds[currentIndex])}\n                    </button>}\n                </div>}\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Open;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Verify/index.js",["161","162","163","164","165","166","167","168","169","170","171","172"],"import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {totalSupply, mint} from \"../../smartContracts/Viridian1EPassMethods\"\nimport {useCryptoPrices} from \"react-realtime-crypto-prices\";\nimport {Breakpoint} from 'react-socks';\nimport {Carousel} from '3d-react-carousal';\n\nlet slides = [\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>];\n\nconst Drops = (props) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState(0);\n    const prices = useCryptoPrices([\"eth\"]);\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        setMinted(await totalSupply());\n    }, []);\n\n    // let slides = [\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n    // ]\n\n    const callback = function(index){\n        console.log(\"callback\",index);\n    }\n\n  return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                <h3 className={cn(\"h3\", styles.title)}>Verify Viridian Genesis Pack</h3>\n                <Breakpoint small down>\n                    <div style={{textAlign: 'center'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint>\n                <Breakpoint medium up>\n                    <div style={{textAlign: 'center',minHeight: '65ex'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint>\n                {/*<h2 style={{marginTop: '2ex', textAlign: 'center'}}>*/}\n                {/*    Open 🃏*/}\n                {/*</h2>*/}\n                {/*<h3 style={{marginBottom: '2ex', textAlign: 'center'}}>*/}\n                {/*    <div className={styles.wallet}>*/}\n                {/*        <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                {/*        {values[0]}*/}\n                {/*    </div>*/}\n                {/*    {prices.eth && <p2 style={{color: 'grey'}}>*/}\n                {/*        ${((values[0] * prices.eth) * 100) / 100}*/}\n                {/*    </p2>}*/}\n                {/*</h3>*/}\n                <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                    {/*{JSON.stringify(props)}*/}\n                    <button\n                        className={cn(styles.link, {\n                            [styles.active]: true,\n                        })}\n                        onClick={async () => {await mint(props.account, values[0])}}\n                    >\n                        Verify ✅\n                    </button>\n                </div>\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Drops;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/WalletSelector/index.js",["173","174","175","176","177","178","179","180","181"],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":60,"nodeType":"188","messageId":"189","endLine":1,"endColumn":70},{"ruleId":"186","severity":1,"message":"190","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"191","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":36},{"ruleId":"186","severity":1,"message":"192","line":11,"column":10,"nodeType":"188","messageId":"189","endLine":11,"endColumn":20},{"ruleId":"186","severity":1,"message":"193","line":16,"column":5,"nodeType":"188","messageId":"189","endLine":16,"endColumn":9},{"ruleId":"186","severity":1,"message":"194","line":41,"column":11,"nodeType":"188","messageId":"189","endLine":41,"endColumn":17},{"ruleId":"186","severity":1,"message":"195","line":41,"column":19,"nodeType":"188","messageId":"189","endLine":41,"endColumn":26},{"ruleId":"186","severity":1,"message":"196","line":41,"column":28,"nodeType":"188","messageId":"189","endLine":41,"endColumn":35},{"ruleId":"186","severity":1,"message":"197","line":41,"column":37,"nodeType":"188","messageId":"189","endLine":41,"endColumn":45},{"ruleId":"186","severity":1,"message":"198","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":41,"column":13,"nodeType":"201","endLine":44,"endColumn":4},{"ruleId":"199","severity":1,"message":"202","line":44,"column":6,"nodeType":"203","endLine":44,"endColumn":15,"suggestions":"204"},{"ruleId":"199","severity":1,"message":"200","line":46,"column":15,"nodeType":"201","endLine":62,"endColumn":6},{"ruleId":"199","severity":1,"message":"205","line":62,"column":8,"nodeType":"203","endLine":62,"endColumn":10,"suggestions":"206"},{"ruleId":"186","severity":1,"message":"207","line":15,"column":12,"nodeType":"188","messageId":"189","endLine":15,"endColumn":25},{"ruleId":"186","severity":1,"message":"208","line":15,"column":27,"nodeType":"188","messageId":"189","endLine":15,"endColumn":43},{"ruleId":"186","severity":1,"message":"209","line":21,"column":37,"nodeType":"188","messageId":"189","endLine":21,"endColumn":63},{"ruleId":"186","severity":1,"message":"210","line":22,"column":32,"nodeType":"188","messageId":"189","endLine":22,"endColumn":53},{"ruleId":"186","severity":1,"message":"211","line":23,"column":34,"nodeType":"188","messageId":"189","endLine":23,"endColumn":57},{"ruleId":"199","severity":1,"message":"200","line":29,"column":15,"nodeType":"201","endLine":31,"endColumn":6},{"ruleId":"186","severity":1,"message":"195","line":61,"column":21,"nodeType":"188","messageId":"189","endLine":61,"endColumn":28},{"ruleId":"186","severity":1,"message":"212","line":12,"column":5,"nodeType":"188","messageId":"189","endLine":12,"endColumn":17},{"ruleId":"186","severity":1,"message":"191","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"213","line":2,"column":16,"nodeType":"188","messageId":"189","endLine":2,"endColumn":23},{"ruleId":"186","severity":1,"message":"214","line":5,"column":8,"nodeType":"188","messageId":"189","endLine":5,"endColumn":12},{"ruleId":"186","severity":1,"message":"215","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":33},{"ruleId":"186","severity":1,"message":"216","line":67,"column":10,"nodeType":"188","messageId":"189","endLine":67,"endColumn":15},{"ruleId":"186","severity":1,"message":"217","line":67,"column":17,"nodeType":"188","messageId":"189","endLine":67,"endColumn":25},{"ruleId":"186","severity":1,"message":"218","line":68,"column":26,"nodeType":"188","messageId":"189","endLine":68,"endColumn":43},{"ruleId":"186","severity":1,"message":"219","line":70,"column":9,"nodeType":"188","messageId":"189","endLine":70,"endColumn":21},{"ruleId":"186","severity":1,"message":"220","line":74,"column":9,"nodeType":"188","messageId":"189","endLine":74,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":76,"column":98,"nodeType":"223","endLine":76,"endColumn":101},{"ruleId":"186","severity":1,"message":"224","line":14,"column":8,"nodeType":"188","messageId":"189","endLine":14,"endColumn":20},{"ruleId":"186","severity":1,"message":"225","line":16,"column":3,"nodeType":"188","messageId":"189","endLine":16,"endColumn":18},{"ruleId":"186","severity":1,"message":"226","line":17,"column":3,"nodeType":"188","messageId":"189","endLine":17,"endColumn":22},{"ruleId":"186","severity":1,"message":"227","line":24,"column":7,"nodeType":"188","messageId":"189","endLine":24,"endColumn":17},{"ruleId":"186","severity":1,"message":"195","line":52,"column":28,"nodeType":"188","messageId":"189","endLine":52,"endColumn":35},{"ruleId":"199","severity":1,"message":"200","line":54,"column":13,"nodeType":"201","endLine":58,"endColumn":4},{"ruleId":"199","severity":1,"message":"228","line":58,"column":6,"nodeType":"203","endLine":58,"endColumn":14,"suggestions":"229"},{"ruleId":"186","severity":1,"message":"230","line":61,"column":9,"nodeType":"188","messageId":"189","endLine":61,"endColumn":28},{"ruleId":"186","severity":1,"message":"231","line":70,"column":18,"nodeType":"188","messageId":"189","endLine":70,"endColumn":31},{"ruleId":"186","severity":1,"message":"232","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":19},{"ruleId":"186","severity":1,"message":"233","line":5,"column":9,"nodeType":"188","messageId":"189","endLine":5,"endColumn":27},{"ruleId":"186","severity":1,"message":"234","line":5,"column":29,"nodeType":"188","messageId":"189","endLine":5,"endColumn":34},{"ruleId":"186","severity":1,"message":"235","line":6,"column":9,"nodeType":"188","messageId":"189","endLine":6,"endColumn":20},{"ruleId":"186","severity":1,"message":"236","line":6,"column":22,"nodeType":"188","messageId":"189","endLine":6,"endColumn":26},{"ruleId":"186","severity":1,"message":"237","line":6,"column":42,"nodeType":"188","messageId":"189","endLine":6,"endColumn":50},{"ruleId":"186","severity":1,"message":"207","line":33,"column":12,"nodeType":"188","messageId":"189","endLine":33,"endColumn":25},{"ruleId":"186","severity":1,"message":"208","line":33,"column":27,"nodeType":"188","messageId":"189","endLine":33,"endColumn":43},{"ruleId":"186","severity":1,"message":"238","line":34,"column":12,"nodeType":"188","messageId":"189","endLine":34,"endColumn":18},{"ruleId":"186","severity":1,"message":"239","line":34,"column":20,"nodeType":"188","messageId":"189","endLine":34,"endColumn":29},{"ruleId":"186","severity":1,"message":"240","line":35,"column":12,"nodeType":"188","messageId":"189","endLine":35,"endColumn":18},{"ruleId":"186","severity":1,"message":"241","line":35,"column":20,"nodeType":"188","messageId":"189","endLine":35,"endColumn":29},{"ruleId":"186","severity":1,"message":"242","line":46,"column":11,"nodeType":"188","messageId":"189","endLine":46,"endColumn":15},{"ruleId":"186","severity":1,"message":"243","line":47,"column":11,"nodeType":"188","messageId":"189","endLine":47,"endColumn":14},{"ruleId":"186","severity":1,"message":"244","line":48,"column":11,"nodeType":"188","messageId":"189","endLine":48,"endColumn":14},{"ruleId":"199","severity":1,"message":"200","line":50,"column":15,"nodeType":"201","endLine":88,"endColumn":6},{"ruleId":"245","severity":1,"message":"246","line":163,"column":33,"nodeType":"223","endLine":163,"endColumn":165},{"ruleId":"245","severity":1,"message":"246","line":177,"column":33,"nodeType":"223","endLine":177,"endColumn":154},{"ruleId":"186","severity":1,"message":"232","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":19},{"ruleId":"186","severity":1,"message":"233","line":5,"column":9,"nodeType":"188","messageId":"189","endLine":5,"endColumn":27},{"ruleId":"186","severity":1,"message":"234","line":5,"column":29,"nodeType":"188","messageId":"189","endLine":5,"endColumn":34},{"ruleId":"186","severity":1,"message":"207","line":29,"column":12,"nodeType":"188","messageId":"189","endLine":29,"endColumn":25},{"ruleId":"186","severity":1,"message":"208","line":29,"column":27,"nodeType":"188","messageId":"189","endLine":29,"endColumn":43},{"ruleId":"186","severity":1,"message":"239","line":30,"column":20,"nodeType":"188","messageId":"189","endLine":30,"endColumn":29},{"ruleId":"186","severity":1,"message":"240","line":31,"column":12,"nodeType":"188","messageId":"189","endLine":31,"endColumn":18},{"ruleId":"186","severity":1,"message":"247","line":32,"column":11,"nodeType":"188","messageId":"189","endLine":32,"endColumn":17},{"ruleId":"186","severity":1,"message":"242","line":34,"column":11,"nodeType":"188","messageId":"189","endLine":34,"endColumn":15},{"ruleId":"186","severity":1,"message":"243","line":35,"column":11,"nodeType":"188","messageId":"189","endLine":35,"endColumn":14},{"ruleId":"186","severity":1,"message":"244","line":36,"column":11,"nodeType":"188","messageId":"189","endLine":36,"endColumn":14},{"ruleId":"199","severity":1,"message":"200","line":38,"column":15,"nodeType":"201","endLine":40,"endColumn":6},{"ruleId":"186","severity":1,"message":"191","line":1,"column":16,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"248","line":29,"column":13,"nodeType":"188","messageId":"189","endLine":29,"endColumn":20},{"ruleId":"186","severity":1,"message":"249","line":29,"column":32,"nodeType":"188","messageId":"189","endLine":29,"endColumn":42},{"ruleId":"221","severity":1,"message":"222","line":35,"column":13,"nodeType":"223","endLine":39,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":40,"column":17,"nodeType":"223","endLine":40,"endColumn":128},{"ruleId":"221","severity":1,"message":"222","line":41,"column":13,"nodeType":"223","endLine":44,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":45,"column":17,"nodeType":"223","endLine":46,"endColumn":69},{"ruleId":"221","severity":1,"message":"222","line":47,"column":13,"nodeType":"223","endLine":50,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":51,"column":17,"nodeType":"223","endLine":52,"endColumn":91},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Breakpoint' is defined but never used.","'web3' is assigned a value but never used.","'active' is assigned a value but never used.","'chainId' is assigned a value but never used.","'account' is assigned a value but never used.","'activate' is assigned a value but never used.","'withRouter' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'web3.eth.net'. Either include it or remove the dependency array.","ArrayExpression",["252"],"React Hook useEffect has missing dependencies: 'account' and 'activate'. Either include them or remove the dependency array.",["253"],"'initialLoaded' is assigned a value but never used.","'setInitialLoaded' is assigned a value but never used.","'setWhitelistMintingEnabled' is assigned a value but never used.","'setAddressOnWhitelist' is assigned a value but never used.","'setPublicMintingEnabled' is assigned a value but never used.","'biconomyWeb3' is assigned a value but never used.","'NavLink' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setSuccessMessage' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'successfulMessage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ReactLoading' is defined but never used.","'useCryptoPrices' is defined but never used.","'CryptoPriceProvider' is defined but never used.","'wcProvider' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'account', 'getVEXTBalance', and 'setVextBalance'. Either include them or remove the dependency array. If 'setVextBalance' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["254"],"'isMetaMaskInstalled' is assigned a value but never used.","'connectWallet' is defined but never used.","'ProgressBar' is defined but never used.","'getTrackBackground' is defined but never used.","'Range' is defined but never used.","'totalSupply' is defined but never used.","'mint' is defined but never used.","'openPack' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'minted' is assigned a value but never used.","'setMinted' is assigned a value but never used.","'STEP' is assigned a value but never used.","'MIN' is assigned a value but never used.","'MAX' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'prices' is assigned a value but never used.","'library' is assigned a value but never used.","'deactivate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [account, web3.eth.net]",{"range":"261","text":"262"},"Update the dependencies array to be: [account, activate]",{"range":"263","text":"264"},"Update the dependencies array to be: [account, active, getVEXTBalance, setVextBalance]",{"range":"265","text":"266"},[1773,1782],"[account, web3.eth.net]",[2336,2338],"[account, activate]",[2321,2329],"[account, active, getVEXTBalance, setVextBalance]"]