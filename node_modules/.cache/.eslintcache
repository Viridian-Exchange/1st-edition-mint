[{"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/index.js":"1","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/reportWebVitals.js":"2","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js":"3","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/local-dev-config.js":"4","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js":"5","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/index.js":"6","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/index.js":"7","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/index.js":"8","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/index.js":"9","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Modal/index.js":"10","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Image.js":"11","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Icon.js":"12","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js":"13","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/Group/index.js":"14","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Dropdown/index.js":"15","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/Item/index.js":"16","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Theme/index.js":"17","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js":"18","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Open/index.js":"19","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Verify/index.js":"20","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/WalletSelector/index.js":"21","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/connectors.js":"22","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/walletHandlers.js":"23","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/utils.js":"24","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Mint/index.js":"25","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/MintTransaction/index.js":"26","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/ViridianTokenMethods.js":"27","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/ViridianGenPassMethods.js":"28","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Switch/index.js":"29"},{"size":506,"mtime":1651710104091,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1643655018399,"results":"32","hashOfConfig":"31"},{"size":9381,"mtime":1652486791294,"results":"33","hashOfConfig":"31"},{"size":1905,"mtime":1652818618000,"results":"34","hashOfConfig":"31"},{"size":2533,"mtime":1651772385196,"results":"35","hashOfConfig":"31"},{"size":145,"mtime":1643653269634,"results":"36","hashOfConfig":"31"},{"size":6229,"mtime":1651780750853,"results":"37","hashOfConfig":"31"},{"size":4169,"mtime":1643655591244,"results":"38","hashOfConfig":"31"},{"size":11105,"mtime":1641160069679,"results":"39","hashOfConfig":"31"},{"size":1422,"mtime":1651886368364,"results":"40","hashOfConfig":"31"},{"size":379,"mtime":1637244256672,"results":"41","hashOfConfig":"31"},{"size":28130,"mtime":1637244256670,"results":"42","hashOfConfig":"31"},{"size":7588,"mtime":1651780663491,"results":"43","hashOfConfig":"31"},{"size":1068,"mtime":1624424612627,"results":"44","hashOfConfig":"31"},{"size":1281,"mtime":1632849901986,"results":"45","hashOfConfig":"31"},{"size":708,"mtime":1637244256731,"results":"46","hashOfConfig":"31"},{"size":691,"mtime":1624424612647,"results":"47","hashOfConfig":"31"},{"size":4946,"mtime":1650737523326,"results":"48","hashOfConfig":"31"},{"size":11009,"mtime":1652485661573,"results":"49","hashOfConfig":"31"},{"size":4876,"mtime":1651965380144,"results":"50","hashOfConfig":"31"},{"size":2484,"mtime":1651709784067,"results":"51","hashOfConfig":"31"},{"size":746,"mtime":1651700774876,"results":"52","hashOfConfig":"31"},{"size":1303,"mtime":1651702610789,"results":"53","hashOfConfig":"31"},{"size":360,"mtime":1651771053309,"results":"54","hashOfConfig":"31"},{"size":17865,"mtime":1652822548584,"results":"55","hashOfConfig":"31"},{"size":6135,"mtime":1652486802548,"results":"56","hashOfConfig":"31"},{"size":9161,"mtime":1652233775643,"results":"57","hashOfConfig":"31"},{"size":9474,"mtime":1652822485781,"results":"58","hashOfConfig":"31"},{"size":504,"mtime":1624424612645,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1feyeat",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/index.js",[],["131","132"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/reportWebVitals.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n//import axios from \"axios\";\nimport \"./styles/app.sass\";\nimport Page from \"./components/Page\";\nimport Faq from \"./screens/Faq\";\nimport Mint from \"./screens/Mint\";\nimport Open from \"./screens/Open\";\nimport Verify from \"./screens/Verify\";\nimport Web3 from \"web3\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Breakpoint, BreakpointProvider } from 'react-socks';\nimport { useWeb3React } from '@web3-react/core'\nimport {Biconomy} from \"@biconomy/mexa\";\nimport {WalletLinkConnector} from \"@web3-react/walletlink-connector\";\nimport {WalletConnectConnector} from \"@web3-react/walletconnect-connector\";\nimport {InjectedConnector} from \"@web3-react/injected-connector\";\nimport {NetworkConnector} from \"@web3-react/network-connector\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\nimport {toHex, truncateAddress} from \"./utils/utils\";\nimport { ethers } from \"ethers\";\n\nconst providerOptions = {\n    coinbasewallet: {\n        package: CoinbaseWalletSDK, // Required\n        options: {\n            appName: \"Viridian Exchange\", // Required\n            rpc: \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\", // Optional if `infuraId` is provided; otherwise it's required\n            chainId: 4, // Optional. It defaults to 1 if not provided\n            darkMode: true // Optional. Use dark theme, defaults to false\n        }\n    },\n    walletconnect: {\n        package: WalletConnectProvider, // required\n        options: {\n            rpc: \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"\n        }\n    },\n};\n\nconst networkParams = {\n    \"0x0100\": {\n        chainId: \"0x0100\",\n        rpcUrls: [\"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"],\n        chainName: \"Polygon Mainnet\",\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        blockExplorerUrls: [\"https://explorer.harmony.one\"],\n        iconUrls: [\"https://harmonynews.one/wp-content/uploads/2019/11/slfdjs.png\"]\n    },\n};\n\nconst web3Modal = new Web3Modal({\n    network: \"mainnet\", // optional\n    cacheProvider: true, // optional\n    providerOptions, // required,\n    theme: \"dark\"\n});\n\n//TODO: show address, list of followers, description, etc on profile page\n// function in the smart contract to add a user that is followed\n// (triggered by follow button press-> calls the function which takes in an address and adds the user to the list of following)\n// front end will pull the followee user and be able to show the profile on the initial user\n// , and call in the CLI, once followers working, you will see another profile show up\n// use item flow -> Profile/user flow\n// get current user wallet, then abi->getuserfromaddress->return json of user struct\nfunction App() {\n    const [biconomyFetched, setBiconomyFetched] = useState(false);\n    const [account, setAccount] = useState();\n    const [provider, setProvider] = useState();\n    const [library, setLibrary] = useState();\n    const [signature, setSignature] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [chainId, setChainId] = useState();\n    const [network, setNetwork] = useState();\n    const [message, setMessage] = useState(\"\");\n    const [signedMessage, setSignedMessage] = useState(\"\");\n    const [verified, setVerified] = useState();\n    const [gaslessReady, setGaslessReady] = useState(false);\n\n    const connectWallet = async () => {\n        //try {\n            const provider = await web3Modal.connect();\n            const library = new Web3(provider);\n            //alert(JSON.stringify(library.givenProvider));\n            const accounts = await library.eth.getAccounts();\n            //alert(JSON.stringify(accounts));\n            const network = await library.eth.net.getId();\n            //alert(JSON.stringify(network));\n            setProvider(provider);\n            setLibrary(library);\n            if (accounts) setAccount(accounts[0]);\n            setChainId(network);\n\n        // } catch (error) {\n        //     alert(JSON.stringify(error));\n        // }\n    };\n\n    const handleNetwork = (e) => {\n        const id = e.target.value;\n        setNetwork(Number(id));\n    };\n\n    const handleInput = (e) => {\n        const msg = e.target.value;\n        setMessage(msg);\n    };\n\n    const switchNetwork = async () => {\n        try {\n            await window.ethereum.request({\n                method: \"wallet_switchEthereumChain\",\n                params: [{ chainId: toHex(4) }]\n            });\n        } catch (switchError) {\n            //alert(JSON.stringify(switchError.code))\n            if (switchError.code === 4902) {\n                try {\n                    await window.ethereum.request({\n                        method: 'wallet_addEthereumChain',\n                        params: [\n                            {\n                                chainName: 'Polygon Mainnet',\n                                chainId: toHex(137),\n                                nativeCurrency: {\n                                    name: 'Polygon',\n                                    symbol: 'MATIC',\n                                    decimals: 18\n                                },\n                                rpcUrls: ['https://rpc-mainnet.maticvigil.com/'],\n                                blockExplorerUrls: ['https://polygonscan.com/']\n                            }]\n                            });\n                } catch (error) {\n                    setError(error);\n                }\n            }\n        }\n    };\n\n    const refreshState = () => {\n        setAccount();\n        setChainId();\n        setNetwork(\"\");\n        setMessage(\"\");\n        setSignature(\"\");\n        setVerified(undefined);\n    };\n\n    const disconnect = async () => {\n        await web3Modal.clearCachedProvider();\n        refreshState();\n    };\n\n    useEffect(async () => {\n        if (web3Modal.cachedProvider) {\n            await connectWallet();\n        }\n    }, []);\n\n    useEffect(async () => {\n        //alert(chainId);\n        if (toHex(chainId) !== toHex(4)) {\n            await switchNetwork();\n        }\n    }, [chainId])\n\n    useEffect(() => {\n        if (provider?.on) {\n            const handleAccountsChanged = (accounts) => {\n                console.log(\"accountsChanged\", accounts);\n                if (accounts) setAccount(accounts[0]);\n            };\n\n            const handleChainChanged = (_hexChainId) => {\n                setChainId(_hexChainId);\n            };\n\n            const handleDisconnect = () => {\n                console.log(\"disconnect\", error);\n                disconnect();\n            };\n\n            provider.on(\"accountsChanged\", handleAccountsChanged);\n            provider.on(\"chainChanged\", handleChainChanged);\n            provider.on(\"disconnect\", handleDisconnect);\n\n            return () => {\n                if (provider.removeListener) {\n                    provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n                    provider.removeListener(\"chainChanged\", handleChainChanged);\n                    provider.removeListener(\"disconnect\", handleDisconnect);\n                }\n            };\n        }\n    }, [provider]);\n\n  return (\n        <BreakpointProvider>\n            <Router forceRefresh={true}>\n              <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                >\n                  <Redirect to=\"/genesis-drop\" />\n                </Route>\n                <Route\n                    exact\n                    path=\"/genesis-drop\"\n                    render={() => (\n                        <Page biconomyFetched={biconomyFetched} account={account} setAccount={setAccount} connectWallet = {connectWallet} disconnect={disconnect}>\n                          <Mint biconomyFetched={biconomyFetched} account={account} setAccount={setAccount} gaslessReady={gaslessReady} />\n                        </Page>\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/open\"\n                    render={() => (\n                        <Page biconomyFetched={biconomyFetched} account={account} setAccount={setAccount} connectWallet = {connectWallet} disconnect={disconnect}>\n                          <Open biconomyFetched={biconomyFetched} account={account} setAccount={setAccount} />\n                        </Page>\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/verify\"\n                    render={() => (\n                        <Page>\n                          <Verify  />\n                        </Page>\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/faq\"\n                    render={() => (\n                        <Page>\n                          <Faq />\n                        </Page>\n                    )}\n                />\n                <Route path=\"*\">\n                  <Redirect to=\"/genesis-drop\" />\n                </Route>\n              </Switch>\n            </Router>\n        </BreakpointProvider>\n  );\n}\n\nexport default App;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/local-dev-config.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js",["159","160","161","162","163","164","165","166","167","168","169","170"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\nimport WalletSelector from \"../WalletSelector\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport { Injected, WalletConnect, CoinbaseWallet } from \"../../utils/connectors\";\nimport { switchNetwork } from \"../../utils/walletHandlers\";\n\nconst Page = ({biconomyFetched, children, account, setAccount, connectWallet, disconnect}) => {\n    const [networkName, setNetworkName] = useState(\"\");\n    const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n    const [visibleModalWallets, setVisibleModalWallets] = useState(false);\n\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n\n    //const { activate, account, library } = useWeb3React();\n\n    // useEffect(async () => {\n    //     alert(\"LBR: \" + JSON.stringify(library));\n    //     if (biconomyFetched === true) {\n    //         alert(\"lib: \" + JSON.stringify(library));\n    //         // if (localStorage.getItem('lastAddConn') !== account) {\n    //         //     localStorage.setItem('connection', '');\n    //         // }\n    //\n    //         if (localStorage.getItem('connection') === 'mm') {\n    //             activate(Injected);\n    //         } else if (localStorage.getItem('connection') === 'wc') {\n    //             activate(WalletConnect);\n    //         } else if (localStorage.getItem('connection') === 'cb') {\n    //             activate(CoinbaseWallet);\n    //         }\n    //     }\n    // }, [biconomyFetched]);\n\n  useEffect(async () => {\n    clearAllBodyScrollLocks();\n\n    // if (library) {\n    //     await switchNetwork(library.provider);\n    // }\n  }, []);\n\n      return (\n          <div className={styles.page}>\n\n              <Modal\n                  visible={visibleModalWallets}\n                  onClose={() => setVisibleModalWallets(false)}\n              >\n                  <WalletSelector />\n              </Modal>\n              <Header account={account} setAccount={setAccount} connectWallet={connectWallet} disconnect={disconnect} />\n              <div className={styles.inner}>{children}</div>\n              <Footer/>\n          </div>\n      );\n};\n\nexport default Page;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/index.js",["171","172","173"],"import React, { useState, useEffect } from \"react\";\nimport { Link, NavLink, } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport styles from \"./Header.module.sass\";\nimport Icon from \"../Icon\";\nimport Image from \"../Image\";\nimport User from \"./User\";\nimport  { Breakpoint } from 'react-socks';\n\nconst Headers = (props) => {\n  const [visibleNav, setVisibleNav] = useState(false);\n\n\n  return (\n      <>\n        <Breakpoint small down>\n          <header className={styles.header}>\n            <div className={cn(\"container\", styles.container)}>\n                <div className={cn(styles.wrapper, { [styles.active]: visibleNav })}>\n                  <nav className={styles.nav}>\n                    <Link\n                        style={{marginTop: '2ex'}}\n                        className={styles.link}\n                        activeClassName={styles.active}\n                        to=\"/genesis-drop\"\n                        key={1}\n                    >\n                      Mint\n                    </Link>\n                    <Link\n                        style={{marginTop: '2ex'}}\n                        className={styles.link}\n                        activeClassName={styles.active}\n                        to=\"/open\"\n                        key={2}\n                    >\n                      Open\n                    </Link>\n                    <Link\n                        style={{marginTop: '2ex'}}\n                        className={styles.link}\n                        activeClassName={styles.active}\n                        to=\"/verify\"\n                        key={2}\n                    >\n                      Verify\n                    </Link>\n                    <a\n                        className={styles.link}\n                        // activeClassName={styles.active}\n                        href=\"https://viridianexchange.com\"\n                        // key={0}\n                    >\n                      About\n                    </a>\n                    <Link\n                        className={styles.link}\n                        activeClassName={styles.active}\n                        to=\"/faq\"\n                        key={3}\n                    >\n                      Help\n                    </Link>\n                  </nav>\n                </div>\n              {/*TODO: Change to \"LINK\"*/}\n              <a className={cn(\"button-small\", styles.button)}\n                    href=\"https://buy.moonpay.com/?currencyCode=eth_polygon&singleCurrencyMode=true\"\n                 target=\"_blank\" rel=\"noopener noreferrer\"\n                  //to=\"/BuyCrypto\"\n                  >\n                Buy Polygon ETH\n              </a>\n\n              <User setPromptInstallMetamask={props.setPromptInstallMetamask} ethBalance={props.ethBalance} setEthBalance={props.setEthBalance} vextBalance={props.vextBalance} setVextBalance={props.setVextBalance} className={styles.user} account = {props.account} setAccount = {props.setAccount}\n                    connected = {props.connected} setConnected = {props.setConnected} userInfo = {props.userInfo} setUserInfo={props.setUserInfo}/>\n              <button\n                  className={cn(styles.burger, { [styles.active]: visibleNav })}\n                  onClick={() => setVisibleNav(!visibleNav)}>\n              </button>\n            </div>\n          </header>\n        </Breakpoint>\n      <Breakpoint medium up>\n    <header className={styles.header}>\n      <div className={cn(\"container\", styles.container)}>\n        <Link className={styles.logo} to=\"/\">\n          <Image\n            className={styles.pic}\n            src=\"/logo_words.svg\"\n            srcDark=\"/logo_words.svg\"\n            alt=\"Viridian Exchange\"\n          />\n        </Link>\n          <div className={cn(styles.wrapper, { [styles.active]: visibleNav })}>\n            <nav className={styles.nav}>\n              <Link\n                  className={styles.link}\n                  activeClassName={styles.active}\n                  to=\"/genesis-drop\"\n                  key={1}\n              >\n                Mint\n              </Link>\n              <Link\n                  className={styles.link}\n                  activeClassName={styles.active}\n                  to=\"/open\"\n                  key={1}\n              >\n                Open\n              </Link>\n              <Link\n                  className={styles.link}\n                  activeClassName={styles.active}\n                  to=\"/verify\"\n                  key={1}\n              >\n                Verify\n              </Link>\n              <a\n                  className={styles.link}\n                  // activeClassName={styles.active}\n                  href=\"https://viridianexchange.com\"\n                  target=\"_blank\" rel=\"noopener noreferrer\"\n                  key={3}\n              >\n                About\n              </a>\n              <Link\n                  className={styles.link}\n                  activeClassName={styles.active}\n                  to=\"/faq\"\n                  key={4}\n              >\n                Help\n              </Link>\n            </nav>\n          </div>\n        {/*TODO: Change to \"LINK\"*/}\n        <a className={cn(\"button-small\", styles.button)}\n           target=\"_blank\" rel=\"noopener noreferrer\"\n              href=\"https://buy.moonpay.com/?currencyCode=eth_polygon&singleCurrencyMode=true\"\n            //to=\"/BuyCrypto\"\n            >\n          Buy Polygon ETH\n        </a>\n        <User connectWallet={props.connectWallet} disconnect={props.disconnect} setVisibleModalWallets={props.setVisibleModalWallets} setPromptInstallMetamask={props.setPromptInstallMetamask} ethBalance={props.ethBalance} setEthBalance={props.setEthBalance} vextBalance={props.vextBalance} setVextBalance={props.setVextBalance} className={styles.user} account = {props.account} setAccount = {props.setAccount}\n              connected = {props.connected} setConnected = {props.setConnected} userInfo = {props.userInfo} setUserInfo={props.setUserInfo}/>\n        <button\n          className={cn(styles.burger, { [styles.active]: visibleNav })}\n          onClick={() => setVisibleNav(!visibleNav)}>\n        </button>\n      </div>\n    </header>\n      </Breakpoint>\n      </>\n  );\n};\n\nexport default Headers\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/index.js",["174","175","176","177","178","179","180"],"import React, { useState, Button } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport styles from \"./Footer.module.sass\";\nimport Group from \"./Group\";\nimport Image from \"../Image\";\n// import Form from \"../Form\";\n// import Theme from \"../Theme\";\n// import {HandleAddEmail} from '../../apis/EmailListAPI'\n// import config from '../../config.json'\n// import styles1 from \"../Form/Form.module.sass\";\nimport Icon from \"../Icon\";\n\nconst items = [\n  {\n    title: \"Viridian Exchange\",\n    menu: [\n      {\n        title: \"Home\",\n        url: \"/\",\n      },\n      {\n        title: \"Contact Us\",\n        url: \"mailto:contact@viridianexchange.com\",\n      },\n      {\n        title: \"FAQ\",\n        url: \"/faq\",\n      },\n\n    ],\n  },\n  {\n    title: \"Follow us\",\n    menu: [\n      {\n        title: \"Linkedin\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.linkedin.com/company/viridian-exchange/\"\n      },\n      {\n        title: \"Twitter\",\n        //url: \"/BuyCrypto\",\n        url: \"https://twitter.com/ViridianEx\"\n      },\n      {\n        title: \"Instagram\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.instagram.com/viridianexchange/\"\n      },\n      {\n        title: \"Facebook\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.facebook.com/Viridian-Exchange-106600915066707\"\n      },\n      {\n        title: \"Telegram\",\n        //url: \"/BuyCrypto\",\n        url: \"https://t.me/viridian_exchange\"\n      },\n    ],\n  },\n];\n\n\nconst Footers = () => {\n  const [email, setEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = React.useState(false);\n\n  const handleSubmit = (e) => {\n    alert();\n  };\n\n  const successfulMessage = () => {\n    if (successMessage) {\n      return <div style={{marginLeft: \"10px\"}}> <Icon name=\"check\" size=\"18\" fill={\"#BF9A36\"} /> <a>Sign Up Successful!</a></div>\n    }\n  };\n\n  return (\n    <footer className={styles.footer}>\n      <div className={cn(\"container\", styles.container)}>\n        <div className={styles.row}>\n          <div className={styles.col}>\n            <Link className={styles.logo} to=\"/\">\n              <Image\n                className={styles.pic}\n                src=\"/logo.svg\"\n                srcDark=\"/logo.svg\"\n                alt=\"Viridian Exchange\"\n              />\n            </Link>\n            <div className={styles.info}>The future of collectible exchange.</div>\n            {/*<div className={styles.version}>*/}\n            {/*  <div className={styles.details}>Dark theme</div>*/}\n            {/*  <Theme className=\"theme-big\" />*/}\n            {/*</div>*/}\n          </div>\n          <div className={styles.col}>\n            {items.map((x, index) => (\n              <Group className={styles.group} item={x} key={index} />\n            ))}\n          </div>\n          {/*<div className={styles.col}>*/}\n          {/*  <div className={styles.category}>Join Our Newsletter</div>*/}\n          {/*  <div className={styles.text}>*/}\n          {/*    Be the first to hear about new product updates and exclusive pack releases!*/}\n          {/*  </div>*/}\n          {/*  /!*<Form*!/*/}\n          {/*  /!*  className={styles.form}*!/*/}\n          {/*  /!*  setValue={setEmail}*!/*/}\n          {/*  /!*  click={() => {HandleAddEmail(email); setSuccessMessage(true)}}*!/*/}\n          {/*  /!*  placeholder=\"Enter your email\"*!/*/}\n          {/*  /!*  type=\"email\"*!/*/}\n          {/*  /!*  name=\"email\"*!/*/}\n          {/*  /!*>*!/*/}\n\n\n          {/*/!*<button className = {styles1.btn}*!/*/}\n          {/*/!*       type = \"submit\" inverted basic onClick={(e) => {HandleAddEmail(email); setSuccessMessage(true);}}>Sign up</button>*!/*/}\n\n\n\n          {/*  /!*</Form>*!/*/}\n          {/*  {successfulMessage()}*/}\n\n          {/*</div>*/}\n        </div>\n        <div>\n\n        </div>\n        <div className={styles.foot}>\n          <div className={styles.copyright}>\n            Copyright © 2021 Viridian Exchange Inc. All rights reserved\n          </div>\n          <div className={styles.note}>\n            We use cookies for better service. <a href=\"/#\">Accept</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footers;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Modal/index.js",["181","182"],"import React, { useCallback, useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport cn from \"classnames\";\nimport styles from \"./Modal.module.sass\";\nimport Icon from \"../Icon\";\n\nconst Modal = ({\n  outerClassName,\n  containerClassName,\n  visible,\n  onClose,\n  children,\n}) => {\n  const escFunction = useCallback(\n    (e) => {\n      if (e.keyCode === 27) {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escFunction, false);\n    return () => {\n      document.removeEventListener(\"keydown\", escFunction, false);\n    };\n  }, [escFunction]);\n\n  const scrollRef = useRef(null);\n\n  useEffect(() => {\n    visible ? disableBodyScroll(scrollRef) : enableBodyScroll(scrollRef);\n  }, [visible]);\n\n  return createPortal(\n    visible && (\n      <div className={styles.modal} ref={scrollRef}>\n        <div className={cn(styles.outer, outerClassName)}>\n            <div className={cn(styles.container, containerClassName)}>\n              {children}\n              {/*<button className={styles.close} onClick={onClose}>*/}\n              {/*  <Icon name=\"close\" size=\"14\" />*/}\n              {/*</button>*/}\n            </div>\n        </div>\n      </div>\n    ),\n    document.body\n  );\n};\n\nexport default Modal;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Image.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Icon.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js",["183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport styles from \"./User.module.sass\";\nimport Icon from \"../../Icon\";\nimport Theme from \"../../Theme\";\nimport Web3 from \"web3\";\nimport config from \"../../../local-dev-config\";\n//import veJSON from \"../../../abis/ViridianExchange.json\";\nimport vTJSON from \"../../../abis/ViridianToken.json\";\nimport BigNumber from \"bignumber.js\";\n//import {FetchUser} from \"../../../apis/UserAPI\";\nimport ReactLoading from \"react-loading\";\nimport {\n  useCryptoPrices,\n  CryptoPriceProvider\n} from \"react-realtime-crypto-prices\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletSelector from \"../../WalletSelector\";\nimport { useWeb3React } from '@web3-react/core'\nimport CoinbaseWalletSDK from '@coinbase/wallet-sdk';\nimport Web3Modal from \"web3modal\";\n\n// const wcProvider = new WalletConnectProvider({\n//   rpc: {1: \"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\"},\n//   bridge: \"https://bridge.walletconnect.org\",\n//   qrcodeModalOptions: {\n//   },\n// });\n\n//let web3 = new Web3(new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n\n//TODO: Instead of account, pass in user with all info through to profile/user\n\nlet provider;\nlet selectedAccount;\n\nconst items = (account, disconnect) => [\n  {\n    title: \"Disconnect\",\n    icon: \"exit\",\n    url: \"/\",\n  },\n];\n\nconst User = ({ className, connectWallet, disconnect, account, setAccount, connected, setConnected, userInfo, setUserInfo, ethBalance, setEthBalance, setPromptInstallMetamask, setVisibleModalWallets}) => {\n  const [visible, setVisible] = useState(false);\n  const [walletVis, setWalletVis] = useState(false);\n  const [balance, setBalance] = useState(0);\n\n  useEffect(async () => {\n    if(account) {\n      setBalance(parseBalance());\n    }\n\n    //alert('initing')\n  }, []);\n\n  function parseBalance(balance) {\n    balance = new BigNumber(balance);\n    if (10000 < balance && balance < 1000000.0) {\n      return (balance / 1000).toFixed(2) + \"K\"\n    }\n    else if (balance > 1000000.0) {\n      return (balance / 1000000).toFixed(2) + \"M\"\n    }\n    else {\n      return balance.toFixed(2);\n    }\n  }\n\n  const round = (number, decimalPlaces) => {\n    const factorOfTen = Math.pow(10, decimalPlaces)\n    return Math.round(number * factorOfTen) / factorOfTen\n  }\n\n  const shortenAccount = () => {\n    if (account) {\n      return account.toString().substring(0, 6) + \"...\" + account.toString().substring(38);\n    }\n  }\n\n  //alert(account);\n  if (account) {\n    //if username is empty, ask to set up\n  return (\n    <OutsideClickHandler onOutsideClick={() => setVisible(false)}>\n      <div className={cn(styles.user, className)}>\n        <div className={styles.head} onClick={() => setVisible(!visible)}>\n          {(balance === 0) ?\n              [<div className={styles.avatar}>\n                <Icon name=\"wallet\" fill='white' size=\"32\" />\n              </div>,\n                <div className={styles.wallet}>\n                  {account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)}\n                </div>] : [<div className={styles.avatar}>\n                <Icon name=\"wallet\" fill='white' size=\"32\" />\n            </div>,\n                <div>{(ethBalance === 0) && (parseBalance(balance) !== \"0.00\") ? <div className={styles.wallet}>\n          {parseBalance(balance)} <span className={styles.currency}>USDT</span>\n            </div> : <div className={styles.wallet}>\n                  {/*<img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                  {/*{ethBalance}*/}\n                  {account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)}\n                </div>}</div>]}\n        </div>\n            {visible && (\n                <div className={styles.body}>\n                  <CopyToClipboard text={account}\n                      // onCopy={() => this.setState({copied: true})}\n                  >\n                    <div className={styles.code}>\n                      <div className={styles.number}>{shortenAccount()}</div>\n                      <button className={styles.copy}>\n                        <Icon name=\"copy\" size=\"16\"/>\n                      </button>\n                    </div>\n                  </CopyToClipboard>\n                  <div className={styles.wrap}>\n                    <div className={styles.line}>\n                      {/*<div className={styles.preview}>*/}\n                      {/*  <img*/}\n                      {/*      src=\"/images/content/ve_circle.png\"*/}\n                      {/*      alt=\"Ethereum\"*/}\n                      {/*  />*/}\n                      {/*</div>*/}\n                      <div className={styles.details} style={{marginLeft: '-1ex'}}>\n                        <div className={styles.info}>Balance</div>\n                        <div>{(ethBalance === 0) ? <div className={styles.price}>\n                          {parseBalance(balance)} <span className={styles.currency}>USDT</span>\n                        </div> : <div className={styles.price}>\n                          <img style={{width: '2ex', marginTop: '-.4ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n                          {ethBalance}\n                          {/*<>{prices.eth && <div style={{color: 'grey', fontSize: '5'}}>${Math.round((prices.eth * ethBalance) * 100) / 100}</div>}</>*/}\n                          {/*<span className={styles.currency}>ETH</span>*/}\n                        </div>}</div>\n                      </div>\n                    </div>\n                    {/*<button*/}\n                    {/*    className={cn(\"button-stroke button-small\", styles.button)}*/}\n                    {/*>*/}\n                    {/*  Manage fun on Coinbase*/}\n                    {/*</button>*/}\n                  </div>\n                  <div className={styles.menu}>\n                    <button\n                        className={styles.item}\n                        onClick={async () => await disconnect()}\n                        //key={index}\n                        //to={{ pathname: x.url, state: { account: account }}}\n                    >\n                      <div className={styles.icon}>\n                        <Icon name='exit' size=\"20\"/>\n                      </div>\n                      <div className={styles.text}>Disconnect</div>\n                    </button>\n                  </div>\n                </div>\n            )}\n          </div>\n        </OutsideClickHandler>\n    );\n  }\n  else {\n    return (\n        <OutsideClickHandler onOutsideClick={() => {setWalletVis(false)}}>\n          <div className={cn(styles.user, className)}>\n           <div className={styles.head} onClick={async () => await connectWallet()}>\n              <div className={styles.disconnectedWallet}>\n                Connect Wallet\n              </div>\n            </div>\n          {walletVis && (\n              <div className={styles.body}>\n                <WalletSelector/>\n              </div>\n          )}\n          </div>\n        </OutsideClickHandler>\n    );\n  }\n};\n\nexport default User;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/Group/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Dropdown/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/Item/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Theme/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js",[],["201","202"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Open/index.js",["203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222"],"import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {totalSupply, mint, getOwnedNFTs, open, openTo, tokenURI} from \"../../smartContracts/ViridianGenPassMethods\"\n//import {useCryptoPrices} from \"react-realtime-crypto-prices\";\nimport {Breakpoint} from 'react-socks';\nimport {Carousel} from '3d-react-carousal';\nimport ReactLoading from \"react-loading\";\nimport { BlurTransition } from \"react-transitions-library\";\nimport Switch from \"../../components/Switch\";\n\nconst Open = (props) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState(0);\n    //const prices = useCryptoPrices([\"eth\"]);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [loadingOpening, setLoadingOpening] = useState(false);\n    const [showOpeningAnimation, setShowOpeningAnimation] = useState(false);\n    const [showOpenedCard, setShowOpenedCard] = useState(false);\n    const [startFade, setStartFade] = useState(false);\n    //const [slides, setSlides] = useState([]);\n    const [tokenIds, setTokenIds] = useState([]);\n    const [packNums, setPackNums] = useState([]);\n    const [showCardVideo, setShowCardVideo] = useState(false);\n    const [curVideo, setCurVideo] = useState('https://content.viridianexchange.com/videos/PackOpenAnimation.mp4')\n    const [fetched, setFetched] = useState(false);\n    const [streamerModeActive, setStreamerModeActive] = useState(false);\n    const [streamerReceiver, setStreamerReceiver] = useState('');\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        //alert(JSON.stringify(props));\n        if (props.account) {\n            //alert(await getOwnedNFTs(props.account));\n            if (!fetched) {\n                //alert('hi');\n               // alert('hi1');\n                //alert(await getOwnedNFTs(props.account));\n                //alert('hi3');\n                //setMinted(await totalSupply());\n\n\n                let nfts = await getOwnedNFTs(props.account);\n\n                //alert(\"NFTS: \" /+ JSON.stringify(nfts));\n\n                let slidesTemp = [];\n\n                let pID = [];\n                let tID = [];\n\n                nfts.map(async (x, index) => {\n                    slidesTemp.push(<video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n                        <source src='https://content.viridianexchange.com/videos/GenesisPackLoopCrop.mp4'\n                                type=\"video/mp4\"/>\n                    </video>);\n                    let uri = await tokenURI(x, props.account);\n                    pID.push(uri.split('/')[4]);\n                    tID.push(x);\n                });\n\n                //TODO: ADD THIS BACK!!!\n                //setSlides(slidesTemp);\n                slidesTemp = [];\n                setPackNums(pID);\n                setTokenIds(tID);\n                setFetched(true);\n            }\n        }\n        else {\n            setFetched(false);\n        }\n    }, [fetched, props]);\n\n    let slides = [\n        <video style={{width: '40ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='http://content.viridianexchange.com/videos/transition-short-crop.mp4' alt='ETH' />,\n        <video style={{width: '40ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='http://content.viridianexchange.com/videos/transition-short-crop.mp4' alt='ETH' />,\n        <video style={{width: '40ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='http://content.viridianexchange.com/videos/transition-short-crop.mp4' alt='ETH' />,\n        <video style={{width: '40ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='http://content.viridianexchange.com/videos/transition-short-crop.mp4' alt='ETH' />,\n        <video style={{width: '40ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='http://content.viridianexchange.com/videos/transition-short-crop.mp4' alt='ETH' />\n    ]\n\n    const runOpeningAnimation = async () => {\n        setShowOpeningAnimation(true); await setTimeout(function() { setStartFade(true); setCurVideo('http://content.viridianexchange.com/videos/transition-short-crop.mp4') }, 9100); await setTimeout(function() { setCurVideo('https://content.viridianexchange.com/videos/PikachuLoop.mp4');\n        }, 10000);\n        await setTimeout(function() {\n            setStartFade(false); }, 10250);\n    }\n\n    const callback = function(index){\n        console.log(\"callback\",index);\n        if (packNums.length <= 3) {\n            setCurrentIndex(index % packNums.length);\n        }\n        else {\n            setCurrentIndex(index);\n        }\n    }\n\n    const idParse = (id) => {\n        if (id) {\n            return \"#\" + id;\n        }\n        else {\n            return \"\";\n        }\n    }\n\n  return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                <p2 style={{color: 'grey'}}>Reveal the physically-backed NFT inside!</p2>\n                <h3 className={cn(\"h3\", styles.title)}>Open Viridian Genesis Packs</h3>\n                {showOpeningAnimation && <BlurTransition\n                    in={startFade}\n                    timeout={250}\n                    from={\"0px\"}\n                    to={\"25px\"}\n                    style={{textAlign: 'center', minWidth: '100ex', borderRadius: '35px'}}\n                >\n                    <div style={{textAlign: 'center', minWidth: '100ex', borderRadius: '35px'}}>\n                        <video autoPlay muted playsInline key={curVideo} loop={true} style={{maxWidth: '100ex', borderRadius: '35px'}}>\n                            <source src={curVideo}\n                                    type=\"video/mp4\"/>\n                        </video></div>\n                </BlurTransition>}\n\n                {slides.length > 0 && !showOpeningAnimation && <Breakpoint small down>\n                    <div style={{textAlign: 'center'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint> }\n                {slides.length > 0 && !showOpeningAnimation && <Breakpoint medium up>\n                    <div style={{textAlign: 'center', minHeight: '65ex'}}>\n                        <Carousel slides={slides} onSlideChange={callback} arrows={true}/>\n                    </div>\n                </Breakpoint>}\n\n                {slides.length === 0 &&\n                    <div style={{textAlign: 'center', marginTop: '3ex'}}>\n                        <h2 style={{textAlign: 'center', color: 'gray', marginBottom: '2ex'}}>\n                            Purchase a Viridian Genesis Pack on secondary to open\n                        </h2>\n                        <a\n                        href=\"https://opensea.io\"\n                        target=\"_blank\" rel=\"noopener noreferrer\"\n                           style={{marginRight: '1ex'}}\n                        >\n                            <button\n                                className={cn(styles.link, {\n                                })}\n                            >\n                                <img style={{maxWidth: '5ex', marginRight: '1.5ex', marginLeft: '-.5ex'}} src='https://opensea.io/static/images/logos/opensea.svg'/>\n                                Opensea\n                            </button>\n                        </a>\n\n                        <a\n                           href=\"https://looksrare.org\"\n                           target=\"_blank\" rel=\"noopener noreferrer\"\n                            style={{marginLeft: '1ex'}}\n                        >\n                            <button\n                                className={cn(styles.link, {\n                                })}\n                            >\n                                <img style={{maxWidth: '6.8ex', marginLeft: '-2ex'}} src='https://logowik.com/content/uploads/images/looksrare9736.jpg'/>\n                                Looksrare\n                            </button>\n                        </a>\n                    </div>\n                }\n                {slides.length > 0 && <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                    {/*{JSON.stringify(props)}*/}\n                    {loadingOpening && !showOpeningAnimation && <button\n                        className={cn(styles.link, {\n                        })}\n                        style={{color: 'black'}}\n                    >\n                        <ReactLoading type={'spin'} color={'#bf9a36'} height={'25%'} width={'25%'} /> <div style={{marginLeft: '6ex', marginTop: '-2.75ex', marginBottom: '1ex'}}>Opening...</div>\n                    </button>}\n\n                    {!loadingOpening && <>{streamerModeActive ? <button\n                        className={cn(styles.link, {\n                        })}\n                        onClick={async () => {setLoadingOpening(true); await open(props.account, tokenIds[currentIndex], setLoadingOpening, \"\", setMinted).then(() =>\n                        {runOpeningAnimation();}) }}\n                    >\n                        <img style={{width: '4ex', marginTop: '-.5ex', height: '6ex', marginRight: '1ex'}}\n                             src='/trading_card_icon.svg'\n                             alt='ETH' /> {\"Open Pack \" + idParse(packNums[currentIndex])}\n                    </button>: <button\n                            className={cn(styles.link, {\n                            })}\n                            onClick={async () => {setLoadingOpening(true); await openTo(props.account, streamerReceiver, tokenIds[currentIndex], setLoadingOpening, \"\", setMinted).then(() =>\n                            {runOpeningAnimation();}) }}\n                        >\n                            <img style={{width: '4ex', marginTop: '-.5ex', height: '6ex', marginRight: '1ex'}}\n                                 src='/trading_card_icon.svg'\n                                 alt='ETH' /> {\"Open Pack \" + idParse(packNums[currentIndex])}\n                        </button>}</>}\n                </div>}\n            </div>\n            <div style={{textAlign: 'center', marginTop: '5ex'}}>\n                {streamerModeActive && <div style={{marginBottom: '10px'}}>\n                    <div>Break Reciever Address</div>\n                    <input\n                    className={styles.input}\n                    //type={type}\n                    value={streamerReceiver}\n                    onChange={(e) => setStreamerReceiver(e.target.value)}\n                    name='Reciever Address'\n                    placeholder='0x...'\n                    required\n                />\n                </div>}\n                <Switch value={streamerModeActive} setValue={setStreamerModeActive}/>\n                <div style={{color: 'grey'}}>Streamer Mode</div>\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Open;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Verify/index.js",["223","224","225","226","227","228","229","230","231","232","233","234"],"import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {totalSupply, mint} from \"../../smartContracts/ViridianGenPassMethods\"\nimport {useCryptoPrices} from \"react-realtime-crypto-prices\";\nimport {Breakpoint} from 'react-socks';\nimport {Carousel} from '3d-react-carousal';\n\nlet slides = [\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>];\n\nconst Drops = (props) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState(0);\n    const prices = useCryptoPrices([\"eth\"]);\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        setMinted(await totalSupply());\n    }, []);\n\n    // let slides = [\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n    // ]\n\n    const callback = function(index){\n        console.log(\"callback\",index);\n    }\n\n  return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                <h3 className={cn(\"h3\", styles.title)}>Verify Viridian Genesis Pack</h3>\n                <Breakpoint small down>\n                    <div style={{textAlign: 'center'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint>\n                <Breakpoint medium up>\n                    <div style={{textAlign: 'center',minHeight: '65ex'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint>\n                {/*<h2 style={{marginTop: '2ex', textAlign: 'center'}}>*/}\n                {/*    Open 🃏*/}\n                {/*</h2>*/}\n                {/*<h3 style={{marginBottom: '2ex', textAlign: 'center'}}>*/}\n                {/*    <div className={styles.wallet}>*/}\n                {/*        <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                {/*        {values[0]}*/}\n                {/*    </div>*/}\n                {/*    {prices.eth && <p2 style={{color: 'grey'}}>*/}\n                {/*        ${((values[0] * prices.eth) * 100) / 100}*/}\n                {/*    </p2>}*/}\n                {/*</h3>*/}\n                <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                    {/*{JSON.stringify(props)}*/}\n                    <button\n                        className={cn(styles.link, {\n                            [styles.active]: true,\n                        })}\n                        onClick={async () => {await mint(props.account, values[0])}}\n                    >\n                        Verify ✅\n                    </button>\n                </div>\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Drops;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/WalletSelector/index.js",["235","236","237","238","239","240","241","242","243","244","245"],"import React, {useEffect} from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./SignupPrompt.module.sass\";\nimport { useWeb3React } from '@web3-react/core'\nimport { Injected, WalletConnect, CoinbaseWallet } from \"../../utils/connectors\";\nimport {switchNetwork} from \"../../utils/walletHandlers\";\nimport Web3Modal from \"web3modal\";\nimport Web3 from \"web3\";\n\n//TODO: PASS IN USERINFO AND UPDATE THIS WHEN PUSHED TO DYNAMO\n// SET FETCHED PROP SO WHEN THAT CHANGES, FETCHES THE USER AND SETS IT TO USERINFO\nconst WalletSelector = ({ className }) => {\n\n  // return (\n  //   <div className={cn(className, styles.transfer)} style={{textAlign: 'center', marginTop: '-2ex'}}>\n  //     <div className={cn(\"h4\", styles.info)}>Wallet Providers</div>\n  //       <div className={styles.btns}>\n  //           <a className={cn(\"button-stroke\", styles.button)} onClick={() => { activate(Injected).then(() => {\n  //               localStorage.setItem('connection', 'mm');\n  //               alert(account);\n  //               localStorage.setItem('lastAddConn', account);\n  //\n  //           }); }}>\n  //               <img src='/images/content/metamask-fox.svg' style={{maxWidth: '5ex', marginRight: '2ex', marginLeft: '-4ex'}}/>Metamask</a>\n  //           <a className={cn(\"button-stroke\", styles.button)} onClick={() => {activate(WalletConnect).then(() => {\n  //               localStorage.setItem('connection', 'wc');\n  //               localStorage.setItem('lastAddConn', account);\n  //           }) }}>\n  //               <img src='https://d1nxzqpcg2bym0.cloudfront.net/google_play/com.connectwallet.protocol/a7569c36-9df9-11eb-b409-2380f9a26ccc/128x128'\n  //                    style={{maxWidth: '5ex', marginRight: '2ex'}}/>WalletConnect</a>\n  //           <a className={cn(\"button-stroke\", styles.button)} onClick={() => { activate(CoinbaseWallet).then(() => {\n  //               localStorage.setItem('connection', 'cb');\n  //               localStorage.setItem('lastAddConn', account);\n  //           }) }}>\n  //               <img src='/cb-wallet.svg'\n  //                    style={{maxWidth: '5ex', marginRight: '2ex', marginLeft: '-5.5ex'}}/>Coinbase</a>\n  //       </div>\n  //       <div style={{marginTop: '1ex'}}>\n  //     <a className={styles.text} target=\"_blank\" rel=\"noopener noreferrer\" href='https://www.youtube.com/watch?v=YVgfHZMFFFQ&t=37s'>\n  //       What is a crypto wallet?\n  //     </a>\n  //       </div>\n  //   </div>\n  // );\n};\n\nexport default WalletSelector;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/connectors.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/walletHandlers.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/utils/utils.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Mint/index.js",["246","247","248","249","250","251","252"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/MintTransaction/index.js",["253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"import React, {useEffect, useState} from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./MintTransaction.module.sass\";\nimport { useWeb3React } from '@web3-react/core'\nimport { Injected, WalletConnect, CoinbaseWallet } from \"../../utils/connectors\";\nimport {switchNetwork} from \"../../utils/walletHandlers\";\nimport Web3Modal from \"web3modal\";\nimport Web3 from \"web3\";\nimport Icon from \"../Icon\";\nimport {Breakpoint} from 'react-socks';\nimport {approve, approveRegular, tokenAllowance} from \"../../smartContracts/ViridianTokenMethods\";\nimport {mint} from \"../../smartContracts/ViridianGenPassMethods\";\nimport config from \"../../local-dev-config\";\nimport vGPackJSON from \"../../abis/ViridianGenesisPack.json\";\nimport vTPackJSON from \"../../abis/MetaTransactionTokenABI.json\";\n\nlet web3WS = new Web3(new Web3.providers.WebsocketProvider( \"wss://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"));\n\n//TODO: PASS IN USERINFO AND UPDATE THIS WHEN PUSHED TO DYNAMO\n// SET FETCHED PROP SO WHEN THAT CHANGES, FETCHES THE USER AND SETS IT TO USERINFO\nconst MintTransaction = ({ className, mintSucceeded, numPacks, account, setMintSucceeded, setMintFailed, setMinting }) => {\n    const [approved, setApproved] = useState(false);\n    const [approveHash, setApproveHash] = useState('...');\n    const [mintHash, setMintHash] = useState('...');\n\n    const shortenAddress = (address) => {\n        if (address) {\n            return address.toString().substring(0, 6) + \"...\" + address.toString().substring(38);\n        }\n    }\n\n    useEffect(async () => {\n        //alert(await tokenAllowance(account, config.rinkeby_contract_addresses.vgp_contract))\n\n        try {\n            const vpContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n            const vtContractAddress = config.rinkeby_contract_addresses.vt_contract;\n\n            let allowance = await tokenAllowance(account, vpContractAddress);\n\n            let vpABI = new web3WS.eth.Contract(vGPackJSON['abi'], vpContractAddress);\n            let vtABI = new web3WS.eth.Contract(vTPackJSON, vtContractAddress);\n\n            //alert(parseInt(allowance) === 0)\n            if (parseInt(allowance) === 0) {\n                //await approve(account, vpContractAddress);\n                await approveRegular(account, vpContractAddress);\n\n                await vtABI.events.Approval({filter: {to: account}}).on('data', async function (event) {\n                    if (event) {\n                        setApproved(true);\n                        //alert('found event')\n                        await mint(account, numPacks, setMintSucceeded, setMintFailed, setMinting);\n\n                        setApproveHash(event.transactionHash);\n                    }\n                });\n            }\n            else {\n                //alert('already approved')\n                setApproved(true);\n                await mint(account, numPacks, setMintSucceeded, setMintFailed, setMinting);\n            }\n\n            await vpABI.events.Mint({filter: {to: account}}).on('data', async function (event) {\n                if (event) {\n                    setMintSucceeded(true)\n                    setMinting(false);\n                    setMintHash(event.transactionHash);\n                }\n            });\n        }\n        catch (e) {\n            //TODO: Put this back when ready\n            console.error(e);\n            setMinting(false);\n        }\n    }, []);\n\n  return (\n    <div className={cn(className, styles.transfer)} style={{textAlign: 'center', marginTop: '-2ex'}}>\n      <h1>Minting {numPacks} Viridian Genesis Pack{numPacks > 1 && 's'}</h1>\n        <h4 style={{color: 'lightgray', float: 'left', marginLeft: '1.5ex'}}>Status</h4><h4 style={{color: 'lightgray', float: 'right', marginRight: '1.5ex'}}>Transaction hash</h4>\n        <Breakpoint medium up>\n            <div className={styles.btns} style={{textAlign: 'center'}}>\n                <h2 className={styles.pending}>\n                    {!approved ?\n                        <div className={styles.info}><img src=\"/circle.svg\" style={{maxWidth: '3ex'}}/> Approve Polygon ETH\n                        </div> : <div className={styles.info}><img src=\"/circle_check.svg\" style={{maxWidth: '3ex'}}/> Approve Polygon ETH\n                        </div>\n                    }\n                    <p2 className={styles.hash}>{shortenAddress(approveHash)}</p2>\n                </h2>\n                <h2 className={styles.pending}>\n                    {!mintSucceeded ? <div className={styles.info} style={{marginLeft: '-8ex'}}><img src=\"/circle.svg\" style={{maxWidth: '3ex'}}/> Mint</div> :\n                        <div className={styles.info} style={{marginLeft: '-8ex'}}><img src=\"/circle_check.svg\" style={{maxWidth: '3ex'}}/> Mint</div>}\n                    <p2 className={styles.hash}>{shortenAddress(mintHash)}</p2>\n                </h2>\n            </div>\n        </Breakpoint>\n        <Breakpoint small down>\n            <div className={styles.btns} style={{textAlign: 'center'}}>\n                <h2 className={styles.pending}>\n                    {!approved ?\n                        <div className={styles.info}><img src=\"/circle.svg\" style={{maxWidth: '3ex'}}/> Approve ETH\n                        </div> : <div className={styles.info}><img src=\"/circle_check.svg\" style={{maxWidth: '3ex'}}/> Approve ETH\n                        </div>\n                    }\n                    <p2 className={styles.hash}>{shortenAddress(approveHash)}</p2>\n                </h2>\n                <h2 className={styles.pending}>\n                    {!mintSucceeded ? <div className={styles.info} style={{marginLeft: '-4.3ex'}}><img src=\"/circle.svg\" style={{maxWidth: '3ex'}}/> Mint</div> :\n                        <div className={styles.info} style={{marginLeft: '-4.3ex'}}><img src=\"/circle_check.svg\" style={{maxWidth: '3ex'}}/> Mint</div>}\n                    <p2 className={styles.hash}>{shortenAddress(mintHash)}</p2>\n                </h2>\n            </div>\n        </Breakpoint>\n        {approved && mintSucceeded && <button className={styles.link}>Close</button>}\n    </div>\n  );\n};\n\nexport default MintTransaction;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/ViridianTokenMethods.js",["271"],"/*******************************************\n * THIS IS THE EIP-712 SIGN IMPLEMENTATION *\n *******************************************/\n\nimport config from \"../local-dev-config\";\nimport vTJSON from \"../abis/MetaTransactionTokenABI.json\";\nimport Web3 from \"web3\";\nimport {Biconomy} from \"@biconomy/mexa\";\n//let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\nlet walletWeb3 = new Web3(Web3.givenProvider || Web3.providers.HttpProvider( \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"));\n\nconst biconomy = new Biconomy(Web3.givenProvider || new Web3.providers.HttpProvider( \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"),{apiKey: \"TVCsgQVfk.a6031565-1cb6-40da-8a60-2ffec22e3bed\", debug: true});\n\nlet biconomyWeb3 = new Web3(biconomy);\n\n// biconomy.onEvent(biconomy.READY, () => {\n//     // Initialize your dapp here like getting user accounts etc\n//     //alert(\"initialized\");\n// }).onEvent(biconomy.ERROR, (error, message) => {\n//     // Handle error while initializing mexa\n//     //alert(error);\n// });\n\nconst getSignatureParameters = signature => {\n    if (!walletWeb3.utils.isHexStrict(signature)) {\n        throw new Error(\n            'Given value \"'.concat(signature, '\" is not a valid hex string.')\n        );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = walletWeb3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n        r: r,\n        s: s,\n        v: v\n    };\n};\n\nexport async function approve(fromAddr, exchangeAddress) {\n    const vTContractAddress = config.rinkeby_contract_addresses.vtContract;\n\n    //let contract = new web3.eth.Contract(vTJSON, vTContractAddress);\n\n    let infinite_approve_amount = '115792089237316195423570985008687907853269984665640564039457584007913129639935'; //(2^256 - 1 )\n\n    //let functionSignature = contract.methods.approve(exchangeAddress, infinite_approve_amount).encodeABI();\n\n    // This web3 instance is used to get user signature from connected wallet\n    //let walletWeb3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider( \"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\"));\n\n    // Initialize constants\n    const domainType = [\n        { name: \"name\", type: \"string\" },\n        { name: \"version\", type: \"string\" },\n        { name: \"verifyingContract\", type: \"address\" },\n        { name: \"salt\", type: \"bytes32\" },\n    ];\n    const metaTransactionType = [\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"from\", type: \"address\" },\n        { name: \"functionSignature\", type: \"bytes\" }\n    ];\n// replace the chainId 42 if network is not kovan\n    // TODO: Make sure replacing verifyingContract with the WETH contract is correct\n    let domainData = {\n        name: \"Wrapped Ether\",\n        version: \"1\",\n        verifyingContract: vTContractAddress,\n        // converts Number to bytes32. Use your chainId instead of 42 if network is not Kovan\n        // TODO: Make sure this is correct\n        salt: '0x' + (137).toString(16).padStart(64, '0')\n    };\n\n\n        let contract = new biconomyWeb3.eth.Contract(\n            vTJSON,\n            vTContractAddress);\n\n                    let nonce = await contract.methods.getNonce(fromAddr).call();\n                    // Create your target method signature.. here we are calling setQuote() method of our contract\n                    let functionSignature = contract.methods.approve(exchangeAddress, infinite_approve_amount).encodeABI();\n                    let message = {};\n                    message.nonce = parseInt(nonce);\n                    message.from = fromAddr;\n                    message.functionSignature = functionSignature;\n\n                    const dataToSign = JSON.stringify({\n                    types: {\n                    EIP712Domain: domainType,\n                    MetaTransaction: metaTransactionType\n                },\n                    domain: domainData,\n                    primaryType: \"MetaTransaction\",\n                    message: message\n                });\n\n                    // NOTE: Using walletWeb3 here, as it is connected to the wallet where user account is present.\n                    // Get the EIP-712 Signature and send the transaction\n                    walletWeb3.currentProvider.send({\n                    jsonrpc: \"2.0\",\n                    id: 999999999999,\n                    method: \"eth_signTypedData_v4\",\n                    params: [fromAddr, dataToSign]\n                },function(error, response) {\n                    // Check github repository for getSignatureParameters helper method\n                    let { r, s, v } = getSignatureParameters(response.result);\n\n                    let tx = contract.methods.executeMetaTransaction(fromAddr,\n                    functionSignature, r, s, v)\n                    .send({from: fromAddr});\n\n                    tx.on(\"transactionHash\", function(hash) {\n                    // Handle transaction hash\n                }).once(\"confirmation\", function(confirmationNumber, receipt) {\n                    // Handle confirmation\n                        alert(confirmationNumber);\n                }).on(\"error\", function(error) {\n                    // Handle error\n                        alert(\"ERROR: \" + JSON.stringify(error));\n                });\n\n                }\n                    );\n}\n\nexport async function tokenAllowance(from, exchangeAddress) {\n    //const vTContractAddress = config.mumbai_contract_addresses.vt_contract;\n\n    const vTContractAddress = config.rinkeby_contract_addresses.vt_contract;\n\n    let vTABI = new walletWeb3.eth.Contract(vTJSON, vTContractAddress);\n\n\n    //TODO: Figure out why from is wrong\n    //alert(from);\n\n    //alert(await vTABI.methods.allowance(from, exchangeAddress).call());\n    //alert(await vTABI.methods.allowance(from, exchangeAddress).call());\n\n    let infinite_approve_amount = '115792089237316195423570985008687907853269984665640564039457584007913129639935'; //(2^256 - 1 )\n\n    alert(from + \" \" + exchangeAddress)\n    let tx = await vTABI.methods.allowance(from, exchangeAddress).call();\n    alert(tx);\n\n    // await tx.on(\"transactionHash\", function (hash) {\n    //     console.log(`Transaction hash is ${hash}`);\n    //     alert(`Transaction sent. Waiting for confirmation ..`);\n    // }).once(\"confirmation\", function (confirmationNumber, receipt) {\n    //     console.log(receipt);\n    //     console.log(receipt.transactionHash);\n    //     //do something with transaction hash\n    // });\n\n    await console.log(JSON.stringify(tx))\n\n    return tx;\n    //await console.log(JSON.stringify(tx))\n}\n\nexport async function balanceOf(from) {\n    //const vTContractAddress = config.mumbai_contract_addresses.vt_contract;\n\n    const vTContractAddress = config.rinkeby_contract_addresses.vt_contract;\n\n    let vTABI = new walletWeb3.eth.Contract(vTJSON, vTContractAddress);\n\n\n    //TODO: Figure out why from is wrong\n\n    let tx = await vTABI.methods.balanceOf(from).call();\n\n    // await tx.on(\"transactionHash\", function (hash) {\n    //     console.log(`Transaction hash is ${hash}`);\n    //     alert(`Transaction sent. Waiting for confirmation ..`);\n    // }).once(\"confirmation\", function (confirmationNumber, receipt) {\n    //     console.log(receipt);\n    //     console.log(receipt.transactionHash);\n    //     //do something with transaction hash\n    // });\n\n    await console.log(JSON.stringify(tx))\n\n    return tx;\n    //await console.log(JSON.stringify(tx))\n}\n\n/**************************************\n * Original Non-Gassless Approve Call *\n **************************************/\n\nexport async function approveRegular(from, exchangeAddress) {\n    //const vTContractAddress = config.mumbai_contract_addresses.vt_contract;\n\n    const vTContractAddress = config.rinkeby_contract_addresses.vt_contract;\n\n    let vTABI = new walletWeb3.eth.Contract(vTJSON, vTContractAddress);\n\n    //TODO: Figure out why from is wrong\n    //alert(from);\n\n    //alert(await vTABI.methods.allowance(from, exchangeAddress).call());\n    //alert(await vTABI.methods.allowance(from, '0xE88F4ae472687ce2026eb2d587C5C0c42a5F2047').call());\n\n    let infinite_approve_amount = '115792089237316195423570985008687907853269984665640564039457584007913129639935'; //(2^256 - 1 )\n    \n    alert(from + \" \" + exchangeAddress);\n    let tx = await vTABI.methods.approve(exchangeAddress, infinite_approve_amount).send({from: from, signatureType: biconomy.EIP712_SIGN});\n\n    // await tx.on(\"transactionHash\", function (hash) {\n    //     console.log(`Transaction hash is ${hash}`);\n    //     alert(`Transaction sent. Waiting for confirmation ..`);\n    // }).once(\"confirmation\", function (confirmationNumber, receipt) {\n    //     console.log(receipt);\n    //     console.log(receipt.transactionHash);\n    //     //do something with transaction hash\n    // });\n\n    await console.log(JSON.stringify(tx))\n\n    return tx;\n    //await console.log(JSON.stringify(tx))\n}","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/ViridianGenPassMethods.js",["272","273","274"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Switch/index.js",[],{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","severity":1,"message":"280","line":1,"column":60,"nodeType":"281","messageId":"282","endLine":1,"endColumn":70},{"ruleId":"279","severity":1,"message":"283","line":11,"column":10,"nodeType":"281","messageId":"282","endLine":11,"endColumn":22},{"ruleId":"279","severity":1,"message":"284","line":12,"column":10,"nodeType":"281","messageId":"282","endLine":12,"endColumn":20},{"ruleId":"279","severity":1,"message":"285","line":13,"column":10,"nodeType":"281","messageId":"282","endLine":13,"endColumn":22},{"ruleId":"279","severity":1,"message":"286","line":14,"column":9,"nodeType":"281","messageId":"282","endLine":14,"endColumn":17},{"ruleId":"279","severity":1,"message":"287","line":15,"column":9,"nodeType":"281","messageId":"282","endLine":15,"endColumn":28},{"ruleId":"279","severity":1,"message":"288","line":16,"column":9,"nodeType":"281","messageId":"282","endLine":16,"endColumn":31},{"ruleId":"279","severity":1,"message":"289","line":17,"column":9,"nodeType":"281","messageId":"282","endLine":17,"endColumn":26},{"ruleId":"279","severity":1,"message":"290","line":18,"column":9,"nodeType":"281","messageId":"282","endLine":18,"endColumn":25},{"ruleId":"279","severity":1,"message":"291","line":22,"column":16,"nodeType":"281","messageId":"282","endLine":22,"endColumn":31},{"ruleId":"279","severity":1,"message":"292","line":23,"column":10,"nodeType":"281","messageId":"282","endLine":23,"endColumn":16},{"ruleId":"279","severity":1,"message":"293","line":43,"column":7,"nodeType":"281","messageId":"282","endLine":43,"endColumn":20},{"ruleId":"279","severity":1,"message":"294","line":69,"column":29,"nodeType":"281","messageId":"282","endLine":69,"endColumn":47},{"ruleId":"279","severity":1,"message":"295","line":72,"column":12,"nodeType":"281","messageId":"282","endLine":72,"endColumn":19},{"ruleId":"279","severity":1,"message":"296","line":73,"column":12,"nodeType":"281","messageId":"282","endLine":73,"endColumn":21},{"ruleId":"279","severity":1,"message":"297","line":76,"column":12,"nodeType":"281","messageId":"282","endLine":76,"endColumn":19},{"ruleId":"279","severity":1,"message":"298","line":77,"column":12,"nodeType":"281","messageId":"282","endLine":77,"endColumn":19},{"ruleId":"279","severity":1,"message":"299","line":78,"column":12,"nodeType":"281","messageId":"282","endLine":78,"endColumn":25},{"ruleId":"279","severity":1,"message":"300","line":78,"column":27,"nodeType":"281","messageId":"282","endLine":78,"endColumn":43},{"ruleId":"279","severity":1,"message":"301","line":79,"column":12,"nodeType":"281","messageId":"282","endLine":79,"endColumn":20},{"ruleId":"279","severity":1,"message":"302","line":80,"column":26,"nodeType":"281","messageId":"282","endLine":80,"endColumn":41},{"ruleId":"279","severity":1,"message":"303","line":101,"column":11,"nodeType":"281","messageId":"282","endLine":101,"endColumn":24},{"ruleId":"279","severity":1,"message":"304","line":106,"column":11,"nodeType":"281","messageId":"282","endLine":106,"endColumn":22},{"ruleId":"305","severity":1,"message":"306","line":157,"column":15,"nodeType":"307","endLine":161,"endColumn":6},{"ruleId":"305","severity":1,"message":"306","line":163,"column":15,"nodeType":"307","endLine":168,"endColumn":6},{"ruleId":"305","severity":1,"message":"308","line":198,"column":8,"nodeType":"309","endLine":198,"endColumn":18,"suggestions":"310"},{"ruleId":"279","severity":1,"message":"311","line":2,"column":10,"nodeType":"281","messageId":"282","endLine":2,"endColumn":20},{"ruleId":"279","severity":1,"message":"285","line":10,"column":9,"nodeType":"281","messageId":"282","endLine":10,"endColumn":21},{"ruleId":"279","severity":1,"message":"312","line":11,"column":10,"nodeType":"281","messageId":"282","endLine":11,"endColumn":18},{"ruleId":"279","severity":1,"message":"313","line":11,"column":20,"nodeType":"281","messageId":"282","endLine":11,"endColumn":33},{"ruleId":"279","severity":1,"message":"314","line":11,"column":35,"nodeType":"281","messageId":"282","endLine":11,"endColumn":49},{"ruleId":"279","severity":1,"message":"315","line":12,"column":10,"nodeType":"281","messageId":"282","endLine":12,"endColumn":23},{"ruleId":"279","severity":1,"message":"316","line":15,"column":12,"nodeType":"281","messageId":"282","endLine":15,"endColumn":23},{"ruleId":"279","severity":1,"message":"317","line":15,"column":25,"nodeType":"281","messageId":"282","endLine":15,"endColumn":39},{"ruleId":"279","severity":1,"message":"318","line":16,"column":12,"nodeType":"281","messageId":"282","endLine":16,"endColumn":36},{"ruleId":"279","severity":1,"message":"319","line":16,"column":38,"nodeType":"281","messageId":"282","endLine":16,"endColumn":65},{"ruleId":"279","severity":1,"message":"320","line":19,"column":7,"nodeType":"281","messageId":"282","endLine":19,"endColumn":11},{"ruleId":"305","severity":1,"message":"306","line":41,"column":13,"nodeType":"307","endLine":47,"endColumn":4},{"ruleId":"279","severity":1,"message":"321","line":1,"column":27,"nodeType":"281","messageId":"282","endLine":1,"endColumn":36},{"ruleId":"279","severity":1,"message":"322","line":2,"column":16,"nodeType":"281","messageId":"282","endLine":2,"endColumn":23},{"ruleId":"279","severity":1,"message":"323","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":12},{"ruleId":"279","severity":1,"message":"324","line":1,"column":27,"nodeType":"281","messageId":"282","endLine":1,"endColumn":33},{"ruleId":"279","severity":1,"message":"325","line":67,"column":10,"nodeType":"281","messageId":"282","endLine":67,"endColumn":15},{"ruleId":"279","severity":1,"message":"326","line":67,"column":17,"nodeType":"281","messageId":"282","endLine":67,"endColumn":25},{"ruleId":"279","severity":1,"message":"327","line":68,"column":26,"nodeType":"281","messageId":"282","endLine":68,"endColumn":43},{"ruleId":"279","severity":1,"message":"328","line":70,"column":9,"nodeType":"281","messageId":"282","endLine":70,"endColumn":21},{"ruleId":"279","severity":1,"message":"329","line":74,"column":9,"nodeType":"281","messageId":"282","endLine":74,"endColumn":26},{"ruleId":"330","severity":1,"message":"331","line":76,"column":98,"nodeType":"332","endLine":76,"endColumn":101},{"ruleId":"279","severity":1,"message":"333","line":4,"column":8,"nodeType":"281","messageId":"282","endLine":4,"endColumn":27},{"ruleId":"279","severity":1,"message":"323","line":7,"column":8,"nodeType":"281","messageId":"282","endLine":7,"endColumn":12},{"ruleId":"279","severity":1,"message":"334","line":2,"column":10,"nodeType":"281","messageId":"282","endLine":2,"endColumn":14},{"ruleId":"279","severity":1,"message":"335","line":7,"column":8,"nodeType":"281","messageId":"282","endLine":7,"endColumn":13},{"ruleId":"279","severity":1,"message":"336","line":8,"column":8,"nodeType":"281","messageId":"282","endLine":8,"endColumn":12},{"ruleId":"279","severity":1,"message":"337","line":9,"column":8,"nodeType":"281","messageId":"282","endLine":9,"endColumn":14},{"ruleId":"279","severity":1,"message":"338","line":11,"column":8,"nodeType":"281","messageId":"282","endLine":11,"endColumn":14},{"ruleId":"279","severity":1,"message":"339","line":14,"column":8,"nodeType":"281","messageId":"282","endLine":14,"endColumn":20},{"ruleId":"279","severity":1,"message":"340","line":16,"column":3,"nodeType":"281","messageId":"282","endLine":16,"endColumn":18},{"ruleId":"279","severity":1,"message":"341","line":17,"column":3,"nodeType":"281","messageId":"282","endLine":17,"endColumn":22},{"ruleId":"279","severity":1,"message":"342","line":20,"column":8,"nodeType":"281","messageId":"282","endLine":20,"endColumn":29},{"ruleId":"279","severity":1,"message":"285","line":22,"column":10,"nodeType":"281","messageId":"282","endLine":22,"endColumn":22},{"ruleId":"279","severity":1,"message":"343","line":23,"column":8,"nodeType":"281","messageId":"282","endLine":23,"endColumn":25},{"ruleId":"279","severity":1,"message":"344","line":24,"column":8,"nodeType":"281","messageId":"282","endLine":24,"endColumn":17},{"ruleId":"279","severity":1,"message":"345","line":37,"column":5,"nodeType":"281","messageId":"282","endLine":37,"endColumn":13},{"ruleId":"279","severity":1,"message":"346","line":38,"column":5,"nodeType":"281","messageId":"282","endLine":38,"endColumn":20},{"ruleId":"279","severity":1,"message":"347","line":40,"column":7,"nodeType":"281","messageId":"282","endLine":40,"endColumn":12},{"ruleId":"305","severity":1,"message":"306","line":53,"column":13,"nodeType":"307","endLine":59,"endColumn":4},{"ruleId":"305","severity":1,"message":"348","line":59,"column":6,"nodeType":"309","endLine":59,"endColumn":8,"suggestions":"349"},{"ruleId":"279","severity":1,"message":"350","line":74,"column":9,"nodeType":"281","messageId":"282","endLine":74,"endColumn":14},{"ruleId":"275","replacedBy":"351"},{"ruleId":"277","replacedBy":"352"},{"ruleId":"279","severity":1,"message":"353","line":3,"column":8,"nodeType":"281","messageId":"282","endLine":3,"endColumn":19},{"ruleId":"279","severity":1,"message":"354","line":5,"column":9,"nodeType":"281","messageId":"282","endLine":5,"endColumn":27},{"ruleId":"279","severity":1,"message":"355","line":5,"column":29,"nodeType":"281","messageId":"282","endLine":5,"endColumn":34},{"ruleId":"279","severity":1,"message":"356","line":6,"column":9,"nodeType":"281","messageId":"282","endLine":6,"endColumn":20},{"ruleId":"279","severity":1,"message":"357","line":6,"column":22,"nodeType":"281","messageId":"282","endLine":6,"endColumn":26},{"ruleId":"279","severity":1,"message":"358","line":15,"column":12,"nodeType":"281","messageId":"282","endLine":15,"endColumn":25},{"ruleId":"279","severity":1,"message":"359","line":15,"column":27,"nodeType":"281","messageId":"282","endLine":15,"endColumn":43},{"ruleId":"279","severity":1,"message":"360","line":16,"column":12,"nodeType":"281","messageId":"282","endLine":16,"endColumn":18},{"ruleId":"279","severity":1,"message":"361","line":16,"column":20,"nodeType":"281","messageId":"282","endLine":16,"endColumn":29},{"ruleId":"279","severity":1,"message":"362","line":17,"column":12,"nodeType":"281","messageId":"282","endLine":17,"endColumn":18},{"ruleId":"279","severity":1,"message":"363","line":22,"column":12,"nodeType":"281","messageId":"282","endLine":22,"endColumn":26},{"ruleId":"279","severity":1,"message":"364","line":22,"column":28,"nodeType":"281","messageId":"282","endLine":22,"endColumn":45},{"ruleId":"279","severity":1,"message":"365","line":27,"column":12,"nodeType":"281","messageId":"282","endLine":27,"endColumn":25},{"ruleId":"279","severity":1,"message":"366","line":27,"column":27,"nodeType":"281","messageId":"282","endLine":27,"endColumn":43},{"ruleId":"279","severity":1,"message":"367","line":33,"column":11,"nodeType":"281","messageId":"282","endLine":33,"endColumn":15},{"ruleId":"279","severity":1,"message":"368","line":34,"column":11,"nodeType":"281","messageId":"282","endLine":34,"endColumn":14},{"ruleId":"279","severity":1,"message":"369","line":35,"column":11,"nodeType":"281","messageId":"282","endLine":35,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":37,"column":15,"nodeType":"307","endLine":79,"endColumn":6},{"ruleId":"370","severity":1,"message":"371","line":160,"column":33,"nodeType":"332","endLine":160,"endColumn":165},{"ruleId":"370","severity":1,"message":"371","line":174,"column":33,"nodeType":"332","endLine":174,"endColumn":154},{"ruleId":"279","severity":1,"message":"353","line":3,"column":8,"nodeType":"281","messageId":"282","endLine":3,"endColumn":19},{"ruleId":"279","severity":1,"message":"354","line":5,"column":9,"nodeType":"281","messageId":"282","endLine":5,"endColumn":27},{"ruleId":"279","severity":1,"message":"355","line":5,"column":29,"nodeType":"281","messageId":"282","endLine":5,"endColumn":34},{"ruleId":"279","severity":1,"message":"358","line":29,"column":12,"nodeType":"281","messageId":"282","endLine":29,"endColumn":25},{"ruleId":"279","severity":1,"message":"359","line":29,"column":27,"nodeType":"281","messageId":"282","endLine":29,"endColumn":43},{"ruleId":"279","severity":1,"message":"361","line":30,"column":20,"nodeType":"281","messageId":"282","endLine":30,"endColumn":29},{"ruleId":"279","severity":1,"message":"362","line":31,"column":12,"nodeType":"281","messageId":"282","endLine":31,"endColumn":18},{"ruleId":"279","severity":1,"message":"372","line":32,"column":11,"nodeType":"281","messageId":"282","endLine":32,"endColumn":17},{"ruleId":"279","severity":1,"message":"367","line":34,"column":11,"nodeType":"281","messageId":"282","endLine":34,"endColumn":15},{"ruleId":"279","severity":1,"message":"368","line":35,"column":11,"nodeType":"281","messageId":"282","endLine":35,"endColumn":14},{"ruleId":"279","severity":1,"message":"369","line":36,"column":11,"nodeType":"281","messageId":"282","endLine":36,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":38,"column":15,"nodeType":"307","endLine":40,"endColumn":6},{"ruleId":"279","severity":1,"message":"373","line":1,"column":8,"nodeType":"281","messageId":"282","endLine":1,"endColumn":13},{"ruleId":"279","severity":1,"message":"321","line":1,"column":16,"nodeType":"281","messageId":"282","endLine":1,"endColumn":25},{"ruleId":"279","severity":1,"message":"374","line":2,"column":8,"nodeType":"281","messageId":"282","endLine":2,"endColumn":10},{"ruleId":"279","severity":1,"message":"375","line":3,"column":8,"nodeType":"281","messageId":"282","endLine":3,"endColumn":14},{"ruleId":"279","severity":1,"message":"285","line":4,"column":10,"nodeType":"281","messageId":"282","endLine":4,"endColumn":22},{"ruleId":"279","severity":1,"message":"312","line":5,"column":10,"nodeType":"281","messageId":"282","endLine":5,"endColumn":18},{"ruleId":"279","severity":1,"message":"313","line":5,"column":20,"nodeType":"281","messageId":"282","endLine":5,"endColumn":33},{"ruleId":"279","severity":1,"message":"314","line":5,"column":35,"nodeType":"281","messageId":"282","endLine":5,"endColumn":49},{"ruleId":"279","severity":1,"message":"315","line":6,"column":9,"nodeType":"281","messageId":"282","endLine":6,"endColumn":22},{"ruleId":"279","severity":1,"message":"344","line":7,"column":8,"nodeType":"281","messageId":"282","endLine":7,"endColumn":17},{"ruleId":"279","severity":1,"message":"336","line":8,"column":8,"nodeType":"281","messageId":"282","endLine":8,"endColumn":12},{"ruleId":"279","severity":1,"message":"376","line":10,"column":29,"nodeType":"281","messageId":"282","endLine":10,"endColumn":49},{"ruleId":"279","severity":1,"message":"285","line":17,"column":10,"nodeType":"281","messageId":"282","endLine":17,"endColumn":22},{"ruleId":"279","severity":1,"message":"315","line":18,"column":10,"nodeType":"281","messageId":"282","endLine":18,"endColumn":23},{"ruleId":"279","severity":1,"message":"377","line":19,"column":8,"nodeType":"281","messageId":"282","endLine":19,"endColumn":22},{"ruleId":"279","severity":1,"message":"378","line":20,"column":8,"nodeType":"281","messageId":"282","endLine":20,"endColumn":13},{"ruleId":"279","severity":1,"message":"379","line":21,"column":8,"nodeType":"281","messageId":"282","endLine":21,"endColumn":23},{"ruleId":"305","severity":1,"message":"306","line":40,"column":15,"nodeType":"307","endLine":47,"endColumn":6},{"ruleId":"279","severity":1,"message":"285","line":4,"column":10,"nodeType":"281","messageId":"282","endLine":4,"endColumn":22},{"ruleId":"279","severity":1,"message":"312","line":5,"column":10,"nodeType":"281","messageId":"282","endLine":5,"endColumn":18},{"ruleId":"279","severity":1,"message":"313","line":5,"column":20,"nodeType":"281","messageId":"282","endLine":5,"endColumn":33},{"ruleId":"279","severity":1,"message":"314","line":5,"column":35,"nodeType":"281","messageId":"282","endLine":5,"endColumn":49},{"ruleId":"279","severity":1,"message":"315","line":6,"column":9,"nodeType":"281","messageId":"282","endLine":6,"endColumn":22},{"ruleId":"279","severity":1,"message":"344","line":7,"column":8,"nodeType":"281","messageId":"282","endLine":7,"endColumn":17},{"ruleId":"279","severity":1,"message":"323","line":9,"column":8,"nodeType":"281","messageId":"282","endLine":9,"endColumn":12},{"ruleId":"279","severity":1,"message":"380","line":11,"column":9,"nodeType":"281","messageId":"282","endLine":11,"endColumn":16},{"ruleId":"305","severity":1,"message":"306","line":32,"column":15,"nodeType":"307","endLine":78,"endColumn":6},{"ruleId":"305","severity":1,"message":"381","line":78,"column":8,"nodeType":"309","endLine":78,"endColumn":10,"suggestions":"382"},{"ruleId":"370","severity":1,"message":"371","line":88,"column":54,"nodeType":"332","endLine":88,"endColumn":104},{"ruleId":"370","severity":1,"message":"371","line":89,"column":63,"nodeType":"332","endLine":89,"endColumn":119},{"ruleId":"370","severity":1,"message":"371","line":95,"column":97,"nodeType":"332","endLine":95,"endColumn":147},{"ruleId":"370","severity":1,"message":"371","line":96,"column":83,"nodeType":"332","endLine":96,"endColumn":139},{"ruleId":"370","severity":1,"message":"371","line":105,"column":54,"nodeType":"332","endLine":105,"endColumn":104},{"ruleId":"370","severity":1,"message":"371","line":106,"column":63,"nodeType":"332","endLine":106,"endColumn":119},{"ruleId":"370","severity":1,"message":"371","line":112,"column":99,"nodeType":"332","endLine":112,"endColumn":149},{"ruleId":"370","severity":1,"message":"371","line":113,"column":85,"nodeType":"332","endLine":113,"endColumn":141},{"ruleId":"279","severity":1,"message":"383","line":143,"column":9,"nodeType":"281","messageId":"282","endLine":143,"endColumn":32},{"ruleId":"279","severity":1,"message":"286","line":3,"column":9,"nodeType":"281","messageId":"282","endLine":3,"endColumn":17},{"ruleId":"279","severity":1,"message":"285","line":5,"column":9,"nodeType":"281","messageId":"282","endLine":5,"endColumn":21},{"ruleId":"279","severity":1,"message":"384","line":9,"column":5,"nodeType":"281","messageId":"282","endLine":9,"endColumn":11},"no-native-reassign",["385"],"no-negated-in-lhs",["386"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Web3Provider' is defined but never used.","'Breakpoint' is defined but never used.","'useWeb3React' is defined but never used.","'Biconomy' is defined but never used.","'WalletLinkConnector' is defined but never used.","'WalletConnectConnector' is defined but never used.","'InjectedConnector' is defined but never used.","'NetworkConnector' is defined but never used.","'truncateAddress' is defined but never used.","'ethers' is defined but never used.","'networkParams' is assigned a value but never used.","'setBiconomyFetched' is assigned a value but never used.","'library' is assigned a value but never used.","'signature' is assigned a value but never used.","'network' is assigned a value but never used.","'message' is assigned a value but never used.","'signedMessage' is assigned a value but never used.","'setSignedMessage' is assigned a value but never used.","'verified' is assigned a value but never used.","'setGaslessReady' is assigned a value but never used.","'handleNetwork' is assigned a value but never used.","'handleInput' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'disconnect' and 'error'. Either include them or remove the dependency array.","ArrayExpression",["387"],"'withRouter' is defined but never used.","'Injected' is defined but never used.","'WalletConnect' is defined but never used.","'CoinbaseWallet' is defined but never used.","'switchNetwork' is defined but never used.","'networkName' is assigned a value but never used.","'setNetworkName' is assigned a value but never used.","'visibleModalWrongNetwork' is assigned a value but never used.","'setVisibleModalWrongNetwork' is assigned a value but never used.","'web3' is assigned a value but never used.","'useEffect' is defined but never used.","'NavLink' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setSuccessMessage' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'successfulMessage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'OutsideClickHandler' is defined but never used.","'Link' is defined but never used.","'Theme' is defined but never used.","'Web3' is defined but never used.","'config' is defined but never used.","'vTJSON' is defined but never used.","'ReactLoading' is defined but never used.","'useCryptoPrices' is defined but never used.","'CryptoPriceProvider' is defined but never used.","'WalletConnectProvider' is defined but never used.","'CoinbaseWalletSDK' is defined but never used.","'Web3Modal' is defined but never used.","'provider' is defined but never used.","'selectedAccount' is defined but never used.","'items' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'account'. Either include it or remove the dependency array.",["388"],"'round' is assigned a value but never used.",["385"],["386"],"'ProgressBar' is defined but never used.","'getTrackBackground' is defined but never used.","'Range' is defined but never used.","'totalSupply' is defined but never used.","'mint' is defined but never used.","'initialLoaded' is assigned a value but never used.","'setInitialLoaded' is assigned a value but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'minted' is assigned a value but never used.","'showOpenedCard' is assigned a value but never used.","'setShowOpenedCard' is assigned a value but never used.","'showCardVideo' is assigned a value but never used.","'setShowCardVideo' is assigned a value but never used.","'STEP' is assigned a value but never used.","'MIN' is assigned a value but never used.","'MAX' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'prices' is assigned a value but never used.","'React' is defined but never used.","'cn' is defined but never used.","'styles' is defined but never used.","'isAddressWhitelisted' is defined but never used.","'WalletSelector' is defined but never used.","'Modal' is defined but never used.","'MintTransaction' is defined but never used.","'approve' is defined but never used.","React Hook useEffect has missing dependencies: 'account', 'numPacks', 'setMintFailed', 'setMintSucceeded', and 'setMinting'. Either include them or remove the dependency array. If 'setMintSucceeded' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["389"],"'infinite_approve_amount' is assigned a value but never used.","'web3WS' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},"Update the dependencies array to be: [disconnect, error, provider]",{"range":"396","text":"397"},"Update the dependencies array to be: [account]",{"range":"398","text":"399"},"Update the dependencies array to be: [account, numPacks, setMintFailed, setMintSucceeded, setMinting]",{"range":"400","text":"401"},[7393,7403],"[disconnect, error, provider]",[2208,2210],"[account]",[3417,3419],"[account, numPacks, setMintFailed, setMintSucceeded, setMinting]"]