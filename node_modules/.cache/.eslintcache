[{"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/index.js":"1","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/reportWebVitals.js":"2","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js":"3","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/local-dev-config.js":"4","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js":"5","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/index.js":"6","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Drops/index.js":"7","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/Viridian1EPassMethods.js":"8","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/index.js":"9","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/index.js":"10","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/index.js":"11","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Modal/index.js":"12","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Image.js":"13","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Icon.js":"14","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js":"15","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/Group/index.js":"16","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Dropdown/index.js":"17","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/Item/index.js":"18","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Theme/index.js":"19","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js":"20","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Open/index.js":"21","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Verify/index.js":"22","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/WalletSelector/index.js":"23"},{"size":500,"mtime":1643648444584,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1643655018399,"results":"26","hashOfConfig":"25"},{"size":13199,"mtime":1651674124349,"results":"27","hashOfConfig":"25"},{"size":1838,"mtime":1650934778733,"results":"28","hashOfConfig":"25"},{"size":4487,"mtime":1650848334658,"results":"29","hashOfConfig":"25"},{"size":145,"mtime":1643653269634,"results":"30","hashOfConfig":"25"},{"size":13491,"mtime":1651633036756,"results":"31","hashOfConfig":"25"},{"size":7353,"mtime":1650945988038,"results":"32","hashOfConfig":"25"},{"size":6147,"mtime":1650912537956,"results":"33","hashOfConfig":"25"},{"size":4169,"mtime":1643655591244,"results":"34","hashOfConfig":"25"},{"size":11105,"mtime":1641160069679,"results":"35","hashOfConfig":"25"},{"size":1494,"mtime":1643653317419,"results":"36","hashOfConfig":"25"},{"size":379,"mtime":1637244256672,"results":"37","hashOfConfig":"25"},{"size":28130,"mtime":1637244256670,"results":"38","hashOfConfig":"25"},{"size":11188,"mtime":1651633123730,"results":"39","hashOfConfig":"25"},{"size":1068,"mtime":1624424612627,"results":"40","hashOfConfig":"25"},{"size":1281,"mtime":1632849901986,"results":"41","hashOfConfig":"25"},{"size":708,"mtime":1637244256731,"results":"42","hashOfConfig":"25"},{"size":691,"mtime":1624424612647,"results":"43","hashOfConfig":"25"},{"size":4946,"mtime":1650737523326,"results":"44","hashOfConfig":"25"},{"size":10726,"mtime":1651078177334,"results":"45","hashOfConfig":"25"},{"size":4875,"mtime":1651530928031,"results":"46","hashOfConfig":"25"},{"size":2988,"mtime":1651631365134,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1feyeat",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/index.js",[],["101","102"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/reportWebVitals.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js",["103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/local-dev-config.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js",["144","145","146","147","148"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n// import {tokenURI, ownerOfNoReq} from \"../../smartContracts/ViridianNFTMethods\";\n// import {tokenPackURI, ownerOfPackNoReq} from \"../../smartContracts/ViridianPackMethods\";\n// import ReactLoading from 'react-loading';\n// import Image from \"../Image\";\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\nimport WalletSelector from \"../WalletSelector\";\n\nconst Page = ({ setPromptInstallMetamask, users, ownedNFTs, ownedPacks, nfts, filteredNfts, setFilteredNFTs, children, account, setAccount, connected, setConnected, userInfo, setUserInfo, ethBalance, setEthBalance, vextBalance, setVextBalance }) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [networkName, setNetworkName] = useState(\"peen\");\n    const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n    const [visibleModalWallets, setVisibleModalWallets] = useState(false);\n\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n    // console.log(networkName === \"ropsten\");\n    // if(networkName === \"ropsten\") {\n\n  useEffect(async () => {\n    //window.scrollTo(0, 0);\n    clearAllBodyScrollLocks();\n\n    setNetworkName(await web3.eth.net.getNetworkType());\n  }, [account]);\n\n  //if (initialLoaded) {\n      return (\n          <div className={styles.page}>\n              {(networkName !== 'ropsten' && networkName !== '') && <Modal\n                  visible={visibleModalWrongNetwork}\n                  onClose={() => {\n                      setVisibleModalWrongNetwork(false);\n                      //history.push(\"/\");\n                  }}\n              >\n              </Modal>}\n\n              <Modal\n                  visible={visibleModalWallets}\n                  onClose={() => setVisibleModalWallets(false)}\n              >\n                  <WalletSelector />\n              </Modal>\n\n              {/*{account}*/}\n              {/*{JSON.stringify(location.state)}*/}\n              {/*{JSON.stringify(nfts)}*/}\n              {/*{JSON.stringify(initialLoaded)}*/}\n              <Header setVisibleModalWallets={setVisibleModalWallets} setPromptInstallMetamask={setPromptInstallMetamask} vextBalance={vextBalance} setVextBalance={setVextBalance} ethBalance={ethBalance} setEthBalance={setEthBalance} account={account}\n                      setAccount={setAccount} connected={connected} setConnected={setConnected} />\n              <div className={styles.inner}>{children}</div>\n              <Footer/>\n          </div>\n      );\n  //}\n  // else {\n  //     return (\n  //         <div className={styles.page}>\n  //             {account}\n  //             {JSON.stringify(location.state)}\n  //             {/*{JSON.stringify(nfts)}*/}\n  //             {JSON.stringify(initialLoaded)}\n  //             <Header nfts={nfts} filteredNfts={filteredNfts} setFilteredNFTs={setFilteredNFTs}\n  //                     vextBalance={vextBalance} setVextBalance={setVextBalance} account={account}\n  //                     setAccount={setAccount} connected={connected} setConnected={setConnected} userInfo={userInfo}\n  //                     setUserInfo={setUserInfo}/>\n  //             <div style={{display: 'flex',\n  //                 justifyContent: 'center',\n  //                 alignItems: 'center',\n  //                 position: 'relative',\n  //                 marginTop: '20ex', marginBottom: '20ex'}}>\n  //                 <ReactLoading type={'spin'} color={'#bf9a36'} height={'10%'} width={'10%'} />\n  //             </div>\n  //             <div style={{display: 'flex',\n  //                 justifyContent: 'center',\n  //                 position: 'absolute',\n  //                 alignItems: 'center',\n  //                 top: '26.3%',\n  //                 left: '40.656%', transform: 'scale(.36, .36)'}}>\n  //                 <Image\n  //                     style={{maxWidth: '1ex', maxHeight: '1ex'}}\n  //                     src=\"/logo.svg\"\n  //                     srcDark=\"/logo.svg\"\n  //                     alt=\"Viridian Exchange\"\n  //                 />\n  //             </div>\n  //             <Footer/>\n  //         </div>\n  //     )\n  // }\n};\n\nexport default Page;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Drops/index.js",["149","150","151","152","153","154","155"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/smartContracts/Viridian1EPassMethods.js",["156"],"import config from \"../local-dev-config\";\nimport vGPJSON from \"../abis/ViridianGenesisPack.json\";\nimport {Biconomy} from \"@biconomy/mexa\";\nimport Web3 from \"web3\";\n\nlet web3Wallet = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider( \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"));\n\nlet web3WS = new Web3(new Web3.providers.WebsocketProvider( \"wss://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"));\n\nconst biconomy = new Biconomy(Web3.givenProvider || new Web3.providers.HttpProvider( \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"),{apiKey: \"TVCsgQVfk.a6031565-1cb6-40da-8a60-2ffec22e3bed\", debug: true});\n\nlet biconomyWeb3 = new Web3(biconomy);\n\nbiconomy.onEvent(biconomy.READY, () => {\n    // Initialize your dapp here like getting user accounts etc\n    console.log(\"initialized\");\n}).onEvent(biconomy.ERROR, (error, message) => {\n    // Handle error while initializing mexa\n    console.error(error);\n});\n\n// export async function tokenURI(tokenId) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     //console.log(\"ABIMETHODS: \" + tokenId);\n//     let nft = vNFTABI.methods.tokenURI(tokenId).call();\n//\n//     //alert(nft);\n//\n//     return nft;\n// }\n//\n// export async function ownerOf(tokenId) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     //console.log(\"ABIMETHODS1: \" + tokenId);\n//     let owner = await vNFTABI.methods.ownerOf(tokenId).call();\n//\n//     //alert(nft);\n//\n//     return owner;\n// }\n//\n// export async function ownerOfNoReq(tokenId) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     //console.log(\"ABIMETHODS2: \" + tokenId);\n//     let owner = await vNFTABI.methods.ownerOf(tokenId).call();\n//\n//     //alert(nft);\n//\n//     return owner;\n// }\n//\n// export async function setApprovalForAll(from, exchangeAddress) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     return await vNFTABI.methods.setApprovalForAll(exchangeAddress, true).send({from: from});\n// }\n\nexport async function mint(from, numMint, setSuccess, setFailed, setMinting) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    //alert((100000000000000000 * numMint).toString());\n    try {\n        await vNFTABI.methods.mint(numMint, from).send({\n            from: from, value: (100000000000000000 * numMint).toString(),\n            //signatureType: biconomy.EIP712_SIGN\n        });\n\n        let vNFTABIWS = new web3WS.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n\n        await vNFTABIWS.events.Transfer({filter: {from: from}}).on('data', async function (event) {\n            setSuccess(true);\n            setFailed(false);\n            setMinting(false);\n        }).on('err', (e) => {console.error(e); setFailed(true); setMinting(false);});\n\n    } catch(e) {\n        setFailed(true);\n        setMinting(false);\n        console.error(e);\n    }\n}\n\nexport async function openPack(from, tokenId, setSuccess, setFailed, setMinting) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    //alert((100000000000000000 * numMint).toString());\n    try {\n        await vNFTABI.methods.openPack(tokenId).send({\n            from: from,\n            signatureType: biconomy.EIP712_SIGN\n        });\n\n        let vNFTABIWS = new web3WS.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n\n        await vNFTABIWS.events.Transfer({filter: {from: from}}).on('data', async function (event) {\n            setSuccess(true);\n            setFailed(false);\n            setMinting(false);\n        }).on('err', (e) => {console.error(e); setFailed(true); setMinting(false);});\n\n    } catch(e) {\n        setFailed(true);\n        setMinting(false);\n        console.error(e);\n    }\n}\n\n// export async function bridge(from, bridgeNFTs) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.rinkeby_contract_addresses.v1ep_contract;\n//\n//     let vNFTABI = new biconomyWeb3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//     return await vNFTABI.methods.bridge(bridgeNFTs).send({from: from});\n// }\n\nexport async function totalSupply(from) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    return await vNFTABI.methods.totalSupply().call();\n    //return await vNFTABI.methods.getNumNFTs().call();\n}\n\nexport async function getOwnedNFTs(from) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n    //alert(from)\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    let ownedNFTS = await vNFTABI.methods.getOwnedNFTs().call({from: from});\n    //alert(ownedNFTS);\n    return ownedNFTS;\n}\n\nexport async function tokenURI(tokenID, from) {\n    //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n    const vNFTContractAddress = config.rinkeby_contract_addresses.vgp_contract;\n    //alert(from)\n    let vNFTABI = new web3Wallet.eth.Contract(vGPJSON['abi'], vNFTContractAddress);\n    let ownedNFTS = await vNFTABI.methods.tokenURI(tokenID).call({from: from});\n    //alert(ownedNFTS);\n    return ownedNFTS;\n}\n\n//\n// export async function isApprovedForAll(owner, operator) {\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//\n//     return await vNFTABI.methods.isApprovedForAll(owner, operator).call();\n// }\n\n// export async function safeTransferFrom(from, to, tokenId) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//\n//     return await vNFTABI.methods.safeTransferFrom(from, to, tokenId).send({from: from});\n// }\n//\n// export async function burn(from, tokenId) {\n//     //alert(\"Setting approval to \" + from + \" for \" + exchangeAddress);\n//     const vNFTContractAddress = config.mumbai_contract_addresses.vnft_contract;\n//\n//     let vNFTABI = new web3.eth.Contract(vNFTJSON['abi'], vNFTContractAddress);\n//\n//     return await vNFTABI.methods.burn(tokenId).send({from: from, signatureType: biconomy.EIP712_SIGN});\n// }","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/index.js",["157","158","159"],"import React, { useState, useEffect } from \"react\";\nimport { Link, NavLink, } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport styles from \"./Header.module.sass\";\nimport Icon from \"../Icon\";\nimport Image from \"../Image\";\nimport User from \"./User\";\nimport  { Breakpoint } from 'react-socks';\n\nconst Headers = (props) => {\n  const [visibleNav, setVisibleNav] = useState(false);\n\n\n  return (\n      <>\n        <Breakpoint small down>\n          <header className={styles.header}>\n            <div className={cn(\"container\", styles.container)}>\n                <div className={cn(styles.wrapper, { [styles.active]: visibleNav })}>\n                  <nav className={styles.nav}>\n                    <Link\n                        style={{marginTop: '2ex'}}\n                        className={styles.link}\n                        activeClassName={styles.active}\n                        to=\"/mint\"\n                        key={1}\n                    >\n                      Mint\n                    </Link>\n                    <Link\n                        style={{marginTop: '2ex'}}\n                        className={styles.link}\n                        activeClassName={styles.active}\n                        to=\"/open\"\n                        key={2}\n                    >\n                      Open\n                    </Link>\n                    <Link\n                        style={{marginTop: '2ex'}}\n                        className={styles.link}\n                        activeClassName={styles.active}\n                        to=\"/verify\"\n                        key={2}\n                    >\n                      Verify\n                    </Link>\n                    <a\n                        className={styles.link}\n                        // activeClassName={styles.active}\n                        href=\"https://viridianexchange.com\"\n                        // key={0}\n                    >\n                      About\n                    </a>\n                    <Link\n                        className={styles.link}\n                        activeClassName={styles.active}\n                        to=\"/faq\"\n                        key={3}\n                    >\n                      Help\n                    </Link>\n                  </nav>\n                </div>\n              {/*TODO: Change to \"LINK\"*/}\n              <a className={cn(\"button-small\", styles.button)}\n                    href=\"https://buy.moonpay.com/?currencyCode=eth_polygon&singleCurrencyMode=true\"\n                 target=\"_blank\" rel=\"noopener noreferrer\"\n                  //to=\"/BuyCrypto\"\n                  >\n                Buy Polygon ETH\n              </a>\n\n              <User setPromptInstallMetamask={props.setPromptInstallMetamask} ethBalance={props.ethBalance} setEthBalance={props.setEthBalance} vextBalance={props.vextBalance} setVextBalance={props.setVextBalance} className={styles.user} account = {props.account} setAccount = {props.setAccount}\n                    connected = {props.connected} setConnected = {props.setConnected} userInfo = {props.userInfo} setUserInfo={props.setUserInfo}/>\n              <button\n                  className={cn(styles.burger, { [styles.active]: visibleNav })}\n                  onClick={() => setVisibleNav(!visibleNav)}>\n              </button>\n            </div>\n          </header>\n        </Breakpoint>\n      <Breakpoint medium up>\n    <header className={styles.header}>\n      <div className={cn(\"container\", styles.container)}>\n        <Link className={styles.logo} to=\"/\">\n          <Image\n            className={styles.pic}\n            src=\"/logo_words.svg\"\n            srcDark=\"/logo_words.svg\"\n            alt=\"Viridian Exchange\"\n          />\n        </Link>\n          <div className={cn(styles.wrapper, { [styles.active]: visibleNav })}>\n            <nav className={styles.nav}>\n              <Link\n                  className={styles.link}\n                  activeClassName={styles.active}\n                  to=\"/mint\"\n                  key={1}\n              >\n                Mint\n              </Link>\n              <Link\n                  className={styles.link}\n                  activeClassName={styles.active}\n                  to=\"/open\"\n                  key={1}\n              >\n                Open\n              </Link>\n              <Link\n                  className={styles.link}\n                  activeClassName={styles.active}\n                  to=\"/verify\"\n                  key={1}\n              >\n                Verify\n              </Link>\n              <a\n                  className={styles.link}\n                  // activeClassName={styles.active}\n                  href=\"https://viridianexchange.com\"\n                  target=\"_blank\" rel=\"noopener noreferrer\"\n                  key={3}\n              >\n                About\n              </a>\n              <Link\n                  className={styles.link}\n                  activeClassName={styles.active}\n                  to=\"/faq\"\n                  key={4}\n              >\n                Help\n              </Link>\n            </nav>\n          </div>\n        {/*TODO: Change to \"LINK\"*/}\n        <a className={cn(\"button-small\", styles.button)}\n           target=\"_blank\" rel=\"noopener noreferrer\"\n              href=\"https://buy.moonpay.com/?currencyCode=eth_polygon&singleCurrencyMode=true\"\n            //to=\"/BuyCrypto\"\n            >\n          Buy Polygon ETH\n        </a>\n        <User setVisibleModalWallets={props.setVisibleModalWallets} setPromptInstallMetamask={props.setPromptInstallMetamask} ethBalance={props.ethBalance} setEthBalance={props.setEthBalance} vextBalance={props.vextBalance} setVextBalance={props.setVextBalance} className={styles.user} account = {props.account} setAccount = {props.setAccount}\n              connected = {props.connected} setConnected = {props.setConnected} userInfo = {props.userInfo} setUserInfo={props.setUserInfo}/>\n        <button\n          className={cn(styles.burger, { [styles.active]: visibleNav })}\n          onClick={() => setVisibleNav(!visibleNav)}>\n        </button>\n      </div>\n    </header>\n      </Breakpoint>\n      </>\n  );\n};\n\nexport default Headers\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/index.js",["160","161","162","163","164","165","166"],"import React, { useState, Button } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport styles from \"./Footer.module.sass\";\nimport Group from \"./Group\";\nimport Image from \"../Image\";\n// import Form from \"../Form\";\n// import Theme from \"../Theme\";\n// import {HandleAddEmail} from '../../apis/EmailListAPI'\n// import config from '../../config.json'\n// import styles1 from \"../Form/Form.module.sass\";\nimport Icon from \"../Icon\";\n\nconst items = [\n  {\n    title: \"Viridian Exchange\",\n    menu: [\n      {\n        title: \"Home\",\n        url: \"/\",\n      },\n      {\n        title: \"Contact Us\",\n        url: \"mailto:contact@viridianexchange.com\",\n      },\n      {\n        title: \"FAQ\",\n        url: \"/faq\",\n      },\n\n    ],\n  },\n  {\n    title: \"Follow us\",\n    menu: [\n      {\n        title: \"Linkedin\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.linkedin.com/company/viridian-exchange/\"\n      },\n      {\n        title: \"Twitter\",\n        //url: \"/BuyCrypto\",\n        url: \"https://twitter.com/ViridianEx\"\n      },\n      {\n        title: \"Instagram\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.instagram.com/viridianexchange/\"\n      },\n      {\n        title: \"Facebook\",\n        //url: \"/BuyCrypto\",\n        url: \"https://www.facebook.com/Viridian-Exchange-106600915066707\"\n      },\n      {\n        title: \"Telegram\",\n        //url: \"/BuyCrypto\",\n        url: \"https://t.me/viridian_exchange\"\n      },\n    ],\n  },\n];\n\n\nconst Footers = () => {\n  const [email, setEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = React.useState(false);\n\n  const handleSubmit = (e) => {\n    alert();\n  };\n\n  const successfulMessage = () => {\n    if (successMessage) {\n      return <div style={{marginLeft: \"10px\"}}> <Icon name=\"check\" size=\"18\" fill={\"#BF9A36\"} /> <a>Sign Up Successful!</a></div>\n    }\n  };\n\n  return (\n    <footer className={styles.footer}>\n      <div className={cn(\"container\", styles.container)}>\n        <div className={styles.row}>\n          <div className={styles.col}>\n            <Link className={styles.logo} to=\"/\">\n              <Image\n                className={styles.pic}\n                src=\"/logo.svg\"\n                srcDark=\"/logo.svg\"\n                alt=\"Viridian Exchange\"\n              />\n            </Link>\n            <div className={styles.info}>The future of collectible exchange.</div>\n            {/*<div className={styles.version}>*/}\n            {/*  <div className={styles.details}>Dark theme</div>*/}\n            {/*  <Theme className=\"theme-big\" />*/}\n            {/*</div>*/}\n          </div>\n          <div className={styles.col}>\n            {items.map((x, index) => (\n              <Group className={styles.group} item={x} key={index} />\n            ))}\n          </div>\n          {/*<div className={styles.col}>*/}\n          {/*  <div className={styles.category}>Join Our Newsletter</div>*/}\n          {/*  <div className={styles.text}>*/}\n          {/*    Be the first to hear about new product updates and exclusive pack releases!*/}\n          {/*  </div>*/}\n          {/*  /!*<Form*!/*/}\n          {/*  /!*  className={styles.form}*!/*/}\n          {/*  /!*  setValue={setEmail}*!/*/}\n          {/*  /!*  click={() => {HandleAddEmail(email); setSuccessMessage(true)}}*!/*/}\n          {/*  /!*  placeholder=\"Enter your email\"*!/*/}\n          {/*  /!*  type=\"email\"*!/*/}\n          {/*  /!*  name=\"email\"*!/*/}\n          {/*  /!*>*!/*/}\n\n\n          {/*/!*<button className = {styles1.btn}*!/*/}\n          {/*/!*       type = \"submit\" inverted basic onClick={(e) => {HandleAddEmail(email); setSuccessMessage(true);}}>Sign up</button>*!/*/}\n\n\n\n          {/*  /!*</Form>*!/*/}\n          {/*  {successfulMessage()}*/}\n\n          {/*</div>*/}\n        </div>\n        <div>\n\n        </div>\n        <div className={styles.foot}>\n          <div className={styles.copyright}>\n            Copyright © 2021 Viridian Exchange Inc. All rights reserved\n          </div>\n          <div className={styles.note}>\n            We use cookies for better service. <a href=\"/#\">Accept</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footers;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Modal/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Image.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Icon.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js",["167","168","169","170","171","172","173","174"],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Footer/Group/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Dropdown/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Faq/Hero/Item/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Theme/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js",[],"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Open/index.js",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {totalSupply, mint, getOwnedNFTs, openPack, tokenURI} from \"../../smartContracts/Viridian1EPassMethods\"\n//import {useCryptoPrices} from \"react-realtime-crypto-prices\";\nimport {Breakpoint} from 'react-socks';\nimport {Carousel} from '3d-react-carousal';\nimport ReactLoading from \"react-loading\";\n\n// let slidez = [\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>];\n\nconst Open = (props) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState(0);\n    //const prices = useCryptoPrices([\"eth\"]);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [loadingOpening, setLoadingOpening] = useState(false);\n    const [showOpeningAnimation, setShowOpeningAnimation] = useState(false);\n    const [showOpenedCard, setShowOpenedCard] = useState(false);\n    const [slides, setSlides] = useState([]);\n    const [tokenIds, setTokenIds] = useState([]);\n\n    const [fetched, setFetched] = useState(false)\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        //alert(JSON.stringify(props));\n        if (props.account) {\n            //alert(await getOwnedNFTs(props.account));\n            if (!fetched) {\n                //alert('hi');\n               // alert('hi1');\n                //alert(await getOwnedNFTs(props.account));\n                //alert('hi3');\n                //setMinted(await totalSupply());\n\n\n                let nfts = await getOwnedNFTs(props.account);\n\n                //alert(\"NFTS: \" /+ JSON.stringify(nfts));\n\n                let slidesTemp = [];\n\n                let tID = [];\n\n                nfts.map(async (x, index) => {\n                    slidesTemp.push(<video autoPlay muted loop={true} playsInline style={{maxWidth: '60ex'}}>\n                        <source src='https://content.viridianexchange.com/videos/GenesisPackLoopCrop.mp4'\n                                type=\"video/mp4\"/>\n                    </video>);\n                    let uri = await tokenURI(x, props.account);\n                    tID.push(uri.split('/')[4]);\n                });\n\n                setSlides(slidesTemp);\n                slidesTemp = [];\n                setTokenIds(tID);\n                setFetched(true);\n            }\n        }\n        else {\n            setFetched(false);\n        }\n    }, [fetched, props]);\n\n    // let slides = [\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n    // ]\n\n    const callback = function(index){\n        console.log(\"callback\",index);\n        if (tokenIds.length <= 3) {\n            setCurrentIndex(index % tokenIds.length);\n        }\n        else {\n            setCurrentIndex(index);\n        }\n    }\n\n    const idParse = (id) => {\n        if (id) {\n            return \"#\" + id;\n        }\n        else {\n            return \"\";\n        }\n    }\n\n  return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                <p2 style={{color: 'grey'}}>Reveal the physically-backed NFT inside!</p2>\n                <h3 className={cn(\"h3\", styles.title)}>Open Viridian Genesis Packs</h3>\n                {/*{JSON.stringify(tokenIds)}*/}\n                {/*{JSON.stringify(slides.length)}*/}\n                {showOpenedCard && <div style={{textAlign: 'center'}}>\n                    <video autoPlay muted playsInline loop={true} style={{maxWidth: '100ex', borderRadius: '25px'}}>\n                        <source src='https://content.viridianexchange.com/videos/PikachuLoop.mp4'\n                                type=\"video/mp4\"/>\n                    </video></div>}\n\n                {showOpeningAnimation && !showOpenedCard &&\n                <div style={{textAlign: 'center'}}>\n                    <video autoPlay muted playsInline style={{maxWidth: '100ex', borderRadius: '25px'}}>\n                        <source src='https://content.viridianexchange.com/videos/PackOpenAnimation.mp4'\n                                type=\"video/mp4\"/>\n                    </video></div>}\n\n                {slides.length > 0 && !showOpeningAnimation && <Breakpoint small down>\n                    <div style={{textAlign: 'center'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint> }\n                {slides.length > 0 && !showOpeningAnimation && <Breakpoint medium up>\n                    <div style={{textAlign: 'center', minHeight: '65ex'}}>\n                        <Carousel slides={slides} onSlideChange={callback} arrows={true}/>\n                    </div>\n                </Breakpoint>}\n\n                {slides.length === 0 &&\n                    <div style={{textAlign: 'center', marginTop: '3ex'}}>\n                        <h2 style={{textAlign: 'center', color: 'gray', marginBottom: '2ex'}}>\n                            Purchase a Viridian Genesis Pack on secondary to open\n                        </h2>\n                        <a\n                        href=\"https://opensea.io\"\n                        target=\"_blank\" rel=\"noopener noreferrer\"\n                           style={{marginRight: '1ex'}}\n                        >\n                            <button\n                                className={cn(styles.link, {\n                                })}\n                            >\n                                <img style={{maxWidth: '5ex', marginRight: '1.5ex', marginLeft: '-.5ex'}} src='https://opensea.io/static/images/logos/opensea.svg'/>\n                                Opensea\n                            </button>\n                        </a>\n\n                        <a\n                           href=\"https://looksrare.org\"\n                           target=\"_blank\" rel=\"noopener noreferrer\"\n                            style={{marginLeft: '1ex'}}\n                        >\n                            <button\n                                className={cn(styles.link, {\n                                })}\n                            >\n                                <img style={{maxWidth: '6.8ex', marginLeft: '-2ex'}} src='https://logowik.com/content/uploads/images/looksrare9736.jpg'/>\n                                Looksrare\n                            </button>\n                        </a>\n                    </div>\n                }\n                {/*<h2 style={{marginTop: '2ex', textAlign: 'center'}}>*/}\n                {/*    Open 🃏*/}\n                {/*</h2>*/}\n                {/*<h3 style={{marginBottom: '2ex', textAlign: 'center'}}>*/}\n                {/*    <div className={styles.wallet}>*/}\n                {/*        <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                {/*        {values[0]}*/}\n                {/*    </div>*/}\n                {/*    {prices.eth && <p2 style={{color: 'grey'}}>*/}\n                {/*        ${((values[0] * prices.eth) * 100) / 100}*/}\n                {/*    </p2>}*/}\n                {/*</h3>*/}\n                {slides.length > 0 && <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                    {/*{JSON.stringify(props)}*/}\n                    {loadingOpening && !showOpeningAnimation && <button\n                        className={cn(styles.link, {\n                        })}\n                        style={{color: 'black'}}\n                    >\n                        <ReactLoading type={'spin'} color={'#bf9a36'} height={'25%'} width={'25%'} /> <div style={{marginLeft: '6ex', marginTop: '-2.75ex', marginBottom: '1ex'}}>Opening...</div>\n                    </button>}\n\n                    {!loadingOpening && <button\n                        className={cn(styles.link, {\n                        })}\n                        onClick={async () => {/*await openPack(props.account, values[0])*/ setLoadingOpening(true); setShowOpeningAnimation(true); await setTimeout(function() { setShowOpenedCard(true) }, 11500);}}\n                    >\n                        <img style={{width: '4ex', marginTop: '-.5ex', height: '6ex', marginRight: '1ex'}}\n                             src='/trading_card_icon.svg'\n                             alt='ETH' /> {\"Open Pack \" + idParse(tokenIds[currentIndex])}\n                    </button>}\n                </div>}\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Open;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Verify/index.js",["193","194","195","196","197","198","199","200","201","202","203","204"],"import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {totalSupply, mint} from \"../../smartContracts/Viridian1EPassMethods\"\nimport {useCryptoPrices} from \"react-realtime-crypto-prices\";\nimport {Breakpoint} from 'react-socks';\nimport {Carousel} from '3d-react-carousal';\n\nlet slides = [\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>,\n    <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n    </video>];\n\nconst Drops = (props) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState(0);\n    const prices = useCryptoPrices([\"eth\"]);\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        setMinted(await totalSupply());\n    }, []);\n\n    // let slides = [\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n    // ]\n\n    const callback = function(index){\n        console.log(\"callback\",index);\n    }\n\n  return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                <h3 className={cn(\"h3\", styles.title)}>Verify Viridian Genesis Pack</h3>\n                <Breakpoint small down>\n                    <div style={{textAlign: 'center'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint>\n                <Breakpoint medium up>\n                    <div style={{textAlign: 'center',minHeight: '65ex'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint>\n                {/*<h2 style={{marginTop: '2ex', textAlign: 'center'}}>*/}\n                {/*    Open 🃏*/}\n                {/*</h2>*/}\n                {/*<h3 style={{marginBottom: '2ex', textAlign: 'center'}}>*/}\n                {/*    <div className={styles.wallet}>*/}\n                {/*        <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                {/*        {values[0]}*/}\n                {/*    </div>*/}\n                {/*    {prices.eth && <p2 style={{color: 'grey'}}>*/}\n                {/*        ${((values[0] * prices.eth) * 100) / 100}*/}\n                {/*    </p2>}*/}\n                {/*</h3>*/}\n                <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                    {/*{JSON.stringify(props)}*/}\n                    <button\n                        className={cn(styles.link, {\n                            [styles.active]: true,\n                        })}\n                        onClick={async () => {await mint(props.account, values[0])}}\n                    >\n                        Verify ✅\n                    </button>\n                </div>\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Drops;\n","/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/WalletSelector/index.js",["205","206","207","208","209","210","211","212"],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":1,"column":60,"nodeType":"219","messageId":"220","endLine":1,"endColumn":70},{"ruleId":"217","severity":1,"message":"221","line":10,"column":8,"nodeType":"219","messageId":"220","endLine":10,"endColumn":14},{"ruleId":"217","severity":1,"message":"222","line":15,"column":11,"nodeType":"219","messageId":"220","endLine":15,"endColumn":21},{"ruleId":"217","severity":1,"message":"223","line":22,"column":3,"nodeType":"219","messageId":"220","endLine":22,"endColumn":18},{"ruleId":"217","severity":1,"message":"224","line":23,"column":3,"nodeType":"219","messageId":"220","endLine":23,"endColumn":22},{"ruleId":"217","severity":1,"message":"225","line":39,"column":10,"nodeType":"219","messageId":"220","endLine":39,"endColumn":18},{"ruleId":"217","severity":1,"message":"226","line":39,"column":20,"nodeType":"219","messageId":"220","endLine":39,"endColumn":31},{"ruleId":"217","severity":1,"message":"227","line":40,"column":10,"nodeType":"219","messageId":"220","endLine":40,"endColumn":14},{"ruleId":"217","severity":1,"message":"228","line":40,"column":16,"nodeType":"219","messageId":"220","endLine":40,"endColumn":23},{"ruleId":"217","severity":1,"message":"229","line":41,"column":10,"nodeType":"219","messageId":"220","endLine":41,"endColumn":19},{"ruleId":"217","severity":1,"message":"230","line":41,"column":21,"nodeType":"219","messageId":"220","endLine":41,"endColumn":33},{"ruleId":"217","severity":1,"message":"231","line":42,"column":10,"nodeType":"219","messageId":"220","endLine":42,"endColumn":20},{"ruleId":"217","severity":1,"message":"232","line":42,"column":22,"nodeType":"219","messageId":"220","endLine":42,"endColumn":35},{"ruleId":"217","severity":1,"message":"233","line":43,"column":10,"nodeType":"219","messageId":"220","endLine":43,"endColumn":26},{"ruleId":"217","severity":1,"message":"234","line":43,"column":28,"nodeType":"219","messageId":"220","endLine":43,"endColumn":47},{"ruleId":"217","severity":1,"message":"235","line":45,"column":10,"nodeType":"219","messageId":"220","endLine":45,"endColumn":18},{"ruleId":"217","severity":1,"message":"236","line":47,"column":10,"nodeType":"219","messageId":"220","endLine":47,"endColumn":23},{"ruleId":"217","severity":1,"message":"237","line":47,"column":25,"nodeType":"219","messageId":"220","endLine":47,"endColumn":41},{"ruleId":"217","severity":1,"message":"238","line":50,"column":10,"nodeType":"219","messageId":"220","endLine":50,"endColumn":21},{"ruleId":"217","severity":1,"message":"239","line":50,"column":23,"nodeType":"219","messageId":"220","endLine":50,"endColumn":37},{"ruleId":"217","severity":1,"message":"240","line":51,"column":10,"nodeType":"219","messageId":"220","endLine":51,"endColumn":31},{"ruleId":"217","severity":1,"message":"241","line":52,"column":10,"nodeType":"219","messageId":"220","endLine":52,"endColumn":21},{"ruleId":"217","severity":1,"message":"242","line":52,"column":23,"nodeType":"219","messageId":"220","endLine":52,"endColumn":37},{"ruleId":"217","severity":1,"message":"243","line":53,"column":27,"nodeType":"219","messageId":"220","endLine":53,"endColumn":45},{"ruleId":"217","severity":1,"message":"244","line":54,"column":9,"nodeType":"219","messageId":"220","endLine":54,"endColumn":17},{"ruleId":"217","severity":1,"message":"245","line":55,"column":10,"nodeType":"219","messageId":"220","endLine":55,"endColumn":15},{"ruleId":"217","severity":1,"message":"246","line":55,"column":17,"nodeType":"219","messageId":"220","endLine":55,"endColumn":25},{"ruleId":"217","severity":1,"message":"247","line":56,"column":10,"nodeType":"219","messageId":"220","endLine":56,"endColumn":23},{"ruleId":"217","severity":1,"message":"248","line":56,"column":25,"nodeType":"219","messageId":"220","endLine":56,"endColumn":41},{"ruleId":"217","severity":1,"message":"249","line":57,"column":10,"nodeType":"219","messageId":"220","endLine":57,"endColumn":22},{"ruleId":"217","severity":1,"message":"250","line":57,"column":24,"nodeType":"219","messageId":"220","endLine":57,"endColumn":39},{"ruleId":"217","severity":1,"message":"251","line":58,"column":10,"nodeType":"219","messageId":"220","endLine":58,"endColumn":17},{"ruleId":"217","severity":1,"message":"252","line":58,"column":19,"nodeType":"219","messageId":"220","endLine":58,"endColumn":29},{"ruleId":"217","severity":1,"message":"253","line":59,"column":10,"nodeType":"219","messageId":"220","endLine":59,"endColumn":15},{"ruleId":"217","severity":1,"message":"254","line":59,"column":17,"nodeType":"219","messageId":"220","endLine":59,"endColumn":25},{"ruleId":"217","severity":1,"message":"255","line":61,"column":7,"nodeType":"219","messageId":"220","endLine":61,"endColumn":14},{"ruleId":"217","severity":1,"message":"256","line":236,"column":12,"nodeType":"219","messageId":"220","endLine":236,"endColumn":28},{"ruleId":"257","severity":1,"message":"258","line":261,"column":13,"nodeType":"259","endLine":282,"endColumn":4},{"ruleId":"257","severity":1,"message":"260","line":282,"column":6,"nodeType":"261","endLine":282,"endColumn":17,"suggestions":"262"},{"ruleId":"217","severity":1,"message":"263","line":298,"column":11,"nodeType":"219","messageId":"220","endLine":298,"endColumn":17},{"ruleId":"217","severity":1,"message":"264","line":298,"column":19,"nodeType":"219","messageId":"220","endLine":298,"endColumn":26},{"ruleId":"217","severity":1,"message":"265","line":2,"column":10,"nodeType":"219","messageId":"220","endLine":2,"endColumn":20},{"ruleId":"217","severity":1,"message":"247","line":16,"column":12,"nodeType":"219","messageId":"220","endLine":16,"endColumn":25},{"ruleId":"217","severity":1,"message":"248","line":16,"column":27,"nodeType":"219","messageId":"220","endLine":16,"endColumn":43},{"ruleId":"257","severity":1,"message":"258","line":25,"column":13,"nodeType":"259","endLine":30,"endColumn":4},{"ruleId":"257","severity":1,"message":"266","line":30,"column":6,"nodeType":"261","endLine":30,"endColumn":15,"suggestions":"267"},{"ruleId":"217","severity":1,"message":"247","line":16,"column":12,"nodeType":"219","messageId":"220","endLine":16,"endColumn":25},{"ruleId":"217","severity":1,"message":"248","line":16,"column":27,"nodeType":"219","messageId":"220","endLine":16,"endColumn":43},{"ruleId":"217","severity":1,"message":"268","line":22,"column":37,"nodeType":"219","messageId":"220","endLine":22,"endColumn":63},{"ruleId":"217","severity":1,"message":"269","line":23,"column":32,"nodeType":"219","messageId":"220","endLine":23,"endColumn":53},{"ruleId":"217","severity":1,"message":"270","line":24,"column":34,"nodeType":"219","messageId":"220","endLine":24,"endColumn":57},{"ruleId":"257","severity":1,"message":"258","line":31,"column":15,"nodeType":"259","endLine":33,"endColumn":6},{"ruleId":"217","severity":1,"message":"264","line":63,"column":21,"nodeType":"219","messageId":"220","endLine":63,"endColumn":28},{"ruleId":"217","severity":1,"message":"271","line":12,"column":5,"nodeType":"219","messageId":"220","endLine":12,"endColumn":17},{"ruleId":"217","severity":1,"message":"272","line":1,"column":27,"nodeType":"219","messageId":"220","endLine":1,"endColumn":36},{"ruleId":"217","severity":1,"message":"273","line":2,"column":16,"nodeType":"219","messageId":"220","endLine":2,"endColumn":23},{"ruleId":"217","severity":1,"message":"274","line":5,"column":8,"nodeType":"219","messageId":"220","endLine":5,"endColumn":12},{"ruleId":"217","severity":1,"message":"275","line":1,"column":27,"nodeType":"219","messageId":"220","endLine":1,"endColumn":33},{"ruleId":"217","severity":1,"message":"276","line":67,"column":10,"nodeType":"219","messageId":"220","endLine":67,"endColumn":15},{"ruleId":"217","severity":1,"message":"277","line":67,"column":17,"nodeType":"219","messageId":"220","endLine":67,"endColumn":25},{"ruleId":"217","severity":1,"message":"278","line":68,"column":26,"nodeType":"219","messageId":"220","endLine":68,"endColumn":43},{"ruleId":"217","severity":1,"message":"279","line":70,"column":9,"nodeType":"219","messageId":"220","endLine":70,"endColumn":21},{"ruleId":"217","severity":1,"message":"280","line":74,"column":9,"nodeType":"219","messageId":"220","endLine":74,"endColumn":26},{"ruleId":"281","severity":1,"message":"282","line":76,"column":98,"nodeType":"283","endLine":76,"endColumn":101},{"ruleId":"217","severity":1,"message":"223","line":16,"column":3,"nodeType":"219","messageId":"220","endLine":16,"endColumn":18},{"ruleId":"217","severity":1,"message":"224","line":17,"column":3,"nodeType":"219","messageId":"220","endLine":17,"endColumn":22},{"ruleId":"217","severity":1,"message":"284","line":24,"column":7,"nodeType":"219","messageId":"220","endLine":24,"endColumn":17},{"ruleId":"217","severity":1,"message":"264","line":52,"column":19,"nodeType":"219","messageId":"220","endLine":52,"endColumn":26},{"ruleId":"257","severity":1,"message":"258","line":54,"column":13,"nodeType":"259","endLine":58,"endColumn":4},{"ruleId":"257","severity":1,"message":"285","line":58,"column":6,"nodeType":"261","endLine":58,"endColumn":14,"suggestions":"286"},{"ruleId":"217","severity":1,"message":"287","line":61,"column":9,"nodeType":"219","messageId":"220","endLine":61,"endColumn":28},{"ruleId":"217","severity":1,"message":"288","line":70,"column":18,"nodeType":"219","messageId":"220","endLine":70,"endColumn":31},{"ruleId":"217","severity":1,"message":"289","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":19},{"ruleId":"217","severity":1,"message":"290","line":5,"column":9,"nodeType":"219","messageId":"220","endLine":5,"endColumn":27},{"ruleId":"217","severity":1,"message":"291","line":5,"column":29,"nodeType":"219","messageId":"220","endLine":5,"endColumn":34},{"ruleId":"217","severity":1,"message":"292","line":6,"column":9,"nodeType":"219","messageId":"220","endLine":6,"endColumn":20},{"ruleId":"217","severity":1,"message":"293","line":6,"column":22,"nodeType":"219","messageId":"220","endLine":6,"endColumn":26},{"ruleId":"217","severity":1,"message":"294","line":6,"column":42,"nodeType":"219","messageId":"220","endLine":6,"endColumn":50},{"ruleId":"217","severity":1,"message":"247","line":33,"column":12,"nodeType":"219","messageId":"220","endLine":33,"endColumn":25},{"ruleId":"217","severity":1,"message":"248","line":33,"column":27,"nodeType":"219","messageId":"220","endLine":33,"endColumn":43},{"ruleId":"217","severity":1,"message":"295","line":34,"column":12,"nodeType":"219","messageId":"220","endLine":34,"endColumn":18},{"ruleId":"217","severity":1,"message":"296","line":34,"column":20,"nodeType":"219","messageId":"220","endLine":34,"endColumn":29},{"ruleId":"217","severity":1,"message":"297","line":35,"column":12,"nodeType":"219","messageId":"220","endLine":35,"endColumn":18},{"ruleId":"217","severity":1,"message":"298","line":35,"column":20,"nodeType":"219","messageId":"220","endLine":35,"endColumn":29},{"ruleId":"217","severity":1,"message":"299","line":46,"column":11,"nodeType":"219","messageId":"220","endLine":46,"endColumn":15},{"ruleId":"217","severity":1,"message":"300","line":47,"column":11,"nodeType":"219","messageId":"220","endLine":47,"endColumn":14},{"ruleId":"217","severity":1,"message":"301","line":48,"column":11,"nodeType":"219","messageId":"220","endLine":48,"endColumn":14},{"ruleId":"257","severity":1,"message":"258","line":50,"column":15,"nodeType":"259","endLine":88,"endColumn":6},{"ruleId":"302","severity":1,"message":"303","line":163,"column":33,"nodeType":"283","endLine":163,"endColumn":165},{"ruleId":"302","severity":1,"message":"303","line":177,"column":33,"nodeType":"283","endLine":177,"endColumn":154},{"ruleId":"217","severity":1,"message":"289","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":19},{"ruleId":"217","severity":1,"message":"290","line":5,"column":9,"nodeType":"219","messageId":"220","endLine":5,"endColumn":27},{"ruleId":"217","severity":1,"message":"291","line":5,"column":29,"nodeType":"219","messageId":"220","endLine":5,"endColumn":34},{"ruleId":"217","severity":1,"message":"247","line":29,"column":12,"nodeType":"219","messageId":"220","endLine":29,"endColumn":25},{"ruleId":"217","severity":1,"message":"248","line":29,"column":27,"nodeType":"219","messageId":"220","endLine":29,"endColumn":43},{"ruleId":"217","severity":1,"message":"296","line":30,"column":20,"nodeType":"219","messageId":"220","endLine":30,"endColumn":29},{"ruleId":"217","severity":1,"message":"297","line":31,"column":12,"nodeType":"219","messageId":"220","endLine":31,"endColumn":18},{"ruleId":"217","severity":1,"message":"304","line":32,"column":11,"nodeType":"219","messageId":"220","endLine":32,"endColumn":17},{"ruleId":"217","severity":1,"message":"299","line":34,"column":11,"nodeType":"219","messageId":"220","endLine":34,"endColumn":15},{"ruleId":"217","severity":1,"message":"300","line":35,"column":11,"nodeType":"219","messageId":"220","endLine":35,"endColumn":14},{"ruleId":"217","severity":1,"message":"301","line":36,"column":11,"nodeType":"219","messageId":"220","endLine":36,"endColumn":14},{"ruleId":"257","severity":1,"message":"258","line":38,"column":15,"nodeType":"259","endLine":40,"endColumn":6},{"ruleId":"217","severity":1,"message":"305","line":8,"column":10,"nodeType":"219","messageId":"220","endLine":8,"endColumn":24},{"ruleId":"217","severity":1,"message":"306","line":33,"column":23,"nodeType":"219","messageId":"220","endLine":33,"endColumn":33},{"ruleId":"281","severity":1,"message":"282","line":43,"column":13,"nodeType":"283","endLine":43,"endColumn":103},{"ruleId":"302","severity":1,"message":"303","line":44,"column":17,"nodeType":"283","endLine":44,"endColumn":128},{"ruleId":"281","severity":1,"message":"282","line":45,"column":13,"nodeType":"283","endLine":45,"endColumn":107},{"ruleId":"302","severity":1,"message":"303","line":46,"column":17,"nodeType":"283","endLine":47,"endColumn":69},{"ruleId":"281","severity":1,"message":"282","line":48,"column":13,"nodeType":"283","endLine":48,"endColumn":108},{"ruleId":"302","severity":1,"message":"303","line":49,"column":17,"nodeType":"283","endLine":50,"endColumn":91},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Bridge' is defined but never used.","'Breakpoint' is defined but never used.","'useCryptoPrices' is defined but never used.","'CryptoPriceProvider' is defined but never used.","'listings' is assigned a value but never used.","'setListings' is assigned a value but never used.","'nfts' is assigned a value but never used.","'setNfts' is assigned a value but never used.","'ownedNfts' is assigned a value but never used.","'setOwnedNfts' is assigned a value but never used.","'ownedPacks' is assigned a value but never used.","'setOwnedPacks' is assigned a value but never used.","'fetchedAndParsed' is assigned a value but never used.","'setFetchedAndParsed' is assigned a value but never used.","'account1' is assigned a value but never used.","'ethBalanceUSD' is assigned a value but never used.","'setEthBalanceUSD' is assigned a value but never used.","'promptSetup' is assigned a value but never used.","'setPromptSetup' is assigned a value but never used.","'promptInstallMetamask' is assigned a value but never used.","'userFetched' is assigned a value but never used.","'setUserFetched' is assigned a value but never used.","'setCheckUserPrompt' is assigned a value but never used.","'nftsCopy' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'initialLoaded' is assigned a value but never used.","'setInitialLoaded' is assigned a value but never used.","'filteredNfts' is assigned a value but never used.","'setFilteredNFTs' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'nftsSet' is assigned a value but never used.","'parseVextBalance' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'checkUserPrompt' and 'connectWallet'. Either include them or remove the dependency array.","ArrayExpression",["309"],"'active' is assigned a value but never used.","'chainId' is assigned a value but never used.","'withRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'web3.eth.net'. Either include it or remove the dependency array.",["310"],"'setWhitelistMintingEnabled' is assigned a value but never used.","'setAddressOnWhitelist' is assigned a value but never used.","'setPublicMintingEnabled' is assigned a value but never used.","'biconomyWeb3' is assigned a value but never used.","'useEffect' is defined but never used.","'NavLink' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setSuccessMessage' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'successfulMessage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'wcProvider' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'account', 'getVEXTBalance', and 'setVextBalance'. Either include them or remove the dependency array. If 'setVextBalance' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["311"],"'isMetaMaskInstalled' is assigned a value but never used.","'connectWallet' is defined but never used.","'ProgressBar' is defined but never used.","'getTrackBackground' is defined but never used.","'Range' is defined but never used.","'totalSupply' is defined but never used.","'mint' is defined but never used.","'openPack' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'minted' is assigned a value but never used.","'setMinted' is assigned a value but never used.","'STEP' is assigned a value but never used.","'MIN' is assigned a value but never used.","'MAX' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'prices' is assigned a value but never used.","'MagicConnector' is defined but never used.","'deactivate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},"Update the dependencies array to be: [checkUserPrompt, connectWallet, connected]",{"range":"318","text":"319"},"Update the dependencies array to be: [account, web3.eth.net]",{"range":"320","text":"321"},"Update the dependencies array to be: [account, active, getVEXTBalance, setVextBalance]",{"range":"322","text":"323"},[9732,9743],"[checkUserPrompt, connectWallet, connected]",[1573,1582],"[account, web3.eth.net]",[2312,2320],"[account, active, getVEXTBalance, setVextBalance]"]