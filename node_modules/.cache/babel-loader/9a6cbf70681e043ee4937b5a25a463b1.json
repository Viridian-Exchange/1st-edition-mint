{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\"; //import axios from \"axios\";\n\nimport \"./styles/app.sass\";\nimport Page from \"./components/Page\";\nimport Faq from \"./screens/Faq\";\nimport Drops from \"./screens/Drops\";\nimport Open from \"./screens/Open\";\nimport Verify from \"./screens/Verify\";\nimport Web3 from \"web3\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Breakpoint, BreakpointProvider } from 'react-socks';\nimport { useWeb3React } from '@web3-react/core';\nimport { Biconomy } from \"@biconomy/mexa\";\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { NetworkConnector } from \"@web3-react/network-connector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\"); //TODO: show address, list of followers, description, etc on profile page\n// function in the smart contract to add a user that is followed\n// (triggered by follow button press-> calls the function which takes in an address and adds the user to the list of following)\n// front end will pull the followee user and be able to show the profile on the initial user\n// , and call in the CLI, once followers working, you will see another profile show up\n// use item flow -> Profile/user flow\n// get current user wallet, then abi->getuserfromaddress->return json of user struct\n\nfunction App() {\n  _s();\n\n  const [biconomyFetched, setBiconomyFetched] = useState(false);\n  const [account, setAccount] = useState();\n  const [provider, setProvider] = useState();\n  const [library, setLibrary] = useState();\n  const [signature, setSignature] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [chainId, setChainId] = useState();\n  const [network, setNetwork] = useState();\n  const [message, setMessage] = useState(\"\");\n  const [signedMessage, setSignedMessage] = useState(\"\");\n  const [verified, setVerified] = useState();\n\n  const connectWallet = async () => {\n    try {\n      const provider = await web3Modal.connect();\n      const library = new ethers.providers.Web3Provider(provider);\n      const accounts = await library.listAccounts();\n      const network = await library.getNetwork();\n      setProvider(provider);\n      setLibrary(library);\n      if (accounts) setAccount(accounts[0]);\n      setChainId(network.chainId);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const handleNetwork = e => {\n    const id = e.target.value;\n    setNetwork(Number(id));\n  };\n\n  const handleInput = e => {\n    const msg = e.target.value;\n    setMessage(msg);\n  };\n\n  const switchNetwork = async () => {\n    try {\n      await library.provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: toHex(network)\n        }]\n      });\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          await library.provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [networkParams[toHex(network)]]\n          });\n        } catch (error) {\n          setError(error);\n        }\n      }\n    }\n  };\n\n  const signMessage = async () => {\n    if (!library) return;\n\n    try {\n      const signature = await library.provider.request({\n        method: \"personal_sign\",\n        params: [message, account]\n      });\n      setSignedMessage(message);\n      setSignature(signature);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const verifyMessage = async () => {\n    if (!library) return;\n\n    try {\n      const verify = await library.provider.request({\n        method: \"personal_ecRecover\",\n        params: [signedMessage, signature]\n      });\n      setVerified(verify === account.toLowerCase());\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const refreshState = () => {\n    setAccount();\n    setChainId();\n    setNetwork(\"\");\n    setMessage(\"\");\n    setSignature(\"\");\n    setVerified(undefined);\n  };\n\n  const disconnect = async () => {\n    await web3Modal.clearCachedProvider();\n    refreshState();\n  };\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      connectWallet();\n    }\n  }, []);\n  useEffect(() => {\n    if (provider === null || provider === void 0 ? void 0 : provider.on) {\n      const handleAccountsChanged = accounts => {\n        console.log(\"accountsChanged\", accounts);\n        if (accounts) setAccount(accounts[0]);\n      };\n\n      const handleChainChanged = _hexChainId => {\n        setChainId(_hexChainId);\n      };\n\n      const handleDisconnect = () => {\n        console.log(\"disconnect\", error);\n        disconnect();\n      };\n\n      provider.on(\"accountsChanged\", handleAccountsChanged);\n      provider.on(\"chainChanged\", handleChainChanged);\n      provider.on(\"disconnect\", handleDisconnect);\n      return () => {\n        if (provider.removeListener) {\n          provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n          provider.removeListener(\"chainChanged\", handleChainChanged);\n          provider.removeListener(\"disconnect\", handleDisconnect);\n        }\n      };\n    }\n  }, [provider]);\n  return /*#__PURE__*/_jsxDEV(BreakpointProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      forceRefresh: true,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/genesis-drop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/genesis-drop\",\n          render: () => /*#__PURE__*/_jsxDEV(Page, {\n            biconomyFetched: biconomyFetched,\n            account: account,\n            setAccount: setAccount,\n            children: /*#__PURE__*/_jsxDEV(Drops, {\n              biconomyFetched: biconomyFetched,\n              account: account,\n              setAccount: setAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/open\",\n          render: () => /*#__PURE__*/_jsxDEV(Page, {\n            children: /*#__PURE__*/_jsxDEV(Open, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/verify\",\n          render: () => /*#__PURE__*/_jsxDEV(Page, {\n            children: /*#__PURE__*/_jsxDEV(Verify, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/faq\",\n          render: () => /*#__PURE__*/_jsxDEV(Page, {\n            children: /*#__PURE__*/_jsxDEV(Faq, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/genesis-drop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"CbyIgi+jHdB8ot4R9ufVMuNWJR0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","Redirect","useHistory","React","useState","useEffect","Page","Faq","Drops","Open","Verify","Web3","Web3Provider","Breakpoint","BreakpointProvider","useWeb3React","Biconomy","WalletLinkConnector","WalletConnectConnector","InjectedConnector","NetworkConnector","web3","providers","HttpProvider","App","biconomyFetched","setBiconomyFetched","account","setAccount","provider","setProvider","library","setLibrary","signature","setSignature","error","setError","chainId","setChainId","network","setNetwork","message","setMessage","signedMessage","setSignedMessage","verified","setVerified","connectWallet","web3Modal","connect","ethers","accounts","listAccounts","getNetwork","handleNetwork","e","id","target","value","Number","handleInput","msg","switchNetwork","request","method","params","toHex","switchError","code","networkParams","signMessage","verifyMessage","verify","toLowerCase","refreshState","undefined","disconnect","clearCachedProvider","cachedProvider","on","handleAccountsChanged","console","log","handleChainChanged","_hexChainId","handleDisconnect","removeListener"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n//import axios from \"axios\";\nimport \"./styles/app.sass\";\nimport Page from \"./components/Page\";\nimport Faq from \"./screens/Faq\";\nimport Drops from \"./screens/Drops\";\nimport Open from \"./screens/Open\";\nimport Verify from \"./screens/Verify\";\nimport Web3 from \"web3\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Breakpoint, BreakpointProvider } from 'react-socks';\nimport { useWeb3React } from '@web3-react/core'\nimport {Biconomy} from \"@biconomy/mexa\";\nimport {WalletLinkConnector} from \"@web3-react/walletlink-connector\";\nimport {WalletConnectConnector} from \"@web3-react/walletconnect-connector\";\nimport {InjectedConnector} from \"@web3-react/injected-connector\";\nimport {NetworkConnector} from \"@web3-react/network-connector\";\n\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n\n//TODO: show address, list of followers, description, etc on profile page\n// function in the smart contract to add a user that is followed\n// (triggered by follow button press-> calls the function which takes in an address and adds the user to the list of following)\n// front end will pull the followee user and be able to show the profile on the initial user\n// , and call in the CLI, once followers working, you will see another profile show up\n// use item flow -> Profile/user flow\n// get current user wallet, then abi->getuserfromaddress->return json of user struct\nfunction App() {\n    const [biconomyFetched, setBiconomyFetched] = useState(false);\n    const [account, setAccount] = useState();\n    const [provider, setProvider] = useState();\n    const [library, setLibrary] = useState();\n    const [signature, setSignature] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [chainId, setChainId] = useState();\n    const [network, setNetwork] = useState();\n    const [message, setMessage] = useState(\"\");\n    const [signedMessage, setSignedMessage] = useState(\"\");\n    const [verified, setVerified] = useState();\n\n    const connectWallet = async () => {\n        try {\n            const provider = await web3Modal.connect();\n            const library = new ethers.providers.Web3Provider(provider);\n            const accounts = await library.listAccounts();\n            const network = await library.getNetwork();\n            setProvider(provider);\n            setLibrary(library);\n            if (accounts) setAccount(accounts[0]);\n            setChainId(network.chainId);\n        } catch (error) {\n            setError(error);\n        }\n    };\n\n    const handleNetwork = (e) => {\n        const id = e.target.value;\n        setNetwork(Number(id));\n    };\n\n    const handleInput = (e) => {\n        const msg = e.target.value;\n        setMessage(msg);\n    };\n\n    const switchNetwork = async () => {\n        try {\n            await library.provider.request({\n                method: \"wallet_switchEthereumChain\",\n                params: [{ chainId: toHex(network) }]\n            });\n        } catch (switchError) {\n            if (switchError.code === 4902) {\n                try {\n                    await library.provider.request({\n                        method: \"wallet_addEthereumChain\",\n                        params: [networkParams[toHex(network)]]\n                    });\n                } catch (error) {\n                    setError(error);\n                }\n            }\n        }\n    };\n\n    const signMessage = async () => {\n        if (!library) return;\n        try {\n            const signature = await library.provider.request({\n                method: \"personal_sign\",\n                params: [message, account]\n            });\n            setSignedMessage(message);\n            setSignature(signature);\n        } catch (error) {\n            setError(error);\n        }\n    };\n\n    const verifyMessage = async () => {\n        if (!library) return;\n        try {\n            const verify = await library.provider.request({\n                method: \"personal_ecRecover\",\n                params: [signedMessage, signature]\n            });\n            setVerified(verify === account.toLowerCase());\n        } catch (error) {\n            setError(error);\n        }\n    };\n\n    const refreshState = () => {\n        setAccount();\n        setChainId();\n        setNetwork(\"\");\n        setMessage(\"\");\n        setSignature(\"\");\n        setVerified(undefined);\n    };\n\n    const disconnect = async () => {\n        await web3Modal.clearCachedProvider();\n        refreshState();\n    };\n\n    useEffect(() => {\n        if (web3Modal.cachedProvider) {\n            connectWallet();\n        }\n    }, []);\n\n    useEffect(() => {\n        if (provider?.on) {\n            const handleAccountsChanged = (accounts) => {\n                console.log(\"accountsChanged\", accounts);\n                if (accounts) setAccount(accounts[0]);\n            };\n\n            const handleChainChanged = (_hexChainId) => {\n                setChainId(_hexChainId);\n            };\n\n            const handleDisconnect = () => {\n                console.log(\"disconnect\", error);\n                disconnect();\n            };\n\n            provider.on(\"accountsChanged\", handleAccountsChanged);\n            provider.on(\"chainChanged\", handleChainChanged);\n            provider.on(\"disconnect\", handleDisconnect);\n\n            return () => {\n                if (provider.removeListener) {\n                    provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n                    provider.removeListener(\"chainChanged\", handleChainChanged);\n                    provider.removeListener(\"disconnect\", handleDisconnect);\n                }\n            };\n        }\n    }, [provider]);\n\n  return (\n        <BreakpointProvider>\n            <Router forceRefresh={true}>\n              <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                >\n                  <Redirect to=\"/genesis-drop\" />\n                </Route>\n                <Route\n                    exact\n                    path=\"/genesis-drop\"\n                    render={() => (\n                        <Page biconomyFetched={biconomyFetched} account={account} setAccount={setAccount}>\n                          <Drops biconomyFetched={biconomyFetched} account={account} setAccount={setAccount} />\n                        </Page>\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/open\"\n                    render={() => (\n                        <Page>\n                          <Open  />\n                        </Page>\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/verify\"\n                    render={() => (\n                        <Page>\n                          <Verify  />\n                        </Page>\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/faq\"\n                    render={() => (\n                        <Page>\n                          <Faq />\n                        </Page>\n                    )}\n                />\n                <Route path=\"*\">\n                  <Redirect to=\"/genesis-drop\" />\n                </Route>\n              </Switch>\n            </Router>\n        </BreakpointProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}