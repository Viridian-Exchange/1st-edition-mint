{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar Promise = require(\"promise\");\n\nvar ethers = require(\"ethers\");\n\nvar txDecoder = require(\"ethereum-tx-decoder\");\n\nvar abi = require(\"ethereumjs-abi\");\n\nvar _require = require(\"./util\"),\n    toJSONRPCPayload = _require.toJSONRPCPayload;\n\nvar _require2 = require(\"./config\"),\n    config = _require2.config,\n    RESPONSE_CODES = _require2.RESPONSE_CODES,\n    EVENTS = _require2.EVENTS,\n    BICONOMY_RESPONSE_CODES = _require2.BICONOMY_RESPONSE_CODES,\n    STATUS = _require2.STATUS;\n\nvar DEFAULT_PAYLOAD_ID = \"99999999\";\nvar baseURL = config.baseURL;\nvar JSON_RPC_VERSION = config.JSON_RPC_VERSION;\nvar NATIVE_META_TX_URL = config.nativeMetaTxUrl;\n\nvar PermitClient = require(\"./PermitClient\");\n\nvar ERC20ForwarderClient = require(\"./ERC20ForwarderClient\");\n\nvar _require3 = require(\"./biconomyforwarder\"),\n    buildForwardTxRequest = _require3.buildForwardTxRequest,\n    getDomainSeperator = _require3.getDomainSeperator;\n\nvar _require4 = require(\"./abis\"),\n    erc20ForwarderAbi = _require4.erc20ForwarderAbi,\n    oracleAggregatorAbi = _require4.oracleAggregatorAbi,\n    feeManagerAbi = _require4.feeManagerAbi,\n    biconomyForwarderAbi = _require4.biconomyForwarderAbi,\n    transferHandlerAbi = _require4.transferHandlerAbi;\n\nvar fetch = require(\"cross-fetch\");\n\nvar decoderMap = {},\n    smartContractMap = {},\n    // contract addresss -> contract attributes(metaTransactionType)\n// could be contract address -> contract object\nsmartContractMetaTransactionMap = {};\nvar biconomyForwarder;\n\nvar events = require(\"events\");\n\nvar eventEmitter = new events.EventEmitter();\nvar trustedForwarderOverhead;\nvar daiPermitOverhead;\nvar eip2612PermitOverhead;\nvar domainType, forwarderDomainType, metaInfoType, relayerPaymentType, metaTransactionType, forwardRequestType;\nvar domainData = {\n  name: config.eip712DomainName,\n  version: config.eip712SigVersion,\n  verifyingContract: config.eip712VerifyingContract\n};\nvar daiDomainData = {\n  name: config.daiDomainName,\n  version: config.daiVersion\n};\nvar forwarderDomainData; // EIP712 format data for login\n\nvar loginDomainType, loginMessageType, loginDomainData;\n\nfunction Biconomy(provider, options) {\n  _validate(options);\n\n  this.isBiconomy = true;\n  this.status = STATUS.INIT;\n  this.options = options;\n  this.apiKey = options.apiKey;\n  this.isLogin = false;\n  this.dappAPIMap = {};\n  this.strictMode = options.strictMode || false;\n  this.providerId = options.providerId || 0;\n  this.readViaContract = options.readViaContract || false;\n  this.READY = STATUS.BICONOMY_READY;\n  this.LOGIN_CONFIRMATION = EVENTS.LOGIN_CONFIRMATION;\n  this.ERROR = EVENTS.BICONOMY_ERROR;\n  this.pendingLoginTransactions = {};\n  this.jsonRPC = {\n    messageId: 0\n  };\n  this.originalProvider = provider;\n  this.isEthersProviderPresent = false;\n  this.canSignMessages = false;\n\n  if (options.debug) {\n    config.logsEnabled = true;\n  }\n\n  if (options.walletProvider) {\n    if (isEthersProvider(options.walletProvider)) {\n      throw new Error(\"Wallet Provider in options can't be an ethers provider. Please pass the provider you get from your wallet directly.\");\n    }\n\n    this.walletProvider = new ethers.providers.Web3Provider(options.walletProvider);\n  }\n\n  if (provider) {\n    if (isEthersProvider(provider)) {\n      this.ethersProvider = provider;\n      this.isEthersProviderPresent = true;\n    } else {\n      this.ethersProvider = new ethers.providers.Web3Provider(provider);\n    }\n\n    _init(this.apiKey, this);\n\n    var proto = Object.getPrototypeOf(provider);\n    var keys = Object.getOwnPropertyNames(proto);\n\n    for (var i = 0; i < keys.length; i++) {\n      this[keys[i]] = provider[keys[i]];\n    }\n\n    for (var key in provider) {\n      if (!this[key]) {\n        this[key] = provider[key];\n      }\n    }\n\n    var self = this;\n\n    this.send = function (payload, cb) {\n      var _this = this;\n\n      if (typeof payload === \"string\") {\n        // Ethers provider is being used to call methods, so payload is actually method, and cb is params\n        payload = {\n          id: 1,\n          jsonrpc: \"2.0\",\n          method: payload,\n          params: cb\n        };\n      }\n\n      if (payload.method == \"eth_sendTransaction\") {\n        return new Promise(function (resolve, reject) {\n          handleSendTransaction(_this, payload, function (error, result) {\n            var response = _this._createJsonRpcResponse(payload, error, result);\n\n            if (cb && !self.isEthersProviderPresent) {\n              cb(error, response);\n            }\n\n            if (response.error) {\n              reject(response.error);\n            } else {\n              resolve(response.result);\n            }\n          });\n        });\n      } else if (payload.method == \"eth_sendRawTransaction\") {\n        return new Promise(function (resolve, reject) {\n          sendSignedTransaction(_this, payload, function (error, result) {\n            var response = _this._createJsonRpcResponse(payload, error, result);\n\n            if (cb && !self.isEthersProviderPresent) {\n              cb(error, response);\n            }\n\n            if (response.error) {\n              reject(response.error);\n            } else {\n              resolve(response.result);\n            }\n          });\n        });\n      } else {\n        if (self.isEthersProviderPresent) {\n          return self.originalProvider.send(payload.method, payload.params);\n        } else {\n          self.originalProvider.send(payload, cb);\n        }\n      }\n    };\n\n    this.request = function (args, cb) {\n      var payload = {\n        method: args.method,\n        params: args.params\n      };\n\n      if (payload.method == \"eth_sendTransaction\") {\n        return new Promise(function (resolve, reject) {\n          handleSendTransaction(self, payload, function (error, result) {\n            if (error) {\n              return reject(error);\n            }\n\n            if (result.result) {\n              resolve(result.result);\n\n              _logMessage(result.result);\n            } else {\n              resolve(result);\n\n              _logMessage(result);\n            }\n\n            if (cb) {\n              cb(error, result);\n            }\n          });\n        });\n      } else if (payload.method == \"eth_sendRawTransaction\") {\n        return new Promise(function (resolve, reject) {\n          sendSignedTransaction(self, payload, function (error, result) {\n            if (error) {\n              return reject(error);\n            }\n\n            if (result.result) {\n              resolve(result.result);\n\n              _logMessage(result.result);\n            } else {\n              resolve(result);\n\n              _logMessage(result);\n            }\n\n            if (cb) {\n              cb(error, result);\n            }\n          });\n        });\n      } else {\n        if (self.originalProvider.request) {\n          return self.originalProvider.request(args, cb);\n        } else if (self.originalProvider.send) {\n          return new Promise( /*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(resolve, reject) {\n              var jsonRPCPaylod, localResult;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      jsonRPCPaylod = toJSONRPCPayload(self, payload.method, payload.params);\n\n                      if (!self.isEthersProviderPresent) {\n                        _context.next = 14;\n                        break;\n                      }\n\n                      _context.prev = 2;\n                      _context.next = 5;\n                      return self.originalProvider.send(jsonRPCPaylod.method, jsonRPCPaylod.params);\n\n                    case 5:\n                      localResult = _context.sent;\n                      resolve(localResult);\n                      _context.next = 12;\n                      break;\n\n                    case 9:\n                      _context.prev = 9;\n                      _context.t0 = _context[\"catch\"](2);\n                      reject(_context.t0);\n\n                    case 12:\n                      _context.next = 15;\n                      break;\n\n                    case 14:\n                      self.originalProvider.send(jsonRPCPaylod, function (err, response) {\n                        if (err) {\n                          return reject(err);\n                        }\n\n                        if (response.result) {\n                          resolve(response.result);\n                        } else {\n                          resolve(response);\n                        }\n                      });\n\n                    case 15:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, null, [[2, 9]]);\n            }));\n\n            return function (_x, _x2) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n        } else {\n          return Promise.reject(\"Invalid provider object passed to Biconomy as it doesn't support request or send method\");\n        }\n      }\n    };\n\n    this.sendAsync = this.send;\n  } else {\n    throw new Error(\"Please pass a provider to Biconomy.\");\n  }\n}\n\nBiconomy.prototype.getSignerByAddress = function (userAddress) {\n  var provider = this.getEthersProvider();\n  var signer = provider.getSigner();\n  signer = signer.connectUnchecked();\n  signer.getAddress = /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", userAddress);\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return signer;\n};\n\nBiconomy.prototype.getEthersProvider = function () {\n  return new ethers.providers.Web3Provider(this);\n}; //TODO\n//Allow to provide custom txGas\n\n\nBiconomy.prototype.getForwardRequestAndMessageToSign = function (rawTransaction, tokenAddress, customBatchId, cb) {\n  try {\n    var engine = this;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(resolve, reject) {\n        var decodedTx, to, methodInfo, error, methodName, token, api, metaTxApproach, contractAddr, _error, params, typeString, paramArray, i, parsedTransaction, account, gasLimit, gasLimitNum, contractABI, contract, methodSignature, _contract$estimateGas, _error2, request, cost, buildTxResponse, _error3, eip712DataToSign, hashToSign, dataToSign, _error4;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!rawTransaction) {\n                  _context3.next = 79;\n                  break;\n                }\n\n                decodedTx = txDecoder.decodeTx(rawTransaction);\n\n                if (!(decodedTx.to && decodedTx.data && decodedTx.value)) {\n                  _context3.next = 76;\n                  break;\n                }\n\n                to = decodedTx.to.toLowerCase();\n                methodInfo = decodeMethod(to, decodedTx.data);\n\n                if (methodInfo) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                error = formatMessage(RESPONSE_CODES.DASHBOARD_DATA_MISMATCH, \"Smart Contract address registered on dashboard is different than what is sent(\".concat(decodedTx.to, \") in current transaction\"));\n                if (cb) cb(error);\n                return _context3.abrupt(\"return\", reject(error));\n\n              case 9:\n                methodName = methodInfo.name; //token address needs to be passed otherwise fees will be charged in DAI by default, given DAI permit is given\n\n                token = tokenAddress ? tokenAddress : engine.daiTokenAddress;\n\n                _logMessage(tokenAddress);\n\n                api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined;\n\n                if (!api) {\n                  api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n                  metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n                } else {\n                  contractAddr = api.contractAddress.toLowerCase();\n                  metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n                }\n\n                if (api) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                _logMessage(\"API not found for method \".concat(methodName));\n\n                _error = formatMessage(RESPONSE_CODES.API_NOT_FOUND, \"No API found on dashboard for called method \".concat(methodName));\n                if (cb) cb(_error);\n                return _context3.abrupt(\"return\", reject(_error));\n\n              case 19:\n                _logMessage(\"API found\");\n\n                params = methodInfo.params;\n                typeString = \"\";\n                paramArray = [];\n\n                for (i = 0; i < params.length; i++) {\n                  paramArray.push(_getParamValue(params[i]));\n                  typeString = typeString + params[i].type.toString() + \",\";\n                }\n\n                if (params.length > 0) {\n                  typeString = typeString.substring(0, typeString.length - 1);\n                }\n\n                parsedTransaction = ethers.utils.parseTransaction(rawTransaction);\n                account = parsedTransaction.from;\n\n                _logMessage(\"Signer is \".concat(account));\n\n                gasLimit = decodedTx.gasLimit;\n\n                if (!(!gasLimit || parseInt(gasLimit) == 0)) {\n                  _context3.next = 47;\n                  break;\n                }\n\n                contractABI = smartContractMap[to];\n\n                if (!contractABI) {\n                  _context3.next = 45;\n                  break;\n                }\n\n                contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n                methodSignature = methodName + \"(\" + typeString + \")\";\n                _context3.prev = 34;\n                _context3.next = 37;\n                return (_contract$estimateGas = contract.estimateGas)[methodSignature].apply(_contract$estimateGas, paramArray.concat([{\n                  from: account\n                }]));\n\n              case 37:\n                gasLimit = _context3.sent;\n                _context3.next = 43;\n                break;\n\n              case 40:\n                _context3.prev = 40;\n                _context3.t0 = _context3[\"catch\"](34);\n                return _context3.abrupt(\"return\", reject(_context3.t0));\n\n              case 43:\n                // Do not send this value in API call. only meant for txGas\n                gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).add(ethers.BigNumber.from(5000)).toNumber();\n\n                _logMessage(\"Gas limit number \".concat(gasLimitNum));\n\n              case 45:\n                _context3.next = 48;\n                break;\n\n              case 47:\n                gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).toNumber();\n\n              case 48:\n                if (account) {\n                  _context3.next = 51;\n                  break;\n                }\n\n                _error2 = formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Not able to get user account from signed transaction\");\n                return _context3.abrupt(\"return\", end(_error2));\n\n              case 51:\n                if (!(metaTxApproach == engine.TRUSTED_FORWARDER)) {\n                  _context3.next = 57;\n                  break;\n                }\n\n                _context3.next = 54;\n                return buildForwardTxRequest(account, to, gasLimitNum, decodedTx.data, biconomyForwarder, customBatchId);\n\n              case 54:\n                request = _context3.sent.request;\n                _context3.next = 67;\n                break;\n\n              case 57:\n                if (!(metaTxApproach == engine.ERC20_FORWARDER)) {\n                  _context3.next = 64;\n                  break;\n                }\n\n                _context3.next = 60;\n                return engine.erc20ForwarderClient.buildTx({\n                  userAddress: account,\n                  to: to,\n                  txGas: gasLimitNum,\n                  data: decodedTx.data,\n                  token: token\n                });\n\n              case 60:\n                buildTxResponse = _context3.sent;\n\n                if (buildTxResponse) {\n                  request = buildTxResponse.request;\n                  cost = buildTxResponse.cost;\n                } else {\n                  reject(formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Unable to build forwarder request\"));\n                }\n\n                _context3.next = 67;\n                break;\n\n              case 64:\n                _error3 = formatMessage(RESPONSE_CODES.INVALID_OPERATION, \"Smart contract is not registered in the dashboard for this meta transaction approach. Kindly use biconomy.getUserMessageToSign\");\n                if (cb) cb(_error3);\n                return _context3.abrupt(\"return\", reject(_error3));\n\n              case 67:\n                _logMessage(\"Forward Request is: \");\n\n                _logMessage(request);\n\n                eip712DataToSign = {\n                  types: {\n                    EIP712Domain: forwarderDomainType,\n                    ERC20ForwardRequest: forwardRequestType\n                  },\n                  domain: forwarderDomainData,\n                  primaryType: \"ERC20ForwardRequest\",\n                  message: request\n                };\n                hashToSign = abi.soliditySHA3([\"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"bytes32\"], [request.from, request.to, request.token, request.txGas, request.tokenGasPrice, request.batchId, request.batchNonce, request.deadline, ethers.utils.keccak256(request.data)]);\n                dataToSign = {\n                  eip712Format: eip712DataToSign,\n                  personalSignatureFormat: hashToSign,\n                  request: request,\n                  cost: cost\n                };\n                if (cb) cb(null, dataToSign);\n                return _context3.abrupt(\"return\", resolve(dataToSign));\n\n              case 76:\n                _error4 = formatMessage(RESPONSE_CODES.BICONOMY_NOT_INITIALIZED, \"Decoders not initialized properly in mexa sdk. Make sure your have smart contracts registered on Mexa Dashboard\");\n                if (cb) cb(_error4);\n                return _context3.abrupt(\"return\", reject(_error4));\n\n              case 79:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[34, 40]]);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  } catch (error) {\n    return end(error);\n  }\n};\n/**\n * Method used to listen to events emitted from the SDK\n */\n\n\nBiconomy.prototype.onEvent = function (type, callback) {\n  if (type == this.READY || type == this.ERROR || type == this.LOGIN_CONFIRMATION) {\n    eventEmitter.on(type, callback);\n    return this;\n  } else {\n    throw formatMessage(RESPONSE_CODES.EVENT_NOT_SUPPORTED, \"\".concat(type, \" event is not supported.\"));\n  }\n};\n/**\n * Create a JSON RPC response from the given error and result parameter.\n **/\n\n\nBiconomy.prototype._createJsonRpcResponse = function (payload, error, result) {\n  var response = {};\n  response.id = payload.id;\n  response.jsonrpc = JSON_RPC_VERSION;\n\n  if ((!error || error == null) && !result) {\n    response.error = \"Unexpected error has occured. Please contact Biconomy Team\";\n    return response;\n  }\n\n  if (error) {\n    response.error = error;\n  } else if (result && result.error) {\n    response.error = result.error;\n  } else if (ethers.utils.isHexString(result)) {\n    response.result = result;\n  } else {\n    response = result;\n  }\n\n  return response;\n};\n\nfunction decodeMethod(to, data) {\n  if (to && data && decoderMap[to]) {\n    return decoderMap[to].decodeMethod(data);\n  }\n\n  return;\n}\n/**\n * Method used to handle transaction initiated using web3.eth.sendSignedTransaction method\n * It extracts rawTransaction from payload and decode it to get required information like from, to,\n * data, gasLimit to create the payload for biconomy meta transaction API.\n * In case of Native meta transaction, payload just contains rawTransaction\n * In case of contract based meta transaction, payload contains rawTransaction and signature wrapped\n * in a json object.\n *\n * @param {Object} engine Reference to this SDK instance\n * @param {Object} payload Payload data\n * @param {Function} end Callback function with error as first argument\n */\n\n\nfunction sendSignedTransaction(_x5, _x6, _x7) {\n  return _sendSignedTransaction.apply(this, arguments);\n}\n/**\n * Function decodes the parameter in payload and gets the user signature using eth_signTypedData_v4\n * method and send the request to biconomy for processing and call the callback method 'end'\n * with transaction hash.\n *\n * This is an internal function that is called while intercepting eth_sendTransaction RPC method call.\n **/\n\n\nfunction _sendSignedTransaction() {\n  _sendSignedTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(engine, payload, end) {\n    var data, rawTransaction, signature, request, signatureType, decodedTx, to, methodInfo, error, methodName, api, metaTxApproach, contractAddr, _error5, params, paramArray, parsedTransaction, account, _error6, forwardedData, gasLimitNum, gasLimit, paramArrayForGasCalculation, typeString, i, contractABI, _contract$estimateGas2, contract, methodSignature, domainSeparator, _data, _i, _data2, relayerPayment, _data3, _error7, _error8, _error9, _error10;\n\n    return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(payload && payload.params[0])) {\n              _context7.next = 101;\n              break;\n            }\n\n            data = payload.params[0]; // user would need to pass token address as well!\n            // OR they could pass the symbol and engine will provide the address for you..\n            // default is DAI\n\n            if (typeof data == \"string\") {\n              // Here user send the rawTransaction in the payload directly. Probably the case of native meta transaction\n              // Handle this scenario differently?\n              rawTransaction = data;\n            } else if ((0, _typeof2[\"default\"])(data) == \"object\") {\n              // Here user wrapped raw Transaction in json object along with signature\n              signature = data.signature;\n              rawTransaction = data.rawTransaction;\n              signatureType = data.signatureType;\n              request = data.forwardRequest;\n            }\n\n            if (!rawTransaction) {\n              _context7.next = 96;\n              break;\n            }\n\n            decodedTx = txDecoder.decodeTx(rawTransaction);\n\n            if (!(decodedTx.to && decodedTx.data && decodedTx.value)) {\n              _context7.next = 91;\n              break;\n            }\n\n            to = decodedTx.to.toLowerCase();\n            methodInfo = decodeMethod(to, decodedTx.data);\n\n            if (methodInfo) {\n              _context7.next = 19;\n              break;\n            }\n\n            methodInfo = decodeMethod(config.SCW, decodedTx.data);\n\n            if (methodInfo) {\n              _context7.next = 19;\n              break;\n            }\n\n            if (!engine.strictMode) {\n              _context7.next = 16;\n              break;\n            }\n\n            error = formatMessage(RESPONSE_CODES.DASHBOARD_DATA_MISMATCH, \"No smart contract wallet or smart contract registered on dashboard with address (\".concat(decodedTx.to, \")\"));\n            return _context7.abrupt(\"return\", end(error));\n\n          case 16:\n            _logMessage(\"Strict mode is off so falling back to default provider for handling transaction\");\n\n            if ((0, _typeof2[\"default\"])(data) == \"object\" && data.rawTransaction) {\n              payload.params = [data.rawTransaction];\n            }\n\n            return _context7.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"No smart contract wallet or smart contract registered on dashboard with address (\".concat(decodedTx.to, \")\")));\n\n          case 19:\n            methodName = methodInfo.name;\n            api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined;\n\n            if (!api) {\n              api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n              metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n            } else {\n              contractAddr = api.contractAddress.toLowerCase();\n              metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n            }\n\n            if (api) {\n              _context7.next = 33;\n              break;\n            }\n\n            _logMessage(\"API not found for method \".concat(methodName));\n\n            _logMessage(\"Strict mode \".concat(engine.strictMode));\n\n            if (!engine.strictMode) {\n              _context7.next = 30;\n              break;\n            }\n\n            _error5 = formatMessage(RESPONSE_CODES.API_NOT_FOUND, \"Biconomy strict mode is on. No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\"));\n            return _context7.abrupt(\"return\", end(_error5, null));\n\n          case 30:\n            _logMessage(\"Falling back to default provider as strict mode is false in biconomy\");\n\n            if ((0, _typeof2[\"default\"])(data) == \"object\" && data.rawTransaction) {\n              payload.params = [data.rawTransaction];\n            }\n\n            return _context7.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"Current provider can not sign transactions. Make sure to register method \".concat(methodName, \" on Biconomy Dashboard\")));\n\n          case 33:\n            _logMessage(\"API found\");\n\n            params = methodInfo.params;\n            paramArray = [];\n            parsedTransaction = ethers.utils.parseTransaction(rawTransaction);\n            account = parsedTransaction ? parsedTransaction.from : undefined;\n\n            _logMessage(\"signer is \".concat(account));\n\n            if (account) {\n              _context7.next = 42;\n              break;\n            }\n\n            _error6 = formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Not able to get user account from signed transaction\");\n            return _context7.abrupt(\"return\", end(_error6));\n\n          case 42:\n            gasLimit = decodedTx.gasLimit;\n\n            if (!(api.url == NATIVE_META_TX_URL)) {\n              _context7.next = 88;\n              break;\n            }\n\n            if (!(metaTxApproach != engine.DEFAULT)) {\n              _context7.next = 77;\n              break;\n            } // forwardedData = payload.params[0].data;\n\n\n            forwardedData = decodedTx.data;\n            paramArrayForGasCalculation = [];\n            typeString = \"\";\n\n            for (i = 0; i < params.length; i++) {\n              paramArrayForGasCalculation.push(_getParamValue(params[i]));\n              typeString = typeString + params[i].type.toString() + \",\";\n            }\n\n            if (params.length > 0) {\n              typeString = typeString.substring(0, typeString.length - 1);\n            }\n\n            if (!(!gasLimit || parseInt(gasLimit) == 0)) {\n              _context7.next = 62;\n              break;\n            }\n\n            contractABI = smartContractMap[to];\n\n            if (!contractABI) {\n              _context7.next = 60;\n              break;\n            }\n\n            contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n            methodSignature = methodName + \"(\" + typeString + \")\";\n            _context7.next = 57;\n            return (_contract$estimateGas2 = contract.estimateGas)[methodSignature].apply(_contract$estimateGas2, paramArrayForGasCalculation.concat([{\n              from: account\n            }]));\n\n          case 57:\n            gasLimit = _context7.sent; // do not send this value in API call. only meant for txGas\n\n            gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).add(ethers.BigNumber.from(5000)).toNumber();\n\n            _logMessage(\"gas limit number\" + gasLimitNum);\n\n          case 60:\n            _context7.next = 63;\n            break;\n\n          case 62:\n            gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).toNumber();\n\n          case 63:\n            _logMessage(request);\n\n            paramArray.push(request);\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              domainSeparator = getDomainSeperator(forwarderDomainData);\n\n              _logMessage(domainSeparator);\n\n              paramArray.push(domainSeparator);\n            }\n\n            paramArray.push(signature);\n            _data = {};\n            _data.from = account;\n            _data.apiId = api.id;\n            _data.params = paramArray;\n            _data.to = to;\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              _data.signatureType = engine.EIP712_SIGN;\n            }\n\n            _context7.next = 75;\n            return _sendTransaction(engine, account, api, _data, end);\n\n          case 75:\n            _context7.next = 86;\n            break;\n\n          case 77:\n            for (_i = 0; _i < params.length; _i++) {\n              paramArray.push(_getParamValue(params[_i]));\n            }\n\n            _data2 = {};\n            _data2.from = account;\n            _data2.apiId = api.id;\n            _data2.params = paramArray;\n            _data2.gasLimit = decodedTx.gasLimit.toString(); //verify\n\n            _data2.to = decodedTx.to.toLowerCase();\n            _context7.next = 86;\n            return _sendTransaction(engine, account, api, _data2, end);\n\n          case 86:\n            _context7.next = 89;\n            break;\n\n          case 88:\n            if (signature) {\n              relayerPayment = {};\n              relayerPayment.token = config.DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS;\n              relayerPayment.amount = config.DEFAULT_RELAYER_PAYMENT_AMOUNT;\n              _data3 = {};\n              _data3.rawTx = rawTransaction;\n              _data3.signature = signature;\n              _data3.to = to;\n              _data3.from = account;\n              _data3.apiId = api.id;\n              _data3.data = decodedTx.data;\n              _data3.value = ethers.utils.hexValue(decodedTx.value);\n              _data3.gasLimit = decodedTx.gasLimit.toString();\n              _data3.nonceBatchId = config.NONCE_BATCH_ID;\n              _data3.expiry = config.EXPIRY;\n              _data3.baseGas = config.BASE_GAS;\n              _data3.relayerPayment = {\n                token: relayerPayment.token,\n                amount: relayerPayment.amount\n              };\n\n              _sendTransaction(engine, account, api, _data3, end);\n            } else {\n              _error7 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \". message and signature are required in param object\"));\n              eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error7);\n              end(_error7);\n            }\n\n          case 89:\n            _context7.next = 94;\n            break;\n\n          case 91:\n            _error8 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Not able to deode the data in rawTransaction using ethereum-tx-decoder. Please check the data sent.\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error8);\n            end(_error8);\n\n          case 94:\n            _context7.next = 99;\n            break;\n\n          case 96:\n            _error9 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \".rawTransaction is required in param object\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error9);\n            end(_error9);\n\n          case 99:\n            _context7.next = 104;\n            break;\n\n          case 101:\n            _error10 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \". Non empty Array expected in params key\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error10);\n            end(_error10);\n\n          case 104:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _sendSignedTransaction.apply(this, arguments);\n}\n\nfunction handleSendTransaction(_x8, _x9, _x10) {\n  return _handleSendTransaction.apply(this, arguments);\n}\n\nfunction _handleSendTransaction() {\n  _handleSendTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(engine, payload, end) {\n    var to, methodInfo, error, methodName, api, metaTxApproach, contractAddr, gasLimit, txGas, signatureType, _error11, account, params, paramArray, _error12, forwardedData, gasLimitNum, paramArrayForGasCalculation, typeString, signatureFromPayload, i, contractABI, _contract$estimateGas3, contract, methodSignature, _error13, request, domainSeparator, signatureEIP712, signaturePersonal, data, _i2, _data4, _error14, _error15, _error16;\n\n    return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n\n            _logMessage(\"Handle transaction with payload\");\n\n            _logMessage(payload);\n\n            if (!(payload.params && payload.params[0] && payload.params[0].to)) {\n              _context8.next = 151;\n              break;\n            }\n\n            to = payload.params[0].to.toLowerCase();\n\n            if (!(decoderMap[to] || decoderMap[config.SCW])) {\n              _context8.next = 141;\n              break;\n            }\n\n            methodInfo = decodeMethod(to, payload.params[0].data); // Check if the Smart Contract Wallet is registered on dashboard\n\n            if (!methodInfo) {\n              methodInfo = decodeMethod(config.SCW, payload.params[0].data);\n            }\n\n            if (methodInfo) {\n              _context8.next = 13;\n              break;\n            }\n\n            error = {};\n            error.code = RESPONSE_CODES.WRONG_ABI;\n            error.message = \"Can't decode method information from payload. Make sure you have uploaded correct ABI on Biconomy Dashboard\";\n            return _context8.abrupt(\"return\", end(error, null));\n\n          case 13:\n            methodName = methodInfo.name;\n            api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined; // Information we get here is contractAddress, methodName, methodType, ApiId\n\n            if (!api) {\n              api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n              metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n            } else {\n              contractAddr = api.contractAddress.toLowerCase();\n              metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n            }\n\n            gasLimit = payload.params[0].gas || payload.params[0].gasLimit;\n            txGas = payload.params[0].txGas;\n            signatureType = payload.params[0].signatureType;\n\n            _logMessage(payload.params[0]);\n\n            _logMessage(api);\n\n            _logMessage(\"gas limit : \".concat(gasLimit));\n\n            _logMessage(\"tx gas supplied : \".concat(txGas));\n\n            if (api) {\n              _context8.next = 35;\n              break;\n            }\n\n            _logMessage(\"API not found for method \".concat(methodName));\n\n            _logMessage(\"Strict mode \".concat(engine.strictMode));\n\n            if (!engine.strictMode) {\n              _context8.next = 33;\n              break;\n            }\n\n            _error11 = {};\n            _error11.code = RESPONSE_CODES.API_NOT_FOUND;\n            _error11.message = \"Biconomy strict mode is on. No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\");\n            return _context8.abrupt(\"return\", end(_error11, null));\n\n          case 33:\n            _logMessage(\"Falling back to default provider as strict mode is false in biconomy\");\n\n            return _context8.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\")));\n\n          case 35:\n            _logMessage(\"API found\");\n\n            _logMessage(\"Getting user account\");\n\n            account = payload.params[0].from;\n\n            if (account) {\n              _context8.next = 40;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", end(\"Not able to get user account\"));\n\n          case 40:\n            _logMessage(\"User account fetched\");\n\n            params = methodInfo.params;\n\n            _logMessage(params);\n\n            paramArray = [];\n\n            if (!(metaTxApproach == engine.ERC20_FORWARDER)) {\n              _context8.next = 48;\n              break;\n            }\n\n            _error12 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"This operation is not allowed for contracts registered on dashboard as \\\"ERC20Forwarder\\\". Use ERC20Forwarder client instead!\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error12);\n            return _context8.abrupt(\"return\", end(_error12));\n\n          case 48:\n            if (!(api.url == NATIVE_META_TX_URL)) {\n              _context8.next = 136;\n              break;\n            }\n\n            if (!(metaTxApproach == engine.TRUSTED_FORWARDER)) {\n              _context8.next = 126;\n              break;\n            }\n\n            _logMessage(\"Smart contract is configured to use Trusted Forwarder as meta transaction type\");\n\n            forwardedData = payload.params[0].data;\n            paramArrayForGasCalculation = [];\n            typeString = \"\";\n            signatureFromPayload = payload.params[0].signature; // Check if txGas is present, if not calculate gas limit for txGas\n\n            if (!(!txGas || parseInt(txGas) == 0)) {\n              _context8.next = 74;\n              break;\n            }\n\n            for (i = 0; i < params.length; i++) {\n              paramArrayForGasCalculation.push(_getParamValue(params[i]));\n              typeString = typeString + params[i].type.toString() + \",\";\n            }\n\n            if (params.length > 0) {\n              typeString = typeString.substring(0, typeString.length - 1);\n            }\n\n            contractABI = smartContractMap[to];\n\n            if (!contractABI) {\n              _context8.next = 69;\n              break;\n            }\n\n            contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n            methodSignature = methodName + \"(\" + typeString + \")\";\n            _context8.next = 64;\n            return (_contract$estimateGas3 = contract.estimateGas)[methodSignature].apply(_contract$estimateGas3, paramArrayForGasCalculation.concat([{\n              from: account\n            }]));\n\n          case 64:\n            txGas = _context8.sent; // do not send this value in API call. only meant for txGas\n\n            gasLimitNum = ethers.BigNumber.from(txGas.toString()).add(ethers.BigNumber.from(5000)).toNumber();\n\n            _logMessage(\"Gas limit (txGas) calculated for method \".concat(methodName, \" in SDK: \").concat(gasLimitNum));\n\n            _context8.next = 72;\n            break;\n\n          case 69:\n            _error13 = formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"Smart contract ABI not found!\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error13);\n            end(_error13);\n\n          case 72:\n            _context8.next = 77;\n            break;\n\n          case 74:\n            _logMessage(\"txGas supplied for this Trusted Forwarder call is \".concat(Number(txGas)));\n\n            gasLimitNum = ethers.BigNumber.from(txGas.toString()).toNumber();\n\n            _logMessage(\"gas limit number for txGas \" + gasLimitNum);\n\n          case 77:\n            _context8.next = 79;\n            return buildForwardTxRequest(account, to, parseInt(gasLimitNum), //txGas\n            forwardedData, biconomyForwarder);\n\n          case 79:\n            request = _context8.sent.request;\n\n            _logMessage(request);\n\n            paramArray.push(request);\n\n            if (!(signatureType && signatureType == engine.EIP712_SIGN)) {\n              _context8.next = 100;\n              break;\n            }\n\n            _logMessage(\"EIP712 signature flow\");\n\n            domainSeparator = getDomainSeperator(forwarderDomainData);\n\n            _logMessage(\"Domain separator to be used:\");\n\n            _logMessage(domainSeparator);\n\n            paramArray.push(domainSeparator);\n\n            if (!signatureFromPayload) {\n              _context8.next = 93;\n              break;\n            }\n\n            signatureEIP712 = signatureFromPayload;\n\n            _logMessage(\"EIP712 signature from payload is \".concat(signatureEIP712));\n\n            _context8.next = 97;\n            break;\n\n          case 93:\n            _context8.next = 95;\n            return getSignatureEIP712(engine, account, request);\n\n          case 95:\n            signatureEIP712 = _context8.sent;\n\n            _logMessage(\"EIP712 signature is \".concat(signatureEIP712));\n\n          case 97:\n            paramArray.push(signatureEIP712);\n            _context8.next = 115;\n            break;\n\n          case 100:\n            _logMessage(\"Personal signature flow\");\n\n            if (!signatureFromPayload) {\n              _context8.next = 106;\n              break;\n            }\n\n            signaturePersonal = signatureFromPayload;\n\n            _logMessage(\"Personal signature from payload is \".concat(signaturePersonal));\n\n            _context8.next = 110;\n            break;\n\n          case 106:\n            _context8.next = 108;\n            return getSignaturePersonal(engine, request);\n\n          case 108:\n            signaturePersonal = _context8.sent;\n\n            _logMessage(\"Personal signature is \".concat(signaturePersonal));\n\n          case 110:\n            if (!signaturePersonal) {\n              _context8.next = 114;\n              break;\n            }\n\n            paramArray.push(signaturePersonal);\n            _context8.next = 115;\n            break;\n\n          case 114:\n            throw new Error(\"Could not get personal signature while processing transaction in Mexa SDK. Please check the providers you have passed to Biconomy\");\n\n          case 115:\n            data = {};\n            data.from = account;\n            data.apiId = api.id;\n            data.params = paramArray;\n            data.to = to; //gasLimit for entire transaction\n            //This will be calculated at the backend again\n\n            data.gasLimit = gasLimit;\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              data.signatureType = engine.EIP712_SIGN;\n            }\n\n            _context8.next = 124;\n            return _sendTransaction(engine, account, api, data, end);\n\n          case 124:\n            _context8.next = 134;\n            break;\n\n          case 126:\n            for (_i2 = 0; _i2 < params.length; _i2++) {\n              paramArray.push(_getParamValue(params[_i2]));\n            }\n\n            _data4 = {};\n            _data4.from = account;\n            _data4.apiId = api.id;\n            _data4.params = paramArray;\n            _data4.gasLimit = gasLimit;\n            _data4.to = to;\n\n            _sendTransaction(engine, account, api, _data4, end);\n\n          case 134:\n            _context8.next = 139;\n            break;\n\n          case 136:\n            _error14 = formatMessage(RESPONSE_CODES.INVALID_OPERATION, \"Biconomy smart contract wallets are not supported now. On dashboard, re-register your smart contract methods with \\\"native meta tx\\\" checkbox selected.\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error14);\n            return _context8.abrupt(\"return\", end(_error14));\n\n          case 139:\n            _context8.next = 149;\n            break;\n\n          case 141:\n            if (!engine.strictMode) {\n              _context8.next = 147;\n              break;\n            }\n\n            _error15 = formatMessage(RESPONSE_CODES.BICONOMY_NOT_INITIALIZED, \"Decoders not initialized properly in mexa sdk. Make sure your have smart contracts registered on Mexa Dashboard\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error15);\n            end(_error15);\n            _context8.next = 149;\n            break;\n\n          case 147:\n            _logMessage(\"Smart contract not found on dashbaord. Strict mode is off, so falling back to normal transaction mode\");\n\n            return _context8.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"Current provider can't send transactions and smart contract \".concat(to, \" not found on Biconomy Dashbaord\")));\n\n          case 149:\n            _context8.next = 154;\n            break;\n\n          case 151:\n            _error16 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload), \". Expecting params key to be an array with first element having a 'to' property\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error16);\n            end(_error16);\n\n          case 154:\n            _context8.next = 159;\n            break;\n\n          case 156:\n            _context8.prev = 156;\n            _context8.t0 = _context8[\"catch\"](0);\n            return _context8.abrupt(\"return\", end(_context8.t0));\n\n          case 159:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 156]]);\n  }));\n  return _handleSendTransaction.apply(this, arguments);\n}\n\nfunction callDefaultProvider(_x11, _x12, _x13, _x14) {\n  return _callDefaultProvider.apply(this, arguments);\n}\n\nfunction _callDefaultProvider() {\n  _callDefaultProvider = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(engine, payload, callback, errorMessage) {\n    var targetProvider, responseFromProvider;\n    return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            targetProvider = engine.originalProvider;\n\n            if (!targetProvider) {\n              _context9.next = 18;\n              break;\n            }\n\n            if (engine.canSignMessages) {\n              _context9.next = 6;\n              break;\n            }\n\n            throw new Error(errorMessage);\n\n          case 6:\n            if (!engine.isEthersProviderPresent) {\n              _context9.next = 15;\n              break;\n            }\n\n            _context9.next = 9;\n            return engine.originalProvider.send(payload.method, payload.params);\n\n          case 9:\n            responseFromProvider = _context9.sent;\n\n            _logMessage(\"Response from original provider\", responseFromProvider);\n\n            callback(null, responseFromProvider);\n            return _context9.abrupt(\"return\", responseFromProvider);\n\n          case 15:\n            return _context9.abrupt(\"return\", engine.originalProvider.send(payload, callback));\n\n          case 16:\n            _context9.next = 19;\n            break;\n\n          case 18:\n            throw new Error(\"Original provider not present in Biconomy\");\n\n          case 19:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _callDefaultProvider.apply(this, arguments);\n}\n\nfunction _getEIP712ForwardMessageToSign(request) {\n  if (!forwarderDomainType || !forwardRequestType || !forwarderDomainData) {\n    throw new Error(\"Biconomy is not properly initialized\");\n  }\n\n  var dataToSign = JSON.stringify({\n    types: {\n      EIP712Domain: forwarderDomainType,\n      ERC20ForwardRequest: forwardRequestType\n    },\n    domain: forwarderDomainData,\n    primaryType: \"ERC20ForwardRequest\",\n    message: request\n  });\n  return dataToSign;\n}\n\nfunction _getPersonalForwardMessageToSign(request) {\n  return abi.soliditySHA3([\"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"bytes32\"], [request.from, request.to, request.token, request.txGas, request.tokenGasPrice, request.batchId, request.batchNonce, request.deadline, ethers.utils.keccak256(request.data)]);\n}\n\nfunction getTargetProvider(engine) {\n  var provider;\n\n  if (engine) {\n    provider = engine.originalProvider;\n\n    if (!engine.canSignMessages) {\n      if (!engine.walletProvider) {\n        throw new Error(\"Please pass a provider connected to a wallet that can sign messages in Biconomy options.\");\n      }\n\n      provider = engine.walletProvider;\n    }\n  }\n\n  return provider;\n}\n\nfunction getSignatureParameters(signature) {\n  if (!ethers.utils.isHexString(signature)) {\n    throw new Error('Given value \"'.concat(signature, '\" is not a valid hex string.'));\n  }\n\n  var r = signature.slice(0, 66);\n  var s = \"0x\".concat(signature.slice(66, 130));\n  var v = \"0x\".concat(signature.slice(130, 132));\n  v = ethers.BigNumber.from(v).toNumber();\n  if (![27, 28].includes(v)) v += 27;\n  return {\n    r: r,\n    s: s,\n    v: v\n  };\n} //take parameter for chosen signature type V3 or V4\n\n\nfunction getSignatureEIP712(engine, account, request) {\n  //default V4 now   \n  var signTypedDataType = \"eth_signTypedData_v4\";\n\n  var dataToSign = _getEIP712ForwardMessageToSign(request);\n\n  var targetProvider = getTargetProvider(engine);\n\n  if (!targetProvider) {\n    throw new Error(\"Unable to get provider information passed to Biconomy\");\n  }\n\n  var promise = new Promise( /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(resolve, reject) {\n      var signature, _getSignatureParamete, r, s, v, newSignature;\n\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!targetProvider) {\n                _context4.next = 21;\n                break;\n              }\n\n              if (!isEthersProvider(targetProvider)) {\n                _context4.next = 17;\n                break;\n              }\n\n              _context4.prev = 2;\n              _context4.next = 5;\n              return targetProvider.send(signTypedDataType, [account, dataToSign]);\n\n            case 5:\n              signature = _context4.sent;\n              _getSignatureParamete = getSignatureParameters(signature), r = _getSignatureParamete.r, s = _getSignatureParamete.s, v = _getSignatureParamete.v;\n              v = ethers.BigNumber.from(v).toHexString();\n              newSignature = r + s.slice(2) + v.slice(2);\n              resolve(newSignature);\n              _context4.next = 15;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](2);\n              reject(_context4.t0);\n\n            case 15:\n              _context4.next = 19;\n              break;\n\n            case 17:\n              _context4.next = 19;\n              return targetProvider.send({\n                jsonrpc: \"2.0\",\n                id: 999999999999,\n                method: signTypedDataType,\n                params: [account, dataToSign]\n              }, function (error, res) {\n                if (error) {\n                  reject(error);\n                } else {\n                  var oldSignature = res.result;\n\n                  var _getSignatureParamete2 = getSignatureParameters(oldSignature),\n                      _r = _getSignatureParamete2.r,\n                      _s = _getSignatureParamete2.s,\n                      _v = _getSignatureParamete2.v;\n\n                  _v = ethers.BigNumber.from(_v).toHexString();\n\n                  var _newSignature = _r + _s.slice(2) + _v.slice(2);\n\n                  resolve(_newSignature);\n                }\n              });\n\n            case 19:\n              _context4.next = 22;\n              break;\n\n            case 21:\n              reject(\"Could not get signature from the provider passed to Biconomy. Check if you have passed a walletProvider in Biconomy Options.\");\n\n            case 22:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 12]]);\n    }));\n\n    return function (_x15, _x16) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n  return promise;\n}\n\nfunction getSignaturePersonal(_x17, _x18) {\n  return _getSignaturePersonal.apply(this, arguments);\n} // On getting smart contract data get the API data also\n\n\nfunction _getSignaturePersonal() {\n  _getSignaturePersonal = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(engine, req) {\n    var hashToSign, signature, targetProvider, providerWithSigner, signer, promise;\n    return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            hashToSign = _getPersonalForwardMessageToSign(req);\n\n            if (!(!engine.signer && !engine.walletProvider)) {\n              _context11.next = 3;\n              break;\n            }\n\n            throw new Error(\"Can't sign messages with current provider. Did you forget to pass walletProvider in Biconomy options?\");\n\n          case 3:\n            targetProvider = getTargetProvider(engine);\n\n            if (targetProvider) {\n              _context11.next = 6;\n              break;\n            }\n\n            throw new Error(\"Unable to get provider information passed to Biconomy\");\n\n          case 6:\n            if (isEthersProvider(targetProvider)) {\n              providerWithSigner = targetProvider;\n            } else {\n              providerWithSigner = new ethers.providers.Web3Provider(targetProvider);\n            }\n\n            signer = providerWithSigner.getSigner();\n            promise = new Promise( /*#__PURE__*/function () {\n              var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(resolve, reject) {\n                return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.prev = 0;\n                        _context10.next = 3;\n                        return signer.signMessage(ethers.utils.arrayify(hashToSign));\n\n                      case 3:\n                        signature = _context10.sent;\n                        resolve(signature);\n                        _context10.next = 10;\n                        break;\n\n                      case 7:\n                        _context10.prev = 7;\n                        _context10.t0 = _context10[\"catch\"](0);\n                        reject(_context10.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[0, 7]]);\n              }));\n\n              return function (_x31, _x32) {\n                return _ref8.apply(this, arguments);\n              };\n            }());\n            return _context11.abrupt(\"return\", promise);\n\n          case 10:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _getSignaturePersonal.apply(this, arguments);\n}\n\neventEmitter.on(EVENTS.SMART_CONTRACT_DATA_READY, function (dappId, engine) {\n  // Get DApp API information from Database\n  var getAPIInfoAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/meta-api\");\n  fetch(getAPIInfoAPI, getFetchOptions(\"GET\", engine.apiKey)).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response && response.listApis) {\n      var apiList = response.listApis;\n\n      for (var i = 0; i < apiList.length; i++) {\n        var contractAddress = apiList[i].contractAddress; // TODO: In case of SCW(Smart Contract Wallet) there'll be no contract address. Save SCW as key in that case.\n\n        if (contractAddress) {\n          if (!engine.dappAPIMap[contractAddress]) {\n            engine.dappAPIMap[contractAddress] = {};\n          }\n\n          engine.dappAPIMap[contractAddress][apiList[i].method] = apiList[i];\n        } else {\n          if (!engine.dappAPIMap[config.SCW]) {\n            engine.dappAPIMap[config.SCW] = {};\n          }\n\n          engine.dappAPIMap[config.SCW][apiList[i].method] = apiList[i];\n        }\n      }\n\n      eventEmitter.emit(EVENTS.DAPP_API_DATA_READY, engine);\n    }\n  })[\"catch\"](function (error) {\n    _logMessage(error);\n  });\n});\neventEmitter.on(EVENTS.HELPER_CLENTS_READY, /*#__PURE__*/function () {\n  var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(engine) {\n    var biconomyAttributes, ethersProvider, signer, signerOrProvider, isSignerWithAccounts, erc20ForwarderAddress, transferHandlerAddress, erc20Forwarder, oracleAggregatorAddress, feeManagerAddress, forwarderAddress, oracleAggregator, feeManager, forwarder, transferHandler, tokenGasPriceV1SupportedNetworks;\n    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            biconomyAttributes = {\n              apiKey: engine.apiKey,\n              dappAPIMap: engine.dappAPIMap,\n              decoderMap: decoderMap,\n              signType: {\n                EIP712_SIGN: engine.EIP712_SIGN,\n                PERSONAL_SIGN: engine.PERSONAL_SIGN\n              }\n            };\n\n            if (engine.isEthersProviderPresent) {\n              ethersProvider = engine.originalProvider;\n            } else {\n              ethersProvider = new ethers.providers.Web3Provider(engine.originalProvider);\n            }\n\n            signer = ethersProvider.getSigner();\n            signerOrProvider = signer;\n            isSignerWithAccounts = true;\n            _context5.prev = 6;\n            _context5.next = 9;\n            return signer.getAddress();\n\n          case 9:\n            engine.canSignMessages = true;\n            _context5.next = 18;\n            break;\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](6);\n\n            _logMessage(\"Given provider does not have accounts information\");\n\n            signerOrProvider = ethersProvider;\n            isSignerWithAccounts = false;\n            engine.canSignMessages = false;\n\n          case 18:\n            erc20ForwarderAddress = engine.options.erc20ForwarderAddress || engine.erc20ForwarderAddress;\n            transferHandlerAddress = engine.options.transferHandlerAddress || engine.transferHandlerAddress;\n\n            if (!erc20ForwarderAddress) {\n              _context5.next = 42;\n              break;\n            }\n\n            erc20Forwarder = new ethers.Contract(erc20ForwarderAddress, erc20ForwarderAbi, signerOrProvider);\n            _context5.next = 24;\n            return erc20Forwarder.oracleAggregator();\n\n          case 24:\n            oracleAggregatorAddress = _context5.sent;\n            _context5.next = 27;\n            return erc20Forwarder.feeManager();\n\n          case 27:\n            feeManagerAddress = _context5.sent;\n            _context5.next = 30;\n            return erc20Forwarder.forwarder();\n\n          case 30:\n            forwarderAddress = _context5.sent;\n            oracleAggregator = new ethers.Contract(oracleAggregatorAddress, oracleAggregatorAbi, signerOrProvider);\n            feeManager = new ethers.Contract(feeManagerAddress, feeManagerAbi, signerOrProvider); //If ERC20 Forwarder Address exits then it would have configured Forwarder \n\n            forwarder = new ethers.Contract(forwarderAddress, biconomyForwarderAbi, signerOrProvider);\n            transferHandler = new ethers.Contract(transferHandlerAddress, transferHandlerAbi, signerOrProvider);\n            tokenGasPriceV1SupportedNetworks = engine.tokenGasPriceV1SupportedNetworks;\n            engine.permitClient = new PermitClient(engine, erc20ForwarderAddress, engine.daiTokenAddress);\n            engine.erc20ForwarderClient = new ERC20ForwarderClient({\n              forwarderClientOptions: biconomyAttributes,\n              networkId: engine.networkId,\n              provider: ethersProvider,\n              forwarderDomainData: forwarderDomainData,\n              forwarderDomainType: forwarderDomainType,\n              erc20Forwarder: erc20Forwarder,\n              transferHandler: transferHandler,\n              forwarder: forwarder,\n              oracleAggregator: oracleAggregator,\n              feeManager: feeManager,\n              isSignerWithAccounts: isSignerWithAccounts,\n              tokenGasPriceV1SupportedNetworks: tokenGasPriceV1SupportedNetworks,\n              trustedForwarderOverhead: trustedForwarderOverhead,\n              daiPermitOverhead: daiPermitOverhead,\n              eip2612PermitOverhead: eip2612PermitOverhead\n            });\n\n            _logMessage(engine.permitClient);\n\n            _logMessage(engine.erc20ForwarderClient);\n\n            _context5.next = 43;\n            break;\n\n          case 42:\n            _logMessage(\"ERC20 Forwarder is not supported for this network\");\n\n          //Warning : you would not be able to use ERC20ForwarderClient and PermitClient \n\n          case 43:\n            engine.status = STATUS.BICONOMY_READY;\n            eventEmitter.emit(STATUS.BICONOMY_READY);\n            _context5.next = 50;\n            break;\n\n          case 47:\n            _context5.prev = 47;\n            _context5.t1 = _context5[\"catch\"](0);\n\n            _logMessage(_context5.t1);\n\n          case 50:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 47], [6, 12]]);\n  }));\n\n  return function (_x19) {\n    return _ref5.apply(this, arguments);\n  };\n}());\neventEmitter.on(EVENTS.DAPP_API_DATA_READY, function (engine) {\n  eventEmitter.emit(EVENTS.HELPER_CLENTS_READY, engine);\n});\n/**\n * Get user account from current provider using eth_accounts method.\n **/\n\nfunction _getUserAccount(engine, payload, cb) {\n  if (engine) {\n    var id = DEFAULT_PAYLOAD_ID;\n\n    if (payload) {\n      id = payload.id;\n    }\n\n    if (cb) {\n      engine.originalProvider.send({\n        jsonrpc: JSON_RPC_VERSION,\n        id: id,\n        method: \"eth_accounts\",\n        params: []\n      }, function (error, response) {\n        cb(error, response);\n      });\n    } else {\n      return new Promise(function (resolve, reject) {\n        engine.originalProvider.send({\n          jsonrpc: JSON_RPC_VERSION,\n          id: id,\n          method: \"eth_accounts\",\n          params: []\n        }, function (error, res) {\n          if (error) {\n            reject(error);\n          } else if (!res.result) {\n            reject(\"Invalid response \".concat(res));\n          } else {\n            resolve(res.result[0]);\n          }\n        });\n      });\n    }\n  }\n}\n/**\n * Validate parameters passed to biconomy object. Dapp id and api key are mandatory.\n **/\n\n\nfunction _validate(options) {\n  if (!options) {\n    throw new Error(\"Options object needs to be passed to Biconomy Object with apiKey as mandatory key\");\n  }\n\n  if (!options.apiKey) {\n    throw new Error(\"apiKey is required in options object when creating Biconomy object\");\n  }\n}\n/**\n * Get paramter value from param object based on its type.\n **/\n\n\nfunction _getParamValue(paramObj) {\n  var value;\n\n  try {\n    if (paramObj && paramObj.type == \"bytes\" && (!paramObj.value || paramObj.value == undefined || paramObj.value == null)) {\n      value = \"0x\";\n      return value;\n    }\n\n    if (paramObj && paramObj.value) {\n      var type = paramObj.type;\n\n      switch (type) {\n        //only int/uint 1D arrays\n        case (type.match(/^uint.*\\[\\]^\\[$/) || type.match(/^int.*\\[\\]^\\[$/) || {}).input:\n          var val = paramObj.value;\n          value = [];\n\n          for (var j = 0; j < val.length; j++) {\n            value[j] = scientificToDecimal(val[j]);\n            if (value[j]) value[j] = ethers.BigNumber.from(value[j]).toHexString();\n          }\n\n          break;\n        //only int/uint 2D arrays  \n\n        case (type.match(/^uint.*\\[\\]\\[\\]$/) || type.match(/^int.*\\[\\]\\[\\]$/) || {}).input:\n          //verify if its altually alright to return as it is!\n          //value = paramObj.value;\n          //break;\n          var multiArray = paramObj.value;\n          value = new Array();\n\n          for (var _j = 0; _j < multiArray.length; _j++) {\n            var innerArray = multiArray[_j];\n\n            for (var k = 0; k < innerArray.length; k++) {\n              var newInnerArray = new Array();\n              newInnerArray[k] = scientificToDecimal(innerArray[k]);\n              if (newInnerArray[k]) newInnerArray[k] = ethers.BigNumber.from(newInnerArray[k]).toHexString();\n            }\n\n            value.push(newInnerArray);\n          }\n\n          break;\n        //only uint/int \n\n        case (type.match(/^uint[0-9]*$/) || type.match(/^int[0-9]*$/) || {}).input:\n          value = scientificToDecimal(paramObj.value); //https://docs.ethers.io/v5/api/utils/bignumber/#BigNumber--notes\n\n          if (value) value = ethers.BigNumber.from(value).toHexString();\n          break;\n\n        case \"string\":\n          if ((0, _typeof2[\"default\"])(paramObj.value) === \"object\") {\n            value = paramObj.value.toString();\n          } else {\n            value = paramObj.value;\n          }\n\n          break;\n\n        default:\n          value = paramObj.value;\n          break;\n      }\n    }\n\n    return value;\n  } catch (error) {\n    _logMessage(error);\n\n    throw new Error(\"Error occured while sanitizing paramters. Please verify your method parameters or contact support\");\n  }\n}\n/**\n * Method to send the transaction to biconomy server and call the callback method\n * to pass the result of meta transaction to web3 function call.\n * @param engine Object representing biconomy provider engine\n * @param account User selected account on current wallet\n * @param api API object got from biconomy server\n * @param data Data to be sent to biconomy server having transaction data\n * @param cb Callback method to be called to pass result or send error\n **/\n\n\nfunction _sendTransaction(_x20, _x21, _x22, _x23, _x24) {\n  return _sendTransaction2.apply(this, arguments);\n}\n/**\n * Function to initialize the biconomy object with DApp information.\n * It fetches the dapp's smart contract from biconomy database and initialize the decoders for each smart\n * contract which will be used to decode information during function calls.\n * @param dappId Id for dapp whos information is to be fetched\n * @param apiKey API key used to authenticate the request at biconomy server\n * @param _this object representing biconomy provider\n **/\n\n\nfunction _sendTransaction2() {\n  _sendTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(engine, account, api, data, cb) {\n    var url, fetchOption;\n    return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            if (engine && account && api && data) {\n              url = api.url;\n              fetchOption = getFetchOptions(\"POST\", engine.apiKey);\n              fetchOption.body = JSON.stringify(data);\n              fetch(\"\".concat(baseURL).concat(url), fetchOption).then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                _logMessage(result);\n\n                if (!result.txHash && result.flag != BICONOMY_RESPONSE_CODES.ACTION_COMPLETE && result.flag != BICONOMY_RESPONSE_CODES.SUCCESS) {\n                  var error = {};\n                  error.code = result.flag || result.code;\n\n                  if (result.flag == BICONOMY_RESPONSE_CODES.USER_CONTRACT_NOT_FOUND) {\n                    error.code = RESPONSE_CODES.USER_CONTRACT_NOT_FOUND;\n                  }\n\n                  error.message = result.log || result.message;\n                  if (cb) cb(error);\n                } else {\n                  if (cb) cb(null, result.txHash);\n                }\n              })[\"catch\"](function (error) {\n                _logMessage(error);\n\n                if (cb) cb(error);\n              });\n            } else {\n              _logMessage(\"Invalid arguments, provider: \".concat(engine, \" account: \").concat(account, \" api: \").concat(api, \" data: \").concat(data));\n\n              if (cb) cb(\"Invalid arguments, provider: \".concat(engine, \" account: \").concat(account, \" api: \").concat(api, \" data: \").concat(data), null);\n            }\n\n          case 1:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _sendTransaction2.apply(this, arguments);\n}\n\nfunction _init(_x25, _x26) {\n  return _init2.apply(this, arguments);\n}\n\nfunction _init2() {\n  _init2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(apiKey, engine) {\n    var getDappAPI;\n    return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.prev = 0;\n            _context14.next = 3;\n            return engine.ethersProvider.getSigner();\n\n          case 3:\n            engine.signer = _context14.sent; // Check current network id and dapp network id registered on dashboard\n\n            getDappAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/dapp\");\n            fetch(getDappAPI, getFetchOptions(\"GET\", apiKey)).then(function (response) {\n              return response.json();\n            }).then( /*#__PURE__*/function () {\n              var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(dappResponse) {\n                var dappNetworkId, dappId, getNetworkIdOption, providerNetworkId;\n                return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        _logMessage(dappResponse);\n\n                        if (!(dappResponse && dappResponse.dapp)) {\n                          _context13.next = 21;\n                          break;\n                        }\n\n                        dappNetworkId = dappResponse.dapp.networkId;\n                        dappId = dappResponse.dapp._id;\n\n                        _logMessage(\"Network id corresponding to dapp id \".concat(dappId, \" is \").concat(dappNetworkId));\n\n                        getNetworkIdOption = {\n                          jsonrpc: JSON_RPC_VERSION,\n                          id: \"102\",\n                          method: \"eth_chainId\",\n                          params: []\n                        };\n\n                        if (!isEthersProvider(engine.originalProvider)) {\n                          _context13.next = 18;\n                          break;\n                        }\n\n                        _context13.next = 9;\n                        return engine.originalProvider.send(\"eth_chainId\", []);\n\n                      case 9:\n                        providerNetworkId = _context13.sent;\n\n                        if (!providerNetworkId) {\n                          _context13.next = 15;\n                          break;\n                        }\n\n                        providerNetworkId = parseInt(providerNetworkId.toString());\n                        onNetworkId(engine, {\n                          providerNetworkId: providerNetworkId,\n                          dappNetworkId: dappNetworkId,\n                          apiKey: apiKey,\n                          dappId: dappId\n                        });\n                        _context13.next = 16;\n                        break;\n\n                      case 15:\n                        return _context13.abrupt(\"return\", eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_NOT_FOUND, \"Could not get network version\"), \"Could not get network version\"));\n\n                      case 16:\n                        _context13.next = 19;\n                        break;\n\n                      case 18:\n                        engine.originalProvider.send(getNetworkIdOption, function (error, networkResponse) {\n                          if (error || networkResponse && networkResponse.error) {\n                            return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_NOT_FOUND, \"Could not get network version\"), error || networkResponse.error);\n                          } else {\n                            var _providerNetworkId = parseInt(networkResponse.result.toString());\n\n                            onNetworkId(engine, {\n                              providerNetworkId: _providerNetworkId,\n                              dappNetworkId: dappNetworkId,\n                              apiKey: apiKey,\n                              dappId: dappId\n                            });\n                          }\n                        });\n\n                      case 19:\n                        _context13.next = 22;\n                        break;\n\n                      case 21:\n                        if (dappResponse.log) {\n                          eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, dappResponse.log));\n                        } else {\n                          eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.DAPP_NOT_FOUND, \"No Dapp Registered with apikey \".concat(apiKey)));\n                        }\n\n                      case 22:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee13);\n              }));\n\n              return function (_x33) {\n                return _ref9.apply(this, arguments);\n              };\n            }())[\"catch\"](function (error) {\n              eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), error);\n            });\n            _context14.next = 11;\n            break;\n\n          case 8:\n            _context14.prev = 8;\n            _context14.t0 = _context14[\"catch\"](0);\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), _context14.t0);\n\n          case 11:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[0, 8]]);\n  }));\n  return _init2.apply(this, arguments);\n}\n\nfunction isEthersProvider(provider) {\n  return ethers.providers.Provider.isProvider(provider);\n}\n\nfunction onNetworkId(_x27, _x28) {\n  return _onNetworkId.apply(this, arguments);\n}\n\nfunction _onNetworkId() {\n  _onNetworkId = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(engine, _ref6) {\n    var providerNetworkId, dappNetworkId, apiKey, dappId;\n    return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            providerNetworkId = _ref6.providerNetworkId, dappNetworkId = _ref6.dappNetworkId, apiKey = _ref6.apiKey, dappId = _ref6.dappId;\n            engine.networkId = providerNetworkId;\n\n            _logMessage(\"Current provider network id: \".concat(providerNetworkId));\n\n            if (!(providerNetworkId != dappNetworkId)) {\n              _context15.next = 7;\n              break;\n            }\n\n            return _context15.abrupt(\"return\", eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_MISMATCH, \"Current networkId \".concat(providerNetworkId, \" is different from dapp network id registered on mexa dashboard \").concat(dappNetworkId))));\n\n          case 7:\n            domainData.chainId = providerNetworkId;\n            daiDomainData.chainId = providerNetworkId;\n            fetch(\"\".concat(baseURL, \"/api/\").concat(config.version2, \"/meta-tx/systemInfo?networkId=\").concat(providerNetworkId)).then(function (response) {\n              return response.json();\n            }).then(function (systemInfo) {\n              if (systemInfo) {\n                domainType = systemInfo.domainType;\n                forwarderDomainType = systemInfo.forwarderDomainType;\n                metaInfoType = systemInfo.metaInfoType;\n                relayerPaymentType = systemInfo.relayerPaymentType;\n                metaTransactionType = systemInfo.metaTransactionType;\n                loginDomainType = systemInfo.loginDomainType;\n                loginMessageType = systemInfo.loginMessageType;\n                loginDomainData = systemInfo.loginDomainData;\n                forwardRequestType = systemInfo.forwardRequestType;\n                forwarderDomainData = systemInfo.forwarderDomainData;\n                trustedForwarderOverhead = systemInfo.overHeadEIP712Sign;\n                daiPermitOverhead = systemInfo.overHeadDaiPermit;\n                eip2612PermitOverhead = systemInfo.overHeadEIP2612Permit;\n                engine.forwarderAddress = systemInfo.biconomyForwarderAddress;\n                engine.erc20ForwarderAddress = systemInfo.erc20ForwarderAddress;\n                engine.transferHandlerAddress = systemInfo.transferHandlerAddress;\n                engine.daiTokenAddress = systemInfo.daiTokenAddress;\n                engine.usdtTokenAddress = systemInfo.usdtTokenAddress;\n                engine.usdcTokenAddress = systemInfo.usdcTokenAddress;\n                engine.TRUSTED_FORWARDER = systemInfo.trustedForwarderMetaTransaction;\n                engine.ERC20_FORWARDER = systemInfo.erc20ForwarderMetaTransaction;\n                engine.DEFAULT = systemInfo.defaultMetaTransaction;\n                engine.EIP712_SIGN = systemInfo.eip712Sign;\n                engine.PERSONAL_SIGN = systemInfo.personalSign;\n                engine.tokenGasPriceV1SupportedNetworks = systemInfo.tokenGasPriceV1SupportedNetworks;\n                daiDomainData.verifyingContract = engine.daiTokenAddress;\n\n                if (systemInfo.relayHubAddress) {\n                  domainData.verifyingContract = systemInfo.relayHubAddress;\n                }\n              } else {\n                return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.INVALID_DATA, \"Could not get signature types from server. Contact Biconomy Team\"));\n              } // check if Valid trusted forwarder address is present from system info\n\n\n              if (engine.forwarderAddress && engine.forwarderAddress != \"\") {\n                biconomyForwarder = new ethers.Contract(engine.forwarderAddress, biconomyForwarderAbi, engine.ethersProvider);\n              } // Get dapps smart contract data from biconomy servers\n\n\n              var getDAppInfoAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/smart-contract\");\n              fetch(getDAppInfoAPI, getFetchOptions(\"GET\", apiKey)).then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                if (!result && result.flag != 143) {\n                  return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"Error getting smart contract for dappId \".concat(dappId)));\n                }\n\n                var smartContractList = result.smartContracts;\n\n                if (smartContractList && smartContractList.length > 0) {\n                  smartContractList.forEach(function (contract) {\n                    var abiDecoder = require(\"abi-decoder\");\n\n                    if (contract.type === config.SCW) {\n                      smartContractMetaTransactionMap[config.SCW] = contract.metaTransactionType;\n                      abiDecoder.addABI(JSON.parse(contract.abi));\n                      decoderMap[config.SCW] = abiDecoder;\n                      smartContractMap[config.SCW] = contract.abi;\n                    } else {\n                      smartContractMetaTransactionMap[contract.address.toLowerCase()] = contract.metaTransactionType;\n                      abiDecoder.addABI(JSON.parse(contract.abi));\n                      decoderMap[contract.address.toLowerCase()] = abiDecoder;\n                      smartContractMap[contract.address.toLowerCase()] = contract.abi;\n                    }\n                  });\n\n                  _logMessage(smartContractMetaTransactionMap);\n\n                  _checkUserLogin(engine, dappId);\n                } else {\n                  if (engine.strictMode) {\n                    engine.status = STATUS.NO_DATA;\n                    eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"No smart contract registered for dappId \".concat(dappId, \" on Mexa Dashboard\")));\n                  } else {\n                    _checkUserLogin(engine, dappId);\n                  }\n                }\n              })[\"catch\"](function (error) {\n                eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), error);\n              });\n            });\n\n          case 10:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _onNetworkId.apply(this, arguments);\n}\n\nfunction _checkUserLogin(_x29, _x30) {\n  return _checkUserLogin2.apply(this, arguments);\n}\n\nfunction _checkUserLogin2() {\n  _checkUserLogin2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16(engine, dappId) {\n    return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            eventEmitter.emit(EVENTS.SMART_CONTRACT_DATA_READY, dappId, engine);\n\n          case 1:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n  return _checkUserLogin2.apply(this, arguments);\n}\n\nBiconomy.prototype.isReady = function () {\n  return this.status === STATUS.BICONOMY_READY;\n};\n\nBiconomy.prototype.getUserAccount = /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6() {\n  return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _getUserAccount(this);\n\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6, this);\n}));\n\nfunction getFetchOptions(method, apiKey) {\n  return {\n    method: method,\n    headers: {\n      \"x-api-key\": apiKey,\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  };\n}\n\nfunction formatMessage(code, message) {\n  return {\n    code: code,\n    message: message\n  };\n}\n/**\n * Single method to be used for logging purpose.\n *\n * @param {string} message Message to be logged\n */\n\n\nfunction _logMessage(message) {\n  if (config && config.logsEnabled && console.log) {\n    console.log(message);\n  }\n}\n\nvar scientificToDecimal = function scientificToDecimal(num) {\n  var result; // If the number is not in scientific notation return it as it is.\n\n  if (!/\\d+\\.?\\d*e[+-]*\\d+/i.test(num)) {\n    result = num.toLocaleString('fullwide', {\n      useGrouping: false\n    });\n    return result.toString();\n  }\n\n  var nsign = Math.sign(Number(num)); // remove the sign\n\n  num = Math.abs(Number(num)).toString(); // if the number is in scientific notation remove it\n\n  var zero = \"0\",\n      parts = String(num).toLowerCase().split(\"e\"),\n      // split into coeff and exponent\n  e = parts.pop(),\n      // store the exponential part\n  l = Math.abs(e),\n      // get the number of zeros\n  sign = e / l,\n      coeff_array = parts[0].split(\".\");\n\n  if (sign === -1) {\n    l = l - coeff_array[0].length;\n\n    if (l < 0) {\n      num = coeff_array[0].slice(0, l) + \".\" + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : \"\");\n    } else {\n      num = zero + \".\" + new Array(l + 1).join(zero) + coeff_array.join(\"\");\n    }\n  } else {\n    var dec = coeff_array[1];\n    if (dec) l = l - dec.length;\n\n    if (l < 0) {\n      num = coeff_array[0] + dec.slice(0, l) + \".\" + dec.slice(l);\n    } else {\n      num = coeff_array.join(\"\") + new Array(l + 1).join(zero);\n    }\n  }\n\n  result = nsign < 0 ? \"-\" + num : num;\n  return result.toString();\n};\n\nmodule.exports = Biconomy;","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/node_modules/@biconomy/mexa/common-js/Biconomy.js"],"names":["_interopRequireDefault","require","_regenerator","_typeof2","_asyncToGenerator2","Promise","ethers","txDecoder","abi","_require","toJSONRPCPayload","_require2","config","RESPONSE_CODES","EVENTS","BICONOMY_RESPONSE_CODES","STATUS","DEFAULT_PAYLOAD_ID","baseURL","JSON_RPC_VERSION","NATIVE_META_TX_URL","nativeMetaTxUrl","PermitClient","ERC20ForwarderClient","_require3","buildForwardTxRequest","getDomainSeperator","_require4","erc20ForwarderAbi","oracleAggregatorAbi","feeManagerAbi","biconomyForwarderAbi","transferHandlerAbi","fetch","decoderMap","smartContractMap","smartContractMetaTransactionMap","biconomyForwarder","events","eventEmitter","EventEmitter","trustedForwarderOverhead","daiPermitOverhead","eip2612PermitOverhead","domainType","forwarderDomainType","metaInfoType","relayerPaymentType","metaTransactionType","forwardRequestType","domainData","name","eip712DomainName","version","eip712SigVersion","verifyingContract","eip712VerifyingContract","daiDomainData","daiDomainName","daiVersion","forwarderDomainData","loginDomainType","loginMessageType","loginDomainData","Biconomy","provider","options","_validate","isBiconomy","status","INIT","apiKey","isLogin","dappAPIMap","strictMode","providerId","readViaContract","READY","BICONOMY_READY","LOGIN_CONFIRMATION","ERROR","BICONOMY_ERROR","pendingLoginTransactions","jsonRPC","messageId","originalProvider","isEthersProviderPresent","canSignMessages","debug","logsEnabled","walletProvider","isEthersProvider","Error","providers","Web3Provider","ethersProvider","_init","proto","Object","getPrototypeOf","keys","getOwnPropertyNames","i","length","key","self","send","payload","cb","_this","id","jsonrpc","method","params","resolve","reject","handleSendTransaction","error","result","response","_createJsonRpcResponse","sendSignedTransaction","request","args","_logMessage","_ref","mark","_callee","jsonRPCPaylod","localResult","wrap","_callee$","_context","prev","next","sent","t0","err","stop","_x","_x2","apply","arguments","sendAsync","prototype","getSignerByAddress","userAddress","getEthersProvider","signer","getSigner","connectUnchecked","getAddress","_callee2","_callee2$","_context2","abrupt","getForwardRequestAndMessageToSign","rawTransaction","tokenAddress","customBatchId","engine","_ref3","_callee3","decodedTx","to","methodInfo","methodName","token","api","metaTxApproach","contractAddr","_error","typeString","paramArray","parsedTransaction","account","gasLimit","gasLimitNum","contractABI","contract","methodSignature","_contract$estimateGas","_error2","cost","buildTxResponse","_error3","eip712DataToSign","hashToSign","dataToSign","_error4","_callee3$","_context3","decodeTx","data","value","toLowerCase","decodeMethod","formatMessage","DASHBOARD_DATA_MISMATCH","concat","daiTokenAddress","undefined","SCW","contractAddress","API_NOT_FOUND","push","_getParamValue","type","toString","substring","utils","parseTransaction","from","parseInt","Contract","JSON","parse","estimateGas","BigNumber","add","toNumber","ERROR_RESPONSE","end","TRUSTED_FORWARDER","ERC20_FORWARDER","erc20ForwarderClient","buildTx","txGas","INVALID_OPERATION","types","EIP712Domain","ERC20ForwardRequest","domain","primaryType","message","soliditySHA3","tokenGasPrice","batchId","batchNonce","deadline","keccak256","eip712Format","personalSignatureFormat","BICONOMY_NOT_INITIALIZED","_x3","_x4","onEvent","callback","on","EVENT_NOT_SUPPORTED","isHexString","_x5","_x6","_x7","_sendSignedTransaction","_callee7","signature","signatureType","_error5","_error6","forwardedData","paramArrayForGasCalculation","_contract$estimateGas2","domainSeparator","_data","_i","_data2","relayerPayment","_data3","_error7","_error8","_error9","_error10","_callee7$","_context7","forwardRequest","callDefaultProvider","url","DEFAULT","EIP712_SIGN","apiId","_sendTransaction","DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS","amount","DEFAULT_RELAYER_PAYMENT_AMOUNT","rawTx","hexValue","nonceBatchId","NONCE_BATCH_ID","expiry","EXPIRY","baseGas","BASE_GAS","INVALID_PAYLOAD","stringify","emit","_x8","_x9","_x10","_handleSendTransaction","_callee8","_error11","_error12","signatureFromPayload","_contract$estimateGas3","_error13","signatureEIP712","signaturePersonal","_i2","_data4","_error14","_error15","_error16","_callee8$","_context8","code","WRONG_ABI","gas","SMART_CONTRACT_NOT_FOUND","Number","getSignatureEIP712","getSignaturePersonal","_x11","_x12","_x13","_x14","_callDefaultProvider","_callee9","errorMessage","targetProvider","responseFromProvider","_callee9$","_context9","_getEIP712ForwardMessageToSign","_getPersonalForwardMessageToSign","getTargetProvider","getSignatureParameters","r","slice","s","v","includes","signTypedDataType","promise","_ref4","_callee4","_getSignatureParamete","newSignature","_callee4$","_context4","toHexString","res","oldSignature","_getSignatureParamete2","_r","_s","_v","_newSignature","_x15","_x16","_x17","_x18","_getSignaturePersonal","_callee11","req","providerWithSigner","_callee11$","_context11","_ref8","_callee10","_callee10$","_context10","signMessage","arrayify","_x31","_x32","SMART_CONTRACT_DATA_READY","dappId","getAPIInfoAPI","getFetchOptions","then","json","listApis","apiList","DAPP_API_DATA_READY","HELPER_CLENTS_READY","_ref5","_callee5","biconomyAttributes","signerOrProvider","isSignerWithAccounts","erc20ForwarderAddress","transferHandlerAddress","erc20Forwarder","oracleAggregatorAddress","feeManagerAddress","forwarderAddress","oracleAggregator","feeManager","forwarder","transferHandler","tokenGasPriceV1SupportedNetworks","_callee5$","_context5","signType","PERSONAL_SIGN","permitClient","forwarderClientOptions","networkId","t1","_x19","_getUserAccount","paramObj","match","input","val","j","scientificToDecimal","multiArray","Array","_j","innerArray","k","newInnerArray","_x20","_x21","_x22","_x23","_x24","_sendTransaction2","_callee12","fetchOption","_callee12$","_context12","body","txHash","flag","ACTION_COMPLETE","SUCCESS","USER_CONTRACT_NOT_FOUND","log","_x25","_x26","_init2","_callee14","getDappAPI","_callee14$","_context14","_ref9","_callee13","dappResponse","dappNetworkId","getNetworkIdOption","providerNetworkId","_callee13$","_context13","dapp","_id","onNetworkId","NETWORK_ID_NOT_FOUND","networkResponse","_providerNetworkId","DAPP_NOT_FOUND","_x33","Provider","isProvider","_x27","_x28","_onNetworkId","_callee15","_ref6","_callee15$","_context15","NETWORK_ID_MISMATCH","chainId","version2","systemInfo","overHeadEIP712Sign","overHeadDaiPermit","overHeadEIP2612Permit","biconomyForwarderAddress","usdtTokenAddress","usdcTokenAddress","trustedForwarderMetaTransaction","erc20ForwarderMetaTransaction","defaultMetaTransaction","eip712Sign","personalSign","relayHubAddress","INVALID_DATA","getDAppInfoAPI","smartContractList","smartContracts","forEach","abiDecoder","addABI","address","_checkUserLogin","NO_DATA","_x29","_x30","_checkUserLogin2","_callee16","_callee16$","_context16","isReady","getUserAccount","_callee6","_callee6$","_context6","headers","console","num","test","toLocaleString","useGrouping","nsign","Math","sign","abs","zero","parts","String","split","e","pop","l","coeff_array","join","dec","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar Promise = require(\"promise\");\n\nvar ethers = require(\"ethers\");\n\nvar txDecoder = require(\"ethereum-tx-decoder\");\n\nvar abi = require(\"ethereumjs-abi\");\n\nvar _require = require(\"./util\"),\n    toJSONRPCPayload = _require.toJSONRPCPayload;\n\nvar _require2 = require(\"./config\"),\n    config = _require2.config,\n    RESPONSE_CODES = _require2.RESPONSE_CODES,\n    EVENTS = _require2.EVENTS,\n    BICONOMY_RESPONSE_CODES = _require2.BICONOMY_RESPONSE_CODES,\n    STATUS = _require2.STATUS;\n\nvar DEFAULT_PAYLOAD_ID = \"99999999\";\nvar baseURL = config.baseURL;\nvar JSON_RPC_VERSION = config.JSON_RPC_VERSION;\nvar NATIVE_META_TX_URL = config.nativeMetaTxUrl;\n\nvar PermitClient = require(\"./PermitClient\");\n\nvar ERC20ForwarderClient = require(\"./ERC20ForwarderClient\");\n\nvar _require3 = require(\"./biconomyforwarder\"),\n    buildForwardTxRequest = _require3.buildForwardTxRequest,\n    getDomainSeperator = _require3.getDomainSeperator;\n\nvar _require4 = require(\"./abis\"),\n    erc20ForwarderAbi = _require4.erc20ForwarderAbi,\n    oracleAggregatorAbi = _require4.oracleAggregatorAbi,\n    feeManagerAbi = _require4.feeManagerAbi,\n    biconomyForwarderAbi = _require4.biconomyForwarderAbi,\n    transferHandlerAbi = _require4.transferHandlerAbi;\n\nvar fetch = require(\"cross-fetch\");\n\nvar decoderMap = {},\n    smartContractMap = {},\n    // contract addresss -> contract attributes(metaTransactionType)\n// could be contract address -> contract object\nsmartContractMetaTransactionMap = {};\nvar biconomyForwarder;\n\nvar events = require(\"events\");\n\nvar eventEmitter = new events.EventEmitter();\nvar trustedForwarderOverhead;\nvar daiPermitOverhead;\nvar eip2612PermitOverhead;\nvar domainType, forwarderDomainType, metaInfoType, relayerPaymentType, metaTransactionType, forwardRequestType;\nvar domainData = {\n  name: config.eip712DomainName,\n  version: config.eip712SigVersion,\n  verifyingContract: config.eip712VerifyingContract\n};\nvar daiDomainData = {\n  name: config.daiDomainName,\n  version: config.daiVersion\n};\nvar forwarderDomainData; // EIP712 format data for login\n\nvar loginDomainType, loginMessageType, loginDomainData;\n\nfunction Biconomy(provider, options) {\n  _validate(options);\n\n  this.isBiconomy = true;\n  this.status = STATUS.INIT;\n  this.options = options;\n  this.apiKey = options.apiKey;\n  this.isLogin = false;\n  this.dappAPIMap = {};\n  this.strictMode = options.strictMode || false;\n  this.providerId = options.providerId || 0;\n  this.readViaContract = options.readViaContract || false;\n  this.READY = STATUS.BICONOMY_READY;\n  this.LOGIN_CONFIRMATION = EVENTS.LOGIN_CONFIRMATION;\n  this.ERROR = EVENTS.BICONOMY_ERROR;\n  this.pendingLoginTransactions = {};\n  this.jsonRPC = {\n    messageId: 0\n  };\n  this.originalProvider = provider;\n  this.isEthersProviderPresent = false;\n  this.canSignMessages = false;\n\n  if (options.debug) {\n    config.logsEnabled = true;\n  }\n\n  if (options.walletProvider) {\n    if (isEthersProvider(options.walletProvider)) {\n      throw new Error(\"Wallet Provider in options can't be an ethers provider. Please pass the provider you get from your wallet directly.\");\n    }\n\n    this.walletProvider = new ethers.providers.Web3Provider(options.walletProvider);\n  }\n\n  if (provider) {\n    if (isEthersProvider(provider)) {\n      this.ethersProvider = provider;\n      this.isEthersProviderPresent = true;\n    } else {\n      this.ethersProvider = new ethers.providers.Web3Provider(provider);\n    }\n\n    _init(this.apiKey, this);\n\n    var proto = Object.getPrototypeOf(provider);\n    var keys = Object.getOwnPropertyNames(proto);\n\n    for (var i = 0; i < keys.length; i++) {\n      this[keys[i]] = provider[keys[i]];\n    }\n\n    for (var key in provider) {\n      if (!this[key]) {\n        this[key] = provider[key];\n      }\n    }\n\n    var self = this;\n\n    this.send = function (payload, cb) {\n      var _this = this;\n\n      if (typeof payload === \"string\") {\n        // Ethers provider is being used to call methods, so payload is actually method, and cb is params\n        payload = {\n          id: 1,\n          jsonrpc: \"2.0\",\n          method: payload,\n          params: cb\n        };\n      }\n\n      if (payload.method == \"eth_sendTransaction\") {\n        return new Promise(function (resolve, reject) {\n          handleSendTransaction(_this, payload, function (error, result) {\n            var response = _this._createJsonRpcResponse(payload, error, result);\n\n            if (cb && !self.isEthersProviderPresent) {\n              cb(error, response);\n            }\n\n            if (response.error) {\n              reject(response.error);\n            } else {\n              resolve(response.result);\n            }\n          });\n        });\n      } else if (payload.method == \"eth_sendRawTransaction\") {\n        return new Promise(function (resolve, reject) {\n          sendSignedTransaction(_this, payload, function (error, result) {\n            var response = _this._createJsonRpcResponse(payload, error, result);\n\n            if (cb && !self.isEthersProviderPresent) {\n              cb(error, response);\n            }\n\n            if (response.error) {\n              reject(response.error);\n            } else {\n              resolve(response.result);\n            }\n          });\n        });\n      } else {\n        if (self.isEthersProviderPresent) {\n          return self.originalProvider.send(payload.method, payload.params);\n        } else {\n          self.originalProvider.send(payload, cb);\n        }\n      }\n    };\n\n    this.request = function (args, cb) {\n      var payload = {\n        method: args.method,\n        params: args.params\n      };\n\n      if (payload.method == \"eth_sendTransaction\") {\n        return new Promise(function (resolve, reject) {\n          handleSendTransaction(self, payload, function (error, result) {\n            if (error) {\n              return reject(error);\n            }\n\n            if (result.result) {\n              resolve(result.result);\n\n              _logMessage(result.result);\n            } else {\n              resolve(result);\n\n              _logMessage(result);\n            }\n\n            if (cb) {\n              cb(error, result);\n            }\n          });\n        });\n      } else if (payload.method == \"eth_sendRawTransaction\") {\n        return new Promise(function (resolve, reject) {\n          sendSignedTransaction(self, payload, function (error, result) {\n            if (error) {\n              return reject(error);\n            }\n\n            if (result.result) {\n              resolve(result.result);\n\n              _logMessage(result.result);\n            } else {\n              resolve(result);\n\n              _logMessage(result);\n            }\n\n            if (cb) {\n              cb(error, result);\n            }\n          });\n        });\n      } else {\n        if (self.originalProvider.request) {\n          return self.originalProvider.request(args, cb);\n        } else if (self.originalProvider.send) {\n          return new Promise( /*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(resolve, reject) {\n              var jsonRPCPaylod, localResult;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      jsonRPCPaylod = toJSONRPCPayload(self, payload.method, payload.params);\n\n                      if (!self.isEthersProviderPresent) {\n                        _context.next = 14;\n                        break;\n                      }\n\n                      _context.prev = 2;\n                      _context.next = 5;\n                      return self.originalProvider.send(jsonRPCPaylod.method, jsonRPCPaylod.params);\n\n                    case 5:\n                      localResult = _context.sent;\n                      resolve(localResult);\n                      _context.next = 12;\n                      break;\n\n                    case 9:\n                      _context.prev = 9;\n                      _context.t0 = _context[\"catch\"](2);\n                      reject(_context.t0);\n\n                    case 12:\n                      _context.next = 15;\n                      break;\n\n                    case 14:\n                      self.originalProvider.send(jsonRPCPaylod, function (err, response) {\n                        if (err) {\n                          return reject(err);\n                        }\n\n                        if (response.result) {\n                          resolve(response.result);\n                        } else {\n                          resolve(response);\n                        }\n                      });\n\n                    case 15:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, null, [[2, 9]]);\n            }));\n\n            return function (_x, _x2) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n        } else {\n          return Promise.reject(\"Invalid provider object passed to Biconomy as it doesn't support request or send method\");\n        }\n      }\n    };\n\n    this.sendAsync = this.send;\n  } else {\n    throw new Error(\"Please pass a provider to Biconomy.\");\n  }\n}\n\nBiconomy.prototype.getSignerByAddress = function (userAddress) {\n  var provider = this.getEthersProvider();\n  var signer = provider.getSigner();\n  signer = signer.connectUnchecked();\n  signer.getAddress = /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", userAddress);\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return signer;\n};\n\nBiconomy.prototype.getEthersProvider = function () {\n  return new ethers.providers.Web3Provider(this);\n}; //TODO\n//Allow to provide custom txGas\n\n\nBiconomy.prototype.getForwardRequestAndMessageToSign = function (rawTransaction, tokenAddress, customBatchId, cb) {\n  try {\n    var engine = this;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(resolve, reject) {\n        var decodedTx, to, methodInfo, error, methodName, token, api, metaTxApproach, contractAddr, _error, params, typeString, paramArray, i, parsedTransaction, account, gasLimit, gasLimitNum, contractABI, contract, methodSignature, _contract$estimateGas, _error2, request, cost, buildTxResponse, _error3, eip712DataToSign, hashToSign, dataToSign, _error4;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!rawTransaction) {\n                  _context3.next = 79;\n                  break;\n                }\n\n                decodedTx = txDecoder.decodeTx(rawTransaction);\n\n                if (!(decodedTx.to && decodedTx.data && decodedTx.value)) {\n                  _context3.next = 76;\n                  break;\n                }\n\n                to = decodedTx.to.toLowerCase();\n                methodInfo = decodeMethod(to, decodedTx.data);\n\n                if (methodInfo) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                error = formatMessage(RESPONSE_CODES.DASHBOARD_DATA_MISMATCH, \"Smart Contract address registered on dashboard is different than what is sent(\".concat(decodedTx.to, \") in current transaction\"));\n                if (cb) cb(error);\n                return _context3.abrupt(\"return\", reject(error));\n\n              case 9:\n                methodName = methodInfo.name; //token address needs to be passed otherwise fees will be charged in DAI by default, given DAI permit is given\n\n                token = tokenAddress ? tokenAddress : engine.daiTokenAddress;\n\n                _logMessage(tokenAddress);\n\n                api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined;\n\n                if (!api) {\n                  api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n                  metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n                } else {\n                  contractAddr = api.contractAddress.toLowerCase();\n                  metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n                }\n\n                if (api) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                _logMessage(\"API not found for method \".concat(methodName));\n\n                _error = formatMessage(RESPONSE_CODES.API_NOT_FOUND, \"No API found on dashboard for called method \".concat(methodName));\n                if (cb) cb(_error);\n                return _context3.abrupt(\"return\", reject(_error));\n\n              case 19:\n                _logMessage(\"API found\");\n\n                params = methodInfo.params;\n                typeString = \"\";\n                paramArray = [];\n\n                for (i = 0; i < params.length; i++) {\n                  paramArray.push(_getParamValue(params[i]));\n                  typeString = typeString + params[i].type.toString() + \",\";\n                }\n\n                if (params.length > 0) {\n                  typeString = typeString.substring(0, typeString.length - 1);\n                }\n\n                parsedTransaction = ethers.utils.parseTransaction(rawTransaction);\n                account = parsedTransaction.from;\n\n                _logMessage(\"Signer is \".concat(account));\n\n                gasLimit = decodedTx.gasLimit;\n\n                if (!(!gasLimit || parseInt(gasLimit) == 0)) {\n                  _context3.next = 47;\n                  break;\n                }\n\n                contractABI = smartContractMap[to];\n\n                if (!contractABI) {\n                  _context3.next = 45;\n                  break;\n                }\n\n                contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n                methodSignature = methodName + \"(\" + typeString + \")\";\n                _context3.prev = 34;\n                _context3.next = 37;\n                return (_contract$estimateGas = contract.estimateGas)[methodSignature].apply(_contract$estimateGas, paramArray.concat([{\n                  from: account\n                }]));\n\n              case 37:\n                gasLimit = _context3.sent;\n                _context3.next = 43;\n                break;\n\n              case 40:\n                _context3.prev = 40;\n                _context3.t0 = _context3[\"catch\"](34);\n                return _context3.abrupt(\"return\", reject(_context3.t0));\n\n              case 43:\n                // Do not send this value in API call. only meant for txGas\n                gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).add(ethers.BigNumber.from(5000)).toNumber();\n\n                _logMessage(\"Gas limit number \".concat(gasLimitNum));\n\n              case 45:\n                _context3.next = 48;\n                break;\n\n              case 47:\n                gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).toNumber();\n\n              case 48:\n                if (account) {\n                  _context3.next = 51;\n                  break;\n                }\n\n                _error2 = formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Not able to get user account from signed transaction\");\n                return _context3.abrupt(\"return\", end(_error2));\n\n              case 51:\n                if (!(metaTxApproach == engine.TRUSTED_FORWARDER)) {\n                  _context3.next = 57;\n                  break;\n                }\n\n                _context3.next = 54;\n                return buildForwardTxRequest(account, to, gasLimitNum, decodedTx.data, biconomyForwarder, customBatchId);\n\n              case 54:\n                request = _context3.sent.request;\n                _context3.next = 67;\n                break;\n\n              case 57:\n                if (!(metaTxApproach == engine.ERC20_FORWARDER)) {\n                  _context3.next = 64;\n                  break;\n                }\n\n                _context3.next = 60;\n                return engine.erc20ForwarderClient.buildTx({\n                  userAddress: account,\n                  to: to,\n                  txGas: gasLimitNum,\n                  data: decodedTx.data,\n                  token: token\n                });\n\n              case 60:\n                buildTxResponse = _context3.sent;\n\n                if (buildTxResponse) {\n                  request = buildTxResponse.request;\n                  cost = buildTxResponse.cost;\n                } else {\n                  reject(formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Unable to build forwarder request\"));\n                }\n\n                _context3.next = 67;\n                break;\n\n              case 64:\n                _error3 = formatMessage(RESPONSE_CODES.INVALID_OPERATION, \"Smart contract is not registered in the dashboard for this meta transaction approach. Kindly use biconomy.getUserMessageToSign\");\n                if (cb) cb(_error3);\n                return _context3.abrupt(\"return\", reject(_error3));\n\n              case 67:\n                _logMessage(\"Forward Request is: \");\n\n                _logMessage(request);\n\n                eip712DataToSign = {\n                  types: {\n                    EIP712Domain: forwarderDomainType,\n                    ERC20ForwardRequest: forwardRequestType\n                  },\n                  domain: forwarderDomainData,\n                  primaryType: \"ERC20ForwardRequest\",\n                  message: request\n                };\n                hashToSign = abi.soliditySHA3([\"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"bytes32\"], [request.from, request.to, request.token, request.txGas, request.tokenGasPrice, request.batchId, request.batchNonce, request.deadline, ethers.utils.keccak256(request.data)]);\n                dataToSign = {\n                  eip712Format: eip712DataToSign,\n                  personalSignatureFormat: hashToSign,\n                  request: request,\n                  cost: cost\n                };\n                if (cb) cb(null, dataToSign);\n                return _context3.abrupt(\"return\", resolve(dataToSign));\n\n              case 76:\n                _error4 = formatMessage(RESPONSE_CODES.BICONOMY_NOT_INITIALIZED, \"Decoders not initialized properly in mexa sdk. Make sure your have smart contracts registered on Mexa Dashboard\");\n                if (cb) cb(_error4);\n                return _context3.abrupt(\"return\", reject(_error4));\n\n              case 79:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[34, 40]]);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  } catch (error) {\n    return end(error);\n  }\n};\n/**\n * Method used to listen to events emitted from the SDK\n */\n\n\nBiconomy.prototype.onEvent = function (type, callback) {\n  if (type == this.READY || type == this.ERROR || type == this.LOGIN_CONFIRMATION) {\n    eventEmitter.on(type, callback);\n    return this;\n  } else {\n    throw formatMessage(RESPONSE_CODES.EVENT_NOT_SUPPORTED, \"\".concat(type, \" event is not supported.\"));\n  }\n};\n/**\n * Create a JSON RPC response from the given error and result parameter.\n **/\n\n\nBiconomy.prototype._createJsonRpcResponse = function (payload, error, result) {\n  var response = {};\n  response.id = payload.id;\n  response.jsonrpc = JSON_RPC_VERSION;\n\n  if ((!error || error == null) && !result) {\n    response.error = \"Unexpected error has occured. Please contact Biconomy Team\";\n    return response;\n  }\n\n  if (error) {\n    response.error = error;\n  } else if (result && result.error) {\n    response.error = result.error;\n  } else if (ethers.utils.isHexString(result)) {\n    response.result = result;\n  } else {\n    response = result;\n  }\n\n  return response;\n};\n\nfunction decodeMethod(to, data) {\n  if (to && data && decoderMap[to]) {\n    return decoderMap[to].decodeMethod(data);\n  }\n\n  return;\n}\n/**\n * Method used to handle transaction initiated using web3.eth.sendSignedTransaction method\n * It extracts rawTransaction from payload and decode it to get required information like from, to,\n * data, gasLimit to create the payload for biconomy meta transaction API.\n * In case of Native meta transaction, payload just contains rawTransaction\n * In case of contract based meta transaction, payload contains rawTransaction and signature wrapped\n * in a json object.\n *\n * @param {Object} engine Reference to this SDK instance\n * @param {Object} payload Payload data\n * @param {Function} end Callback function with error as first argument\n */\n\n\nfunction sendSignedTransaction(_x5, _x6, _x7) {\n  return _sendSignedTransaction.apply(this, arguments);\n}\n/**\n * Function decodes the parameter in payload and gets the user signature using eth_signTypedData_v4\n * method and send the request to biconomy for processing and call the callback method 'end'\n * with transaction hash.\n *\n * This is an internal function that is called while intercepting eth_sendTransaction RPC method call.\n **/\n\n\nfunction _sendSignedTransaction() {\n  _sendSignedTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(engine, payload, end) {\n    var data, rawTransaction, signature, request, signatureType, decodedTx, to, methodInfo, error, methodName, api, metaTxApproach, contractAddr, _error5, params, paramArray, parsedTransaction, account, _error6, forwardedData, gasLimitNum, gasLimit, paramArrayForGasCalculation, typeString, i, contractABI, _contract$estimateGas2, contract, methodSignature, domainSeparator, _data, _i, _data2, relayerPayment, _data3, _error7, _error8, _error9, _error10;\n\n    return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(payload && payload.params[0])) {\n              _context7.next = 101;\n              break;\n            }\n\n            data = payload.params[0];\n\n            // user would need to pass token address as well!\n            // OR they could pass the symbol and engine will provide the address for you..\n            // default is DAI\n            if (typeof data == \"string\") {\n              // Here user send the rawTransaction in the payload directly. Probably the case of native meta transaction\n              // Handle this scenario differently?\n              rawTransaction = data;\n            } else if ((0, _typeof2[\"default\"])(data) == \"object\") {\n              // Here user wrapped raw Transaction in json object along with signature\n              signature = data.signature;\n              rawTransaction = data.rawTransaction;\n              signatureType = data.signatureType;\n              request = data.forwardRequest;\n            }\n\n            if (!rawTransaction) {\n              _context7.next = 96;\n              break;\n            }\n\n            decodedTx = txDecoder.decodeTx(rawTransaction);\n\n            if (!(decodedTx.to && decodedTx.data && decodedTx.value)) {\n              _context7.next = 91;\n              break;\n            }\n\n            to = decodedTx.to.toLowerCase();\n            methodInfo = decodeMethod(to, decodedTx.data);\n\n            if (methodInfo) {\n              _context7.next = 19;\n              break;\n            }\n\n            methodInfo = decodeMethod(config.SCW, decodedTx.data);\n\n            if (methodInfo) {\n              _context7.next = 19;\n              break;\n            }\n\n            if (!engine.strictMode) {\n              _context7.next = 16;\n              break;\n            }\n\n            error = formatMessage(RESPONSE_CODES.DASHBOARD_DATA_MISMATCH, \"No smart contract wallet or smart contract registered on dashboard with address (\".concat(decodedTx.to, \")\"));\n            return _context7.abrupt(\"return\", end(error));\n\n          case 16:\n            _logMessage(\"Strict mode is off so falling back to default provider for handling transaction\");\n\n            if ((0, _typeof2[\"default\"])(data) == \"object\" && data.rawTransaction) {\n              payload.params = [data.rawTransaction];\n            }\n\n            return _context7.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"No smart contract wallet or smart contract registered on dashboard with address (\".concat(decodedTx.to, \")\")));\n\n          case 19:\n            methodName = methodInfo.name;\n            api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined;\n\n            if (!api) {\n              api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n              metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n            } else {\n              contractAddr = api.contractAddress.toLowerCase();\n              metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n            }\n\n            if (api) {\n              _context7.next = 33;\n              break;\n            }\n\n            _logMessage(\"API not found for method \".concat(methodName));\n\n            _logMessage(\"Strict mode \".concat(engine.strictMode));\n\n            if (!engine.strictMode) {\n              _context7.next = 30;\n              break;\n            }\n\n            _error5 = formatMessage(RESPONSE_CODES.API_NOT_FOUND, \"Biconomy strict mode is on. No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\"));\n            return _context7.abrupt(\"return\", end(_error5, null));\n\n          case 30:\n            _logMessage(\"Falling back to default provider as strict mode is false in biconomy\");\n\n            if ((0, _typeof2[\"default\"])(data) == \"object\" && data.rawTransaction) {\n              payload.params = [data.rawTransaction];\n            }\n\n            return _context7.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"Current provider can not sign transactions. Make sure to register method \".concat(methodName, \" on Biconomy Dashboard\")));\n\n          case 33:\n            _logMessage(\"API found\");\n\n            params = methodInfo.params;\n            paramArray = [];\n            parsedTransaction = ethers.utils.parseTransaction(rawTransaction);\n            account = parsedTransaction ? parsedTransaction.from : undefined;\n\n            _logMessage(\"signer is \".concat(account));\n\n            if (account) {\n              _context7.next = 42;\n              break;\n            }\n\n            _error6 = formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Not able to get user account from signed transaction\");\n            return _context7.abrupt(\"return\", end(_error6));\n\n          case 42:\n            gasLimit = decodedTx.gasLimit;\n\n            if (!(api.url == NATIVE_META_TX_URL)) {\n              _context7.next = 88;\n              break;\n            }\n\n            if (!(metaTxApproach != engine.DEFAULT)) {\n              _context7.next = 77;\n              break;\n            }\n\n            // forwardedData = payload.params[0].data;\n            forwardedData = decodedTx.data;\n            paramArrayForGasCalculation = [];\n            typeString = \"\";\n\n            for (i = 0; i < params.length; i++) {\n              paramArrayForGasCalculation.push(_getParamValue(params[i]));\n              typeString = typeString + params[i].type.toString() + \",\";\n            }\n\n            if (params.length > 0) {\n              typeString = typeString.substring(0, typeString.length - 1);\n            }\n\n            if (!(!gasLimit || parseInt(gasLimit) == 0)) {\n              _context7.next = 62;\n              break;\n            }\n\n            contractABI = smartContractMap[to];\n\n            if (!contractABI) {\n              _context7.next = 60;\n              break;\n            }\n\n            contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n            methodSignature = methodName + \"(\" + typeString + \")\";\n            _context7.next = 57;\n            return (_contract$estimateGas2 = contract.estimateGas)[methodSignature].apply(_contract$estimateGas2, paramArrayForGasCalculation.concat([{\n              from: account\n            }]));\n\n          case 57:\n            gasLimit = _context7.sent;\n            // do not send this value in API call. only meant for txGas\n            gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).add(ethers.BigNumber.from(5000)).toNumber();\n\n            _logMessage(\"gas limit number\" + gasLimitNum);\n\n          case 60:\n            _context7.next = 63;\n            break;\n\n          case 62:\n            gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).toNumber();\n\n          case 63:\n            _logMessage(request);\n\n            paramArray.push(request);\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              domainSeparator = getDomainSeperator(forwarderDomainData);\n\n              _logMessage(domainSeparator);\n\n              paramArray.push(domainSeparator);\n            }\n\n            paramArray.push(signature);\n            _data = {};\n            _data.from = account;\n            _data.apiId = api.id;\n            _data.params = paramArray;\n            _data.to = to;\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              _data.signatureType = engine.EIP712_SIGN;\n            }\n\n            _context7.next = 75;\n            return _sendTransaction(engine, account, api, _data, end);\n\n          case 75:\n            _context7.next = 86;\n            break;\n\n          case 77:\n            for (_i = 0; _i < params.length; _i++) {\n              paramArray.push(_getParamValue(params[_i]));\n            }\n\n            _data2 = {};\n            _data2.from = account;\n            _data2.apiId = api.id;\n            _data2.params = paramArray;\n            _data2.gasLimit = decodedTx.gasLimit.toString(); //verify\n\n            _data2.to = decodedTx.to.toLowerCase();\n            _context7.next = 86;\n            return _sendTransaction(engine, account, api, _data2, end);\n\n          case 86:\n            _context7.next = 89;\n            break;\n\n          case 88:\n            if (signature) {\n              relayerPayment = {};\n              relayerPayment.token = config.DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS;\n              relayerPayment.amount = config.DEFAULT_RELAYER_PAYMENT_AMOUNT;\n              _data3 = {};\n              _data3.rawTx = rawTransaction;\n              _data3.signature = signature;\n              _data3.to = to;\n              _data3.from = account;\n              _data3.apiId = api.id;\n              _data3.data = decodedTx.data;\n              _data3.value = ethers.utils.hexValue(decodedTx.value);\n              _data3.gasLimit = decodedTx.gasLimit.toString();\n              _data3.nonceBatchId = config.NONCE_BATCH_ID;\n              _data3.expiry = config.EXPIRY;\n              _data3.baseGas = config.BASE_GAS;\n              _data3.relayerPayment = {\n                token: relayerPayment.token,\n                amount: relayerPayment.amount\n              };\n\n              _sendTransaction(engine, account, api, _data3, end);\n            } else {\n              _error7 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \". message and signature are required in param object\"));\n              eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error7);\n              end(_error7);\n            }\n\n          case 89:\n            _context7.next = 94;\n            break;\n\n          case 91:\n            _error8 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Not able to deode the data in rawTransaction using ethereum-tx-decoder. Please check the data sent.\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error8);\n            end(_error8);\n\n          case 94:\n            _context7.next = 99;\n            break;\n\n          case 96:\n            _error9 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \".rawTransaction is required in param object\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error9);\n            end(_error9);\n\n          case 99:\n            _context7.next = 104;\n            break;\n\n          case 101:\n            _error10 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \". Non empty Array expected in params key\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error10);\n            end(_error10);\n\n          case 104:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _sendSignedTransaction.apply(this, arguments);\n}\n\nfunction handleSendTransaction(_x8, _x9, _x10) {\n  return _handleSendTransaction.apply(this, arguments);\n}\n\nfunction _handleSendTransaction() {\n  _handleSendTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(engine, payload, end) {\n    var to, methodInfo, error, methodName, api, metaTxApproach, contractAddr, gasLimit, txGas, signatureType, _error11, account, params, paramArray, _error12, forwardedData, gasLimitNum, paramArrayForGasCalculation, typeString, signatureFromPayload, i, contractABI, _contract$estimateGas3, contract, methodSignature, _error13, request, domainSeparator, signatureEIP712, signaturePersonal, data, _i2, _data4, _error14, _error15, _error16;\n\n    return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n\n            _logMessage(\"Handle transaction with payload\");\n\n            _logMessage(payload);\n\n            if (!(payload.params && payload.params[0] && payload.params[0].to)) {\n              _context8.next = 151;\n              break;\n            }\n\n            to = payload.params[0].to.toLowerCase();\n\n            if (!(decoderMap[to] || decoderMap[config.SCW])) {\n              _context8.next = 141;\n              break;\n            }\n\n            methodInfo = decodeMethod(to, payload.params[0].data); // Check if the Smart Contract Wallet is registered on dashboard\n\n            if (!methodInfo) {\n              methodInfo = decodeMethod(config.SCW, payload.params[0].data);\n            }\n\n            if (methodInfo) {\n              _context8.next = 13;\n              break;\n            }\n\n            error = {};\n            error.code = RESPONSE_CODES.WRONG_ABI;\n            error.message = \"Can't decode method information from payload. Make sure you have uploaded correct ABI on Biconomy Dashboard\";\n            return _context8.abrupt(\"return\", end(error, null));\n\n          case 13:\n            methodName = methodInfo.name;\n            api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined; // Information we get here is contractAddress, methodName, methodType, ApiId\n\n            if (!api) {\n              api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n              metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n            } else {\n              contractAddr = api.contractAddress.toLowerCase();\n              metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n            }\n\n            gasLimit = payload.params[0].gas || payload.params[0].gasLimit;\n            txGas = payload.params[0].txGas;\n            signatureType = payload.params[0].signatureType;\n\n            _logMessage(payload.params[0]);\n\n            _logMessage(api);\n\n            _logMessage(\"gas limit : \".concat(gasLimit));\n\n            _logMessage(\"tx gas supplied : \".concat(txGas));\n\n            if (api) {\n              _context8.next = 35;\n              break;\n            }\n\n            _logMessage(\"API not found for method \".concat(methodName));\n\n            _logMessage(\"Strict mode \".concat(engine.strictMode));\n\n            if (!engine.strictMode) {\n              _context8.next = 33;\n              break;\n            }\n\n            _error11 = {};\n            _error11.code = RESPONSE_CODES.API_NOT_FOUND;\n            _error11.message = \"Biconomy strict mode is on. No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\");\n            return _context8.abrupt(\"return\", end(_error11, null));\n\n          case 33:\n            _logMessage(\"Falling back to default provider as strict mode is false in biconomy\");\n\n            return _context8.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\")));\n\n          case 35:\n            _logMessage(\"API found\");\n\n            _logMessage(\"Getting user account\");\n\n            account = payload.params[0].from;\n\n            if (account) {\n              _context8.next = 40;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", end(\"Not able to get user account\"));\n\n          case 40:\n            _logMessage(\"User account fetched\");\n\n            params = methodInfo.params;\n\n            _logMessage(params);\n\n            paramArray = [];\n\n            if (!(metaTxApproach == engine.ERC20_FORWARDER)) {\n              _context8.next = 48;\n              break;\n            }\n\n            _error12 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"This operation is not allowed for contracts registered on dashboard as \\\"ERC20Forwarder\\\". Use ERC20Forwarder client instead!\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error12);\n            return _context8.abrupt(\"return\", end(_error12));\n\n          case 48:\n            if (!(api.url == NATIVE_META_TX_URL)) {\n              _context8.next = 136;\n              break;\n            }\n\n            if (!(metaTxApproach == engine.TRUSTED_FORWARDER)) {\n              _context8.next = 126;\n              break;\n            }\n\n            _logMessage(\"Smart contract is configured to use Trusted Forwarder as meta transaction type\");\n\n            forwardedData = payload.params[0].data;\n            paramArrayForGasCalculation = [];\n            typeString = \"\";\n            signatureFromPayload = payload.params[0].signature; // Check if txGas is present, if not calculate gas limit for txGas\n\n            if (!(!txGas || parseInt(txGas) == 0)) {\n              _context8.next = 74;\n              break;\n            }\n\n            for (i = 0; i < params.length; i++) {\n              paramArrayForGasCalculation.push(_getParamValue(params[i]));\n              typeString = typeString + params[i].type.toString() + \",\";\n            }\n\n            if (params.length > 0) {\n              typeString = typeString.substring(0, typeString.length - 1);\n            }\n\n            contractABI = smartContractMap[to];\n\n            if (!contractABI) {\n              _context8.next = 69;\n              break;\n            }\n\n            contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n            methodSignature = methodName + \"(\" + typeString + \")\";\n            _context8.next = 64;\n            return (_contract$estimateGas3 = contract.estimateGas)[methodSignature].apply(_contract$estimateGas3, paramArrayForGasCalculation.concat([{\n              from: account\n            }]));\n\n          case 64:\n            txGas = _context8.sent;\n            // do not send this value in API call. only meant for txGas\n            gasLimitNum = ethers.BigNumber.from(txGas.toString()).add(ethers.BigNumber.from(5000)).toNumber();\n\n            _logMessage(\"Gas limit (txGas) calculated for method \".concat(methodName, \" in SDK: \").concat(gasLimitNum));\n\n            _context8.next = 72;\n            break;\n\n          case 69:\n            _error13 = formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"Smart contract ABI not found!\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error13);\n            end(_error13);\n\n          case 72:\n            _context8.next = 77;\n            break;\n\n          case 74:\n            _logMessage(\"txGas supplied for this Trusted Forwarder call is \".concat(Number(txGas)));\n\n            gasLimitNum = ethers.BigNumber.from(txGas.toString()).toNumber();\n\n            _logMessage(\"gas limit number for txGas \" + gasLimitNum);\n\n          case 77:\n            _context8.next = 79;\n            return buildForwardTxRequest(account, to, parseInt(gasLimitNum), //txGas\n            forwardedData, biconomyForwarder);\n\n          case 79:\n            request = _context8.sent.request;\n\n            _logMessage(request);\n\n            paramArray.push(request);\n\n            if (!(signatureType && signatureType == engine.EIP712_SIGN)) {\n              _context8.next = 100;\n              break;\n            }\n\n            _logMessage(\"EIP712 signature flow\");\n\n            domainSeparator = getDomainSeperator(forwarderDomainData);\n\n            _logMessage(\"Domain separator to be used:\");\n\n            _logMessage(domainSeparator);\n\n            paramArray.push(domainSeparator);\n\n            if (!signatureFromPayload) {\n              _context8.next = 93;\n              break;\n            }\n\n            signatureEIP712 = signatureFromPayload;\n\n            _logMessage(\"EIP712 signature from payload is \".concat(signatureEIP712));\n\n            _context8.next = 97;\n            break;\n\n          case 93:\n            _context8.next = 95;\n            return getSignatureEIP712(engine, account, request);\n\n          case 95:\n            signatureEIP712 = _context8.sent;\n\n            _logMessage(\"EIP712 signature is \".concat(signatureEIP712));\n\n          case 97:\n            paramArray.push(signatureEIP712);\n            _context8.next = 115;\n            break;\n\n          case 100:\n            _logMessage(\"Personal signature flow\");\n\n            if (!signatureFromPayload) {\n              _context8.next = 106;\n              break;\n            }\n\n            signaturePersonal = signatureFromPayload;\n\n            _logMessage(\"Personal signature from payload is \".concat(signaturePersonal));\n\n            _context8.next = 110;\n            break;\n\n          case 106:\n            _context8.next = 108;\n            return getSignaturePersonal(engine, request);\n\n          case 108:\n            signaturePersonal = _context8.sent;\n\n            _logMessage(\"Personal signature is \".concat(signaturePersonal));\n\n          case 110:\n            if (!signaturePersonal) {\n              _context8.next = 114;\n              break;\n            }\n\n            paramArray.push(signaturePersonal);\n            _context8.next = 115;\n            break;\n\n          case 114:\n            throw new Error(\"Could not get personal signature while processing transaction in Mexa SDK. Please check the providers you have passed to Biconomy\");\n\n          case 115:\n            data = {};\n            data.from = account;\n            data.apiId = api.id;\n            data.params = paramArray;\n            data.to = to; //gasLimit for entire transaction\n            //This will be calculated at the backend again\n\n            data.gasLimit = gasLimit;\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              data.signatureType = engine.EIP712_SIGN;\n            }\n\n            _context8.next = 124;\n            return _sendTransaction(engine, account, api, data, end);\n\n          case 124:\n            _context8.next = 134;\n            break;\n\n          case 126:\n            for (_i2 = 0; _i2 < params.length; _i2++) {\n              paramArray.push(_getParamValue(params[_i2]));\n            }\n\n            _data4 = {};\n            _data4.from = account;\n            _data4.apiId = api.id;\n            _data4.params = paramArray;\n            _data4.gasLimit = gasLimit;\n            _data4.to = to;\n\n            _sendTransaction(engine, account, api, _data4, end);\n\n          case 134:\n            _context8.next = 139;\n            break;\n\n          case 136:\n            _error14 = formatMessage(RESPONSE_CODES.INVALID_OPERATION, \"Biconomy smart contract wallets are not supported now. On dashboard, re-register your smart contract methods with \\\"native meta tx\\\" checkbox selected.\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error14);\n            return _context8.abrupt(\"return\", end(_error14));\n\n          case 139:\n            _context8.next = 149;\n            break;\n\n          case 141:\n            if (!engine.strictMode) {\n              _context8.next = 147;\n              break;\n            }\n\n            _error15 = formatMessage(RESPONSE_CODES.BICONOMY_NOT_INITIALIZED, \"Decoders not initialized properly in mexa sdk. Make sure your have smart contracts registered on Mexa Dashboard\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error15);\n            end(_error15);\n            _context8.next = 149;\n            break;\n\n          case 147:\n            _logMessage(\"Smart contract not found on dashbaord. Strict mode is off, so falling back to normal transaction mode\");\n\n            return _context8.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"Current provider can't send transactions and smart contract \".concat(to, \" not found on Biconomy Dashbaord\")));\n\n          case 149:\n            _context8.next = 154;\n            break;\n\n          case 151:\n            _error16 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload), \". Expecting params key to be an array with first element having a 'to' property\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error16);\n            end(_error16);\n\n          case 154:\n            _context8.next = 159;\n            break;\n\n          case 156:\n            _context8.prev = 156;\n            _context8.t0 = _context8[\"catch\"](0);\n            return _context8.abrupt(\"return\", end(_context8.t0));\n\n          case 159:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 156]]);\n  }));\n  return _handleSendTransaction.apply(this, arguments);\n}\n\nfunction callDefaultProvider(_x11, _x12, _x13, _x14) {\n  return _callDefaultProvider.apply(this, arguments);\n}\n\nfunction _callDefaultProvider() {\n  _callDefaultProvider = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(engine, payload, callback, errorMessage) {\n    var targetProvider, responseFromProvider;\n    return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            targetProvider = engine.originalProvider;\n\n            if (!targetProvider) {\n              _context9.next = 18;\n              break;\n            }\n\n            if (engine.canSignMessages) {\n              _context9.next = 6;\n              break;\n            }\n\n            throw new Error(errorMessage);\n\n          case 6:\n            if (!engine.isEthersProviderPresent) {\n              _context9.next = 15;\n              break;\n            }\n\n            _context9.next = 9;\n            return engine.originalProvider.send(payload.method, payload.params);\n\n          case 9:\n            responseFromProvider = _context9.sent;\n\n            _logMessage(\"Response from original provider\", responseFromProvider);\n\n            callback(null, responseFromProvider);\n            return _context9.abrupt(\"return\", responseFromProvider);\n\n          case 15:\n            return _context9.abrupt(\"return\", engine.originalProvider.send(payload, callback));\n\n          case 16:\n            _context9.next = 19;\n            break;\n\n          case 18:\n            throw new Error(\"Original provider not present in Biconomy\");\n\n          case 19:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _callDefaultProvider.apply(this, arguments);\n}\n\nfunction _getEIP712ForwardMessageToSign(request) {\n  if (!forwarderDomainType || !forwardRequestType || !forwarderDomainData) {\n    throw new Error(\"Biconomy is not properly initialized\");\n  }\n\n  var dataToSign = JSON.stringify({\n    types: {\n      EIP712Domain: forwarderDomainType,\n      ERC20ForwardRequest: forwardRequestType\n    },\n    domain: forwarderDomainData,\n    primaryType: \"ERC20ForwardRequest\",\n    message: request\n  });\n  return dataToSign;\n}\n\nfunction _getPersonalForwardMessageToSign(request) {\n  return abi.soliditySHA3([\"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"bytes32\"], [request.from, request.to, request.token, request.txGas, request.tokenGasPrice, request.batchId, request.batchNonce, request.deadline, ethers.utils.keccak256(request.data)]);\n}\n\nfunction getTargetProvider(engine) {\n  var provider;\n\n  if (engine) {\n    provider = engine.originalProvider;\n\n    if (!engine.canSignMessages) {\n      if (!engine.walletProvider) {\n        throw new Error(\"Please pass a provider connected to a wallet that can sign messages in Biconomy options.\");\n      }\n\n      provider = engine.walletProvider;\n    }\n  }\n\n  return provider;\n}\n\nfunction getSignatureParameters(signature) {\n  if (!ethers.utils.isHexString(signature)) {\n    throw new Error('Given value \"'.concat(signature, '\" is not a valid hex string.'));\n  }\n\n  var r = signature.slice(0, 66);\n  var s = \"0x\".concat(signature.slice(66, 130));\n  var v = \"0x\".concat(signature.slice(130, 132));\n  v = ethers.BigNumber.from(v).toNumber();\n  if (![27, 28].includes(v)) v += 27;\n  return {\n    r: r,\n    s: s,\n    v: v\n  };\n} //take parameter for chosen signature type V3 or V4\n\n\nfunction getSignatureEIP712(engine, account, request) {\n  //default V4 now   \n  var signTypedDataType = \"eth_signTypedData_v4\";\n\n  var dataToSign = _getEIP712ForwardMessageToSign(request);\n\n  var targetProvider = getTargetProvider(engine);\n\n  if (!targetProvider) {\n    throw new Error(\"Unable to get provider information passed to Biconomy\");\n  }\n\n  var promise = new Promise( /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(resolve, reject) {\n      var signature, _getSignatureParamete, r, s, v, newSignature;\n\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!targetProvider) {\n                _context4.next = 21;\n                break;\n              }\n\n              if (!isEthersProvider(targetProvider)) {\n                _context4.next = 17;\n                break;\n              }\n\n              _context4.prev = 2;\n              _context4.next = 5;\n              return targetProvider.send(signTypedDataType, [account, dataToSign]);\n\n            case 5:\n              signature = _context4.sent;\n              _getSignatureParamete = getSignatureParameters(signature), r = _getSignatureParamete.r, s = _getSignatureParamete.s, v = _getSignatureParamete.v;\n              v = ethers.BigNumber.from(v).toHexString();\n              newSignature = r + s.slice(2) + v.slice(2);\n              resolve(newSignature);\n              _context4.next = 15;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](2);\n              reject(_context4.t0);\n\n            case 15:\n              _context4.next = 19;\n              break;\n\n            case 17:\n              _context4.next = 19;\n              return targetProvider.send({\n                jsonrpc: \"2.0\",\n                id: 999999999999,\n                method: signTypedDataType,\n                params: [account, dataToSign]\n              }, function (error, res) {\n                if (error) {\n                  reject(error);\n                } else {\n                  var oldSignature = res.result;\n\n                  var _getSignatureParamete2 = getSignatureParameters(oldSignature),\n                      _r = _getSignatureParamete2.r,\n                      _s = _getSignatureParamete2.s,\n                      _v = _getSignatureParamete2.v;\n\n                  _v = ethers.BigNumber.from(_v).toHexString();\n\n                  var _newSignature = _r + _s.slice(2) + _v.slice(2);\n\n                  resolve(_newSignature);\n                }\n              });\n\n            case 19:\n              _context4.next = 22;\n              break;\n\n            case 21:\n              reject(\"Could not get signature from the provider passed to Biconomy. Check if you have passed a walletProvider in Biconomy Options.\");\n\n            case 22:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 12]]);\n    }));\n\n    return function (_x15, _x16) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n  return promise;\n}\n\nfunction getSignaturePersonal(_x17, _x18) {\n  return _getSignaturePersonal.apply(this, arguments);\n} // On getting smart contract data get the API data also\n\n\nfunction _getSignaturePersonal() {\n  _getSignaturePersonal = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(engine, req) {\n    var hashToSign, signature, targetProvider, providerWithSigner, signer, promise;\n    return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            hashToSign = _getPersonalForwardMessageToSign(req);\n\n            if (!(!engine.signer && !engine.walletProvider)) {\n              _context11.next = 3;\n              break;\n            }\n\n            throw new Error(\"Can't sign messages with current provider. Did you forget to pass walletProvider in Biconomy options?\");\n\n          case 3:\n            targetProvider = getTargetProvider(engine);\n\n            if (targetProvider) {\n              _context11.next = 6;\n              break;\n            }\n\n            throw new Error(\"Unable to get provider information passed to Biconomy\");\n\n          case 6:\n            if (isEthersProvider(targetProvider)) {\n              providerWithSigner = targetProvider;\n            } else {\n              providerWithSigner = new ethers.providers.Web3Provider(targetProvider);\n            }\n\n            signer = providerWithSigner.getSigner();\n            promise = new Promise( /*#__PURE__*/function () {\n              var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(resolve, reject) {\n                return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.prev = 0;\n                        _context10.next = 3;\n                        return signer.signMessage(ethers.utils.arrayify(hashToSign));\n\n                      case 3:\n                        signature = _context10.sent;\n                        resolve(signature);\n                        _context10.next = 10;\n                        break;\n\n                      case 7:\n                        _context10.prev = 7;\n                        _context10.t0 = _context10[\"catch\"](0);\n                        reject(_context10.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[0, 7]]);\n              }));\n\n              return function (_x31, _x32) {\n                return _ref8.apply(this, arguments);\n              };\n            }());\n            return _context11.abrupt(\"return\", promise);\n\n          case 10:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _getSignaturePersonal.apply(this, arguments);\n}\n\neventEmitter.on(EVENTS.SMART_CONTRACT_DATA_READY, function (dappId, engine) {\n  // Get DApp API information from Database\n  var getAPIInfoAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/meta-api\");\n  fetch(getAPIInfoAPI, getFetchOptions(\"GET\", engine.apiKey)).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response && response.listApis) {\n      var apiList = response.listApis;\n\n      for (var i = 0; i < apiList.length; i++) {\n        var contractAddress = apiList[i].contractAddress; // TODO: In case of SCW(Smart Contract Wallet) there'll be no contract address. Save SCW as key in that case.\n\n        if (contractAddress) {\n          if (!engine.dappAPIMap[contractAddress]) {\n            engine.dappAPIMap[contractAddress] = {};\n          }\n\n          engine.dappAPIMap[contractAddress][apiList[i].method] = apiList[i];\n        } else {\n          if (!engine.dappAPIMap[config.SCW]) {\n            engine.dappAPIMap[config.SCW] = {};\n          }\n\n          engine.dappAPIMap[config.SCW][apiList[i].method] = apiList[i];\n        }\n      }\n\n      eventEmitter.emit(EVENTS.DAPP_API_DATA_READY, engine);\n    }\n  })[\"catch\"](function (error) {\n    _logMessage(error);\n  });\n});\neventEmitter.on(EVENTS.HELPER_CLENTS_READY, /*#__PURE__*/function () {\n  var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(engine) {\n    var biconomyAttributes, ethersProvider, signer, signerOrProvider, isSignerWithAccounts, erc20ForwarderAddress, transferHandlerAddress, erc20Forwarder, oracleAggregatorAddress, feeManagerAddress, forwarderAddress, oracleAggregator, feeManager, forwarder, transferHandler, tokenGasPriceV1SupportedNetworks;\n    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            biconomyAttributes = {\n              apiKey: engine.apiKey,\n              dappAPIMap: engine.dappAPIMap,\n              decoderMap: decoderMap,\n              signType: {\n                EIP712_SIGN: engine.EIP712_SIGN,\n                PERSONAL_SIGN: engine.PERSONAL_SIGN\n              }\n            };\n\n            if (engine.isEthersProviderPresent) {\n              ethersProvider = engine.originalProvider;\n            } else {\n              ethersProvider = new ethers.providers.Web3Provider(engine.originalProvider);\n            }\n\n            signer = ethersProvider.getSigner();\n            signerOrProvider = signer;\n            isSignerWithAccounts = true;\n            _context5.prev = 6;\n            _context5.next = 9;\n            return signer.getAddress();\n\n          case 9:\n            engine.canSignMessages = true;\n            _context5.next = 18;\n            break;\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](6);\n\n            _logMessage(\"Given provider does not have accounts information\");\n\n            signerOrProvider = ethersProvider;\n            isSignerWithAccounts = false;\n            engine.canSignMessages = false;\n\n          case 18:\n            erc20ForwarderAddress = engine.options.erc20ForwarderAddress || engine.erc20ForwarderAddress;\n            transferHandlerAddress = engine.options.transferHandlerAddress || engine.transferHandlerAddress;\n\n            if (!erc20ForwarderAddress) {\n              _context5.next = 42;\n              break;\n            }\n\n            erc20Forwarder = new ethers.Contract(erc20ForwarderAddress, erc20ForwarderAbi, signerOrProvider);\n            _context5.next = 24;\n            return erc20Forwarder.oracleAggregator();\n\n          case 24:\n            oracleAggregatorAddress = _context5.sent;\n            _context5.next = 27;\n            return erc20Forwarder.feeManager();\n\n          case 27:\n            feeManagerAddress = _context5.sent;\n            _context5.next = 30;\n            return erc20Forwarder.forwarder();\n\n          case 30:\n            forwarderAddress = _context5.sent;\n            oracleAggregator = new ethers.Contract(oracleAggregatorAddress, oracleAggregatorAbi, signerOrProvider);\n            feeManager = new ethers.Contract(feeManagerAddress, feeManagerAbi, signerOrProvider); //If ERC20 Forwarder Address exits then it would have configured Forwarder \n\n            forwarder = new ethers.Contract(forwarderAddress, biconomyForwarderAbi, signerOrProvider);\n            transferHandler = new ethers.Contract(transferHandlerAddress, transferHandlerAbi, signerOrProvider);\n            tokenGasPriceV1SupportedNetworks = engine.tokenGasPriceV1SupportedNetworks;\n            engine.permitClient = new PermitClient(engine, erc20ForwarderAddress, engine.daiTokenAddress);\n            engine.erc20ForwarderClient = new ERC20ForwarderClient({\n              forwarderClientOptions: biconomyAttributes,\n              networkId: engine.networkId,\n              provider: ethersProvider,\n              forwarderDomainData: forwarderDomainData,\n              forwarderDomainType: forwarderDomainType,\n              erc20Forwarder: erc20Forwarder,\n              transferHandler: transferHandler,\n              forwarder: forwarder,\n              oracleAggregator: oracleAggregator,\n              feeManager: feeManager,\n              isSignerWithAccounts: isSignerWithAccounts,\n              tokenGasPriceV1SupportedNetworks: tokenGasPriceV1SupportedNetworks,\n              trustedForwarderOverhead: trustedForwarderOverhead,\n              daiPermitOverhead: daiPermitOverhead,\n              eip2612PermitOverhead: eip2612PermitOverhead\n            });\n\n            _logMessage(engine.permitClient);\n\n            _logMessage(engine.erc20ForwarderClient);\n\n            _context5.next = 43;\n            break;\n\n          case 42:\n            _logMessage(\"ERC20 Forwarder is not supported for this network\"); //Warning : you would not be able to use ERC20ForwarderClient and PermitClient \n\n\n          case 43:\n            engine.status = STATUS.BICONOMY_READY;\n            eventEmitter.emit(STATUS.BICONOMY_READY);\n            _context5.next = 50;\n            break;\n\n          case 47:\n            _context5.prev = 47;\n            _context5.t1 = _context5[\"catch\"](0);\n\n            _logMessage(_context5.t1);\n\n          case 50:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 47], [6, 12]]);\n  }));\n\n  return function (_x19) {\n    return _ref5.apply(this, arguments);\n  };\n}());\neventEmitter.on(EVENTS.DAPP_API_DATA_READY, function (engine) {\n  eventEmitter.emit(EVENTS.HELPER_CLENTS_READY, engine);\n});\n/**\n * Get user account from current provider using eth_accounts method.\n **/\n\nfunction _getUserAccount(engine, payload, cb) {\n  if (engine) {\n    var id = DEFAULT_PAYLOAD_ID;\n\n    if (payload) {\n      id = payload.id;\n    }\n\n    if (cb) {\n      engine.originalProvider.send({\n        jsonrpc: JSON_RPC_VERSION,\n        id: id,\n        method: \"eth_accounts\",\n        params: []\n      }, function (error, response) {\n        cb(error, response);\n      });\n    } else {\n      return new Promise(function (resolve, reject) {\n        engine.originalProvider.send({\n          jsonrpc: JSON_RPC_VERSION,\n          id: id,\n          method: \"eth_accounts\",\n          params: []\n        }, function (error, res) {\n          if (error) {\n            reject(error);\n          } else if (!res.result) {\n            reject(\"Invalid response \".concat(res));\n          } else {\n            resolve(res.result[0]);\n          }\n        });\n      });\n    }\n  }\n}\n/**\n * Validate parameters passed to biconomy object. Dapp id and api key are mandatory.\n **/\n\n\nfunction _validate(options) {\n  if (!options) {\n    throw new Error(\"Options object needs to be passed to Biconomy Object with apiKey as mandatory key\");\n  }\n\n  if (!options.apiKey) {\n    throw new Error(\"apiKey is required in options object when creating Biconomy object\");\n  }\n}\n/**\n * Get paramter value from param object based on its type.\n **/\n\n\nfunction _getParamValue(paramObj) {\n  var value;\n\n  try {\n    if (paramObj && paramObj.type == \"bytes\" && (!paramObj.value || paramObj.value == undefined || paramObj.value == null)) {\n      value = \"0x\";\n      return value;\n    }\n\n    if (paramObj && paramObj.value) {\n      var type = paramObj.type;\n\n      switch (type) {\n        //only int/uint 1D arrays\n        case (type.match(/^uint.*\\[\\]^\\[$/) || type.match(/^int.*\\[\\]^\\[$/) || {}).input:\n          var val = paramObj.value;\n          value = [];\n\n          for (var j = 0; j < val.length; j++) {\n            value[j] = scientificToDecimal(val[j]);\n            if (value[j]) value[j] = ethers.BigNumber.from(value[j]).toHexString();\n          }\n\n          break;\n        //only int/uint 2D arrays  \n\n        case (type.match(/^uint.*\\[\\]\\[\\]$/) || type.match(/^int.*\\[\\]\\[\\]$/) || {}).input:\n          //verify if its altually alright to return as it is!\n          //value = paramObj.value;\n          //break;\n          var multiArray = paramObj.value;\n          value = new Array();\n\n          for (var _j = 0; _j < multiArray.length; _j++) {\n            var innerArray = multiArray[_j];\n\n            for (var k = 0; k < innerArray.length; k++) {\n              var newInnerArray = new Array();\n              newInnerArray[k] = scientificToDecimal(innerArray[k]);\n              if (newInnerArray[k]) newInnerArray[k] = ethers.BigNumber.from(newInnerArray[k]).toHexString();\n            }\n\n            value.push(newInnerArray);\n          }\n\n          break;\n        //only uint/int \n\n        case (type.match(/^uint[0-9]*$/) || type.match(/^int[0-9]*$/) || {}).input:\n          value = scientificToDecimal(paramObj.value); //https://docs.ethers.io/v5/api/utils/bignumber/#BigNumber--notes\n\n          if (value) value = ethers.BigNumber.from(value).toHexString();\n          break;\n\n        case \"string\":\n          if ((0, _typeof2[\"default\"])(paramObj.value) === \"object\") {\n            value = paramObj.value.toString();\n          } else {\n            value = paramObj.value;\n          }\n\n          break;\n\n        default:\n          value = paramObj.value;\n          break;\n      }\n    }\n\n    return value;\n  } catch (error) {\n    _logMessage(error);\n\n    throw new Error(\"Error occured while sanitizing paramters. Please verify your method parameters or contact support\");\n  }\n}\n/**\n * Method to send the transaction to biconomy server and call the callback method\n * to pass the result of meta transaction to web3 function call.\n * @param engine Object representing biconomy provider engine\n * @param account User selected account on current wallet\n * @param api API object got from biconomy server\n * @param data Data to be sent to biconomy server having transaction data\n * @param cb Callback method to be called to pass result or send error\n **/\n\n\nfunction _sendTransaction(_x20, _x21, _x22, _x23, _x24) {\n  return _sendTransaction2.apply(this, arguments);\n}\n/**\n * Function to initialize the biconomy object with DApp information.\n * It fetches the dapp's smart contract from biconomy database and initialize the decoders for each smart\n * contract which will be used to decode information during function calls.\n * @param dappId Id for dapp whos information is to be fetched\n * @param apiKey API key used to authenticate the request at biconomy server\n * @param _this object representing biconomy provider\n **/\n\n\nfunction _sendTransaction2() {\n  _sendTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(engine, account, api, data, cb) {\n    var url, fetchOption;\n    return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            if (engine && account && api && data) {\n              url = api.url;\n              fetchOption = getFetchOptions(\"POST\", engine.apiKey);\n              fetchOption.body = JSON.stringify(data);\n              fetch(\"\".concat(baseURL).concat(url), fetchOption).then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                _logMessage(result);\n\n                if (!result.txHash && result.flag != BICONOMY_RESPONSE_CODES.ACTION_COMPLETE && result.flag != BICONOMY_RESPONSE_CODES.SUCCESS) {\n                  var error = {};\n                  error.code = result.flag || result.code;\n\n                  if (result.flag == BICONOMY_RESPONSE_CODES.USER_CONTRACT_NOT_FOUND) {\n                    error.code = RESPONSE_CODES.USER_CONTRACT_NOT_FOUND;\n                  }\n\n                  error.message = result.log || result.message;\n                  if (cb) cb(error);\n                } else {\n                  if (cb) cb(null, result.txHash);\n                }\n              })[\"catch\"](function (error) {\n                _logMessage(error);\n\n                if (cb) cb(error);\n              });\n            } else {\n              _logMessage(\"Invalid arguments, provider: \".concat(engine, \" account: \").concat(account, \" api: \").concat(api, \" data: \").concat(data));\n\n              if (cb) cb(\"Invalid arguments, provider: \".concat(engine, \" account: \").concat(account, \" api: \").concat(api, \" data: \").concat(data), null);\n            }\n\n          case 1:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _sendTransaction2.apply(this, arguments);\n}\n\nfunction _init(_x25, _x26) {\n  return _init2.apply(this, arguments);\n}\n\nfunction _init2() {\n  _init2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(apiKey, engine) {\n    var getDappAPI;\n    return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.prev = 0;\n            _context14.next = 3;\n            return engine.ethersProvider.getSigner();\n\n          case 3:\n            engine.signer = _context14.sent;\n            // Check current network id and dapp network id registered on dashboard\n            getDappAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/dapp\");\n            fetch(getDappAPI, getFetchOptions(\"GET\", apiKey)).then(function (response) {\n              return response.json();\n            }).then( /*#__PURE__*/function () {\n              var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(dappResponse) {\n                var dappNetworkId, dappId, getNetworkIdOption, providerNetworkId;\n                return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        _logMessage(dappResponse);\n\n                        if (!(dappResponse && dappResponse.dapp)) {\n                          _context13.next = 21;\n                          break;\n                        }\n\n                        dappNetworkId = dappResponse.dapp.networkId;\n                        dappId = dappResponse.dapp._id;\n\n                        _logMessage(\"Network id corresponding to dapp id \".concat(dappId, \" is \").concat(dappNetworkId));\n\n                        getNetworkIdOption = {\n                          jsonrpc: JSON_RPC_VERSION,\n                          id: \"102\",\n                          method: \"eth_chainId\",\n                          params: []\n                        };\n\n                        if (!isEthersProvider(engine.originalProvider)) {\n                          _context13.next = 18;\n                          break;\n                        }\n\n                        _context13.next = 9;\n                        return engine.originalProvider.send(\"eth_chainId\", []);\n\n                      case 9:\n                        providerNetworkId = _context13.sent;\n\n                        if (!providerNetworkId) {\n                          _context13.next = 15;\n                          break;\n                        }\n\n                        providerNetworkId = parseInt(providerNetworkId.toString());\n                        onNetworkId(engine, {\n                          providerNetworkId: providerNetworkId,\n                          dappNetworkId: dappNetworkId,\n                          apiKey: apiKey,\n                          dappId: dappId\n                        });\n                        _context13.next = 16;\n                        break;\n\n                      case 15:\n                        return _context13.abrupt(\"return\", eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_NOT_FOUND, \"Could not get network version\"), \"Could not get network version\"));\n\n                      case 16:\n                        _context13.next = 19;\n                        break;\n\n                      case 18:\n                        engine.originalProvider.send(getNetworkIdOption, function (error, networkResponse) {\n                          if (error || networkResponse && networkResponse.error) {\n                            return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_NOT_FOUND, \"Could not get network version\"), error || networkResponse.error);\n                          } else {\n                            var _providerNetworkId = parseInt(networkResponse.result.toString());\n\n                            onNetworkId(engine, {\n                              providerNetworkId: _providerNetworkId,\n                              dappNetworkId: dappNetworkId,\n                              apiKey: apiKey,\n                              dappId: dappId\n                            });\n                          }\n                        });\n\n                      case 19:\n                        _context13.next = 22;\n                        break;\n\n                      case 21:\n                        if (dappResponse.log) {\n                          eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, dappResponse.log));\n                        } else {\n                          eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.DAPP_NOT_FOUND, \"No Dapp Registered with apikey \".concat(apiKey)));\n                        }\n\n                      case 22:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee13);\n              }));\n\n              return function (_x33) {\n                return _ref9.apply(this, arguments);\n              };\n            }())[\"catch\"](function (error) {\n              eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), error);\n            });\n            _context14.next = 11;\n            break;\n\n          case 8:\n            _context14.prev = 8;\n            _context14.t0 = _context14[\"catch\"](0);\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), _context14.t0);\n\n          case 11:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[0, 8]]);\n  }));\n  return _init2.apply(this, arguments);\n}\n\nfunction isEthersProvider(provider) {\n  return ethers.providers.Provider.isProvider(provider);\n}\n\nfunction onNetworkId(_x27, _x28) {\n  return _onNetworkId.apply(this, arguments);\n}\n\nfunction _onNetworkId() {\n  _onNetworkId = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(engine, _ref6) {\n    var providerNetworkId, dappNetworkId, apiKey, dappId;\n    return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            providerNetworkId = _ref6.providerNetworkId, dappNetworkId = _ref6.dappNetworkId, apiKey = _ref6.apiKey, dappId = _ref6.dappId;\n            engine.networkId = providerNetworkId;\n\n            _logMessage(\"Current provider network id: \".concat(providerNetworkId));\n\n            if (!(providerNetworkId != dappNetworkId)) {\n              _context15.next = 7;\n              break;\n            }\n\n            return _context15.abrupt(\"return\", eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_MISMATCH, \"Current networkId \".concat(providerNetworkId, \" is different from dapp network id registered on mexa dashboard \").concat(dappNetworkId))));\n\n          case 7:\n            domainData.chainId = providerNetworkId;\n            daiDomainData.chainId = providerNetworkId;\n            fetch(\"\".concat(baseURL, \"/api/\").concat(config.version2, \"/meta-tx/systemInfo?networkId=\").concat(providerNetworkId)).then(function (response) {\n              return response.json();\n            }).then(function (systemInfo) {\n              if (systemInfo) {\n                domainType = systemInfo.domainType;\n                forwarderDomainType = systemInfo.forwarderDomainType;\n                metaInfoType = systemInfo.metaInfoType;\n                relayerPaymentType = systemInfo.relayerPaymentType;\n                metaTransactionType = systemInfo.metaTransactionType;\n                loginDomainType = systemInfo.loginDomainType;\n                loginMessageType = systemInfo.loginMessageType;\n                loginDomainData = systemInfo.loginDomainData;\n                forwardRequestType = systemInfo.forwardRequestType;\n                forwarderDomainData = systemInfo.forwarderDomainData;\n                trustedForwarderOverhead = systemInfo.overHeadEIP712Sign;\n                daiPermitOverhead = systemInfo.overHeadDaiPermit;\n                eip2612PermitOverhead = systemInfo.overHeadEIP2612Permit;\n                engine.forwarderAddress = systemInfo.biconomyForwarderAddress;\n                engine.erc20ForwarderAddress = systemInfo.erc20ForwarderAddress;\n                engine.transferHandlerAddress = systemInfo.transferHandlerAddress;\n                engine.daiTokenAddress = systemInfo.daiTokenAddress;\n                engine.usdtTokenAddress = systemInfo.usdtTokenAddress;\n                engine.usdcTokenAddress = systemInfo.usdcTokenAddress;\n                engine.TRUSTED_FORWARDER = systemInfo.trustedForwarderMetaTransaction;\n                engine.ERC20_FORWARDER = systemInfo.erc20ForwarderMetaTransaction;\n                engine.DEFAULT = systemInfo.defaultMetaTransaction;\n                engine.EIP712_SIGN = systemInfo.eip712Sign;\n                engine.PERSONAL_SIGN = systemInfo.personalSign;\n                engine.tokenGasPriceV1SupportedNetworks = systemInfo.tokenGasPriceV1SupportedNetworks;\n                daiDomainData.verifyingContract = engine.daiTokenAddress;\n\n                if (systemInfo.relayHubAddress) {\n                  domainData.verifyingContract = systemInfo.relayHubAddress;\n                }\n              } else {\n                return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.INVALID_DATA, \"Could not get signature types from server. Contact Biconomy Team\"));\n              } // check if Valid trusted forwarder address is present from system info\n\n\n              if (engine.forwarderAddress && engine.forwarderAddress != \"\") {\n                biconomyForwarder = new ethers.Contract(engine.forwarderAddress, biconomyForwarderAbi, engine.ethersProvider);\n              } // Get dapps smart contract data from biconomy servers\n\n\n              var getDAppInfoAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/smart-contract\");\n              fetch(getDAppInfoAPI, getFetchOptions(\"GET\", apiKey)).then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                if (!result && result.flag != 143) {\n                  return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"Error getting smart contract for dappId \".concat(dappId)));\n                }\n\n                var smartContractList = result.smartContracts;\n\n                if (smartContractList && smartContractList.length > 0) {\n                  smartContractList.forEach(function (contract) {\n                    var abiDecoder = require(\"abi-decoder\");\n\n                    if (contract.type === config.SCW) {\n                      smartContractMetaTransactionMap[config.SCW] = contract.metaTransactionType;\n                      abiDecoder.addABI(JSON.parse(contract.abi));\n                      decoderMap[config.SCW] = abiDecoder;\n                      smartContractMap[config.SCW] = contract.abi;\n                    } else {\n                      smartContractMetaTransactionMap[contract.address.toLowerCase()] = contract.metaTransactionType;\n                      abiDecoder.addABI(JSON.parse(contract.abi));\n                      decoderMap[contract.address.toLowerCase()] = abiDecoder;\n                      smartContractMap[contract.address.toLowerCase()] = contract.abi;\n                    }\n                  });\n\n                  _logMessage(smartContractMetaTransactionMap);\n\n                  _checkUserLogin(engine, dappId);\n                } else {\n                  if (engine.strictMode) {\n                    engine.status = STATUS.NO_DATA;\n                    eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"No smart contract registered for dappId \".concat(dappId, \" on Mexa Dashboard\")));\n                  } else {\n                    _checkUserLogin(engine, dappId);\n                  }\n                }\n              })[\"catch\"](function (error) {\n                eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), error);\n              });\n            });\n\n          case 10:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _onNetworkId.apply(this, arguments);\n}\n\nfunction _checkUserLogin(_x29, _x30) {\n  return _checkUserLogin2.apply(this, arguments);\n}\n\nfunction _checkUserLogin2() {\n  _checkUserLogin2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16(engine, dappId) {\n    return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            eventEmitter.emit(EVENTS.SMART_CONTRACT_DATA_READY, dappId, engine);\n\n          case 1:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n  return _checkUserLogin2.apply(this, arguments);\n}\n\nBiconomy.prototype.isReady = function () {\n  return this.status === STATUS.BICONOMY_READY;\n};\n\nBiconomy.prototype.getUserAccount = /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6() {\n  return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _getUserAccount(this);\n\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6, this);\n}));\n\nfunction getFetchOptions(method, apiKey) {\n  return {\n    method: method,\n    headers: {\n      \"x-api-key\": apiKey,\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  };\n}\n\nfunction formatMessage(code, message) {\n  return {\n    code: code,\n    message: message\n  };\n}\n/**\n * Single method to be used for logging purpose.\n *\n * @param {string} message Message to be logged\n */\n\n\nfunction _logMessage(message) {\n  if (config && config.logsEnabled && console.log) {\n    console.log(message);\n  }\n}\n\nvar scientificToDecimal = function scientificToDecimal(num) {\n  var result; // If the number is not in scientific notation return it as it is.\n\n  if (!/\\d+\\.?\\d*e[+-]*\\d+/i.test(num)) {\n    result = num.toLocaleString('fullwide', {\n      useGrouping: false\n    });\n    return result.toString();\n  }\n\n  var nsign = Math.sign(Number(num)); // remove the sign\n\n  num = Math.abs(Number(num)).toString(); // if the number is in scientific notation remove it\n\n  var zero = \"0\",\n      parts = String(num).toLowerCase().split(\"e\"),\n      // split into coeff and exponent\n  e = parts.pop(),\n      // store the exponential part\n  l = Math.abs(e),\n      // get the number of zeros\n  sign = e / l,\n      coeff_array = parts[0].split(\".\");\n\n  if (sign === -1) {\n    l = l - coeff_array[0].length;\n\n    if (l < 0) {\n      num = coeff_array[0].slice(0, l) + \".\" + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : \"\");\n    } else {\n      num = zero + \".\" + new Array(l + 1).join(zero) + coeff_array.join(\"\");\n    }\n  } else {\n    var dec = coeff_array[1];\n    if (dec) l = l - dec.length;\n\n    if (l < 0) {\n      num = coeff_array[0] + dec.slice(0, l) + \".\" + dec.slice(l);\n    } else {\n      num = coeff_array.join(\"\") + new Array(l + 1).join(zero);\n    }\n  }\n\n  result = nsign < 0 ? \"-\" + num : num;\n  return result.toString();\n};\n\nmodule.exports = Biconomy;"]},"metadata":{},"sourceType":"script"}