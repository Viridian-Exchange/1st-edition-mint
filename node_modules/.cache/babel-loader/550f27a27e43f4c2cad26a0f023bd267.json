{"ast":null,"code":"import { useEffect, useRef, useState } from \"react\";\nvar PRESS_TYPES;\n\n(function (PRESS_TYPES) {\n  PRESS_TYPES[\"idle\"] = \"idle\";\n  PRESS_TYPES[\"pressstart\"] = \"pressstart\";\n  PRESS_TYPES[\"press\"] = \"press\";\n  PRESS_TYPES[\"pressend\"] = \"pressend\";\n})(PRESS_TYPES || (PRESS_TYPES = {}));\n\nvar usePress = function (callback, ref) {\n  var _a = useState(PRESS_TYPES.idle),\n      currentState = _a[0],\n      setCurrentState = _a[1];\n\n  var callbackRef = useRef(callback);\n  useEffect(function () {\n    callbackRef.current = callback;\n  }, [callback]);\n  useEffect(function () {\n    callbackRef.current(currentState);\n  }, [currentState, callbackRef]);\n  var pressStartRef = useRef();\n  var pressRef = useRef();\n  var pressedRef = useRef();\n  useEffect(function () {\n    var htmlElement = ref.current;\n\n    var start = function (event) {\n      var setStart = function () {\n        return setCurrentState(PRESS_TYPES.pressstart);\n      };\n\n      var setPress = function () {\n        return setCurrentState(PRESS_TYPES.press);\n      };\n\n      var setPressed = function () {\n        return setCurrentState(PRESS_TYPES.pressend);\n      };\n\n      pressStartRef.current = setTimeout(function () {\n        return setStart();\n      }, 150);\n      pressRef.current = setTimeout(function () {\n        return setPress();\n      }, 200);\n      pressedRef.current = setTimeout(function () {\n        return setPressed();\n      }, 700);\n    };\n\n    var abort = function (event) {\n      clearTimeout(pressStartRef.current);\n      clearTimeout(pressRef.current);\n      clearTimeout(pressedRef.current);\n\n      var setIdle = function () {\n        return setCurrentState(PRESS_TYPES.idle);\n      };\n\n      setIdle();\n    };\n\n    if (htmlElement) {\n      htmlElement.addEventListener(\"mousedown\", start);\n      htmlElement.addEventListener(\"touchstart\", start);\n      htmlElement.addEventListener(\"mouseup\", abort);\n      htmlElement.addEventListener(\"touchend\", abort);\n    }\n\n    return function () {\n      if (htmlElement) {\n        htmlElement.removeEventListener(\"mousedown\", start);\n        htmlElement.removeEventListener(\"touchstart\", start);\n        htmlElement.removeEventListener(\"mouseup\", abort);\n        htmlElement.removeEventListener(\"touchend\", abort);\n      }\n    };\n  }, [ref, currentState, pressRef, pressStartRef, pressedRef]);\n  return currentState;\n};\n\nexport { usePress, PRESS_TYPES };","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/node_modules/react-transitions-library/dist/hooks/use-press/usePress.js"],"names":["useEffect","useRef","useState","PRESS_TYPES","usePress","callback","ref","_a","idle","currentState","setCurrentState","callbackRef","current","pressStartRef","pressRef","pressedRef","htmlElement","start","event","setStart","pressstart","setPress","press","setPressed","pressend","setTimeout","abort","clearTimeout","setIdle","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nvar PRESS_TYPES;\n(function (PRESS_TYPES) {\n    PRESS_TYPES[\"idle\"] = \"idle\";\n    PRESS_TYPES[\"pressstart\"] = \"pressstart\";\n    PRESS_TYPES[\"press\"] = \"press\";\n    PRESS_TYPES[\"pressend\"] = \"pressend\";\n})(PRESS_TYPES || (PRESS_TYPES = {}));\nvar usePress = function (callback, ref) {\n    var _a = useState(PRESS_TYPES.idle), currentState = _a[0], setCurrentState = _a[1];\n    var callbackRef = useRef(callback);\n    useEffect(function () {\n        callbackRef.current = callback;\n    }, [callback]);\n    useEffect(function () {\n        callbackRef.current(currentState);\n    }, [currentState, callbackRef]);\n    var pressStartRef = useRef();\n    var pressRef = useRef();\n    var pressedRef = useRef();\n    useEffect(function () {\n        var htmlElement = ref.current;\n        var start = function (event) {\n            var setStart = function () { return setCurrentState(PRESS_TYPES.pressstart); };\n            var setPress = function () { return setCurrentState(PRESS_TYPES.press); };\n            var setPressed = function () { return setCurrentState(PRESS_TYPES.pressend); };\n            pressStartRef.current = setTimeout(function () { return setStart(); }, 150);\n            pressRef.current = setTimeout(function () { return setPress(); }, 200);\n            pressedRef.current = setTimeout(function () { return setPressed(); }, 700);\n        };\n        var abort = function (event) {\n            clearTimeout(pressStartRef.current);\n            clearTimeout(pressRef.current);\n            clearTimeout(pressedRef.current);\n            var setIdle = function () { return setCurrentState(PRESS_TYPES.idle); };\n            setIdle();\n        };\n        if (htmlElement) {\n            htmlElement.addEventListener(\"mousedown\", start);\n            htmlElement.addEventListener(\"touchstart\", start);\n            htmlElement.addEventListener(\"mouseup\", abort);\n            htmlElement.addEventListener(\"touchend\", abort);\n        }\n        return function () {\n            if (htmlElement) {\n                htmlElement.removeEventListener(\"mousedown\", start);\n                htmlElement.removeEventListener(\"touchstart\", start);\n                htmlElement.removeEventListener(\"mouseup\", abort);\n                htmlElement.removeEventListener(\"touchend\", abort);\n            }\n        };\n    }, [ref, currentState, pressRef, pressStartRef, pressedRef]);\n    return currentState;\n};\nexport { usePress, PRESS_TYPES };\n"]},"metadata":{},"sourceType":"module"}