{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _require = require(\"./abis\"),\n    daiAbi = _require.daiAbi,\n    erc20Eip2612Abi = _require.erc20Eip2612Abi;\n\nvar _require2 = require(\"ethers\"),\n    ethers = _require2.ethers;\n\nvar _require3 = require(\"./config\"),\n    config = _require3.config;\n\nvar daiDomainData = {\n  name: config.daiDomainName,\n  version: config.daiVersion\n};\n/**\n * Single method to be used for logging purpose.\n *\n * @param {string} message Message to be logged\n */\n\nfunction _logMessage(message) {\n  if (config && config.logsEnabled && console.log) {\n    console.log(message);\n  }\n}\n\nfunction isEthersProvider(provider) {\n  return ethers.providers.Provider.isProvider(provider);\n}\n/**\n * Class to provide methods to give token transfer permissions to Biconomy's ERC20Forwarder smart contract\n * ERC20Forwarder contract is responsible to calculate gas cost in ERC20 tokens and making a transfer on user's behalf\n * For DAI token there is a special permit method provided\n * For Tokens that support EIP2612 standard (like USDC) users should use eip2612Permit\n * Check https://docs.biconomy.io to see examples of how to use permit client to give one time token approvals\n */\n\n\nvar PermitClient = /*#__PURE__*/function () {\n  function PermitClient(provider, erc20ForwarderAddress, daiTokenAddress) {\n    (0, _classCallCheck2[\"default\"])(this, PermitClient);\n\n    if (isEthersProvider(provider)) {\n      this.provider = provider;\n    } else {\n      this.provider = new ethers.providers.Web3Provider(provider);\n    }\n\n    this.erc20ForwarderAddress = erc20ForwarderAddress;\n    this.daiTokenAddress = daiTokenAddress;\n    this.daiDomainData = daiDomainData;\n  }\n  /**\n   * method to provide permission to spend dai tokens to a desired spender\n   * @param {object} daiPermitOptions - dai permit options contains i) spender ii) expiry iii) user address iv) allowed\n   * All of the above options are optional\n   * If spender is not provided by default approval will be given to ERC20 Forwarder contract on the same network as your provider\n   * When your provider does not have a signer you must pass user address\n   */\n\n\n  (0, _createClass2[\"default\"])(PermitClient, [{\n    key: \"daiPermit\",\n    value: function () {\n      var _daiPermit = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(daiPermitOptions) {\n        var spender, expiry, allowed, userAddress, network, dai, nonce, permitDataToSign, result, signature, r, s, v, tx;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                spender = daiPermitOptions.spender || this.erc20ForwarderAddress;\n                expiry = daiPermitOptions.expiry || Math.floor(Date.now() / 1000 + 3600);\n                allowed = daiPermitOptions.allowed || true;\n                _context.t0 = daiPermitOptions.userAddress;\n\n                if (_context.t0) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 8;\n                return this.provider.getSigner().getAddress();\n\n              case 8:\n                _context.t0 = _context.sent;\n\n              case 9:\n                userAddress = _context.t0;\n                _context.next = 12;\n                return this.provider.getNetwork();\n\n              case 12:\n                network = _context.sent;\n                daiDomainData.chainId = network.chainId;\n                daiDomainData.verifyingContract = this.daiTokenAddress;\n                dai = new ethers.Contract(this.daiDomainData.verifyingContract, daiAbi, this.provider.getSigner());\n                _context.next = 18;\n                return dai.nonces(userAddress);\n\n              case 18:\n                nonce = _context.sent;\n                permitDataToSign = {\n                  types: {\n                    EIP712Domain: config.domainType,\n                    Permit: config.daiPermitType\n                  },\n                  domain: this.daiDomainData,\n                  primaryType: \"Permit\",\n                  message: {\n                    holder: userAddress,\n                    spender: spender,\n                    nonce: parseInt(nonce),\n                    expiry: parseInt(expiry),\n                    allowed: true\n                  }\n                };\n                _context.next = 22;\n                return this.provider.send(\"eth_signTypedData_v4\", [userAddress, JSON.stringify(permitDataToSign)]);\n\n              case 22:\n                result = _context.sent;\n\n                _logMessage(\"success\", result);\n\n                signature = result.substring(2);\n                r = \"0x\" + signature.substring(0, 64);\n                s = \"0x\" + signature.substring(64, 128);\n                v = parseInt(signature.substring(128, 130), 16);\n                _context.next = 30;\n                return dai.permit(userAddress, spender, parseInt(nonce), parseInt(expiry.toString()), allowed, v, r, s);\n\n              case 30:\n                tx = _context.sent;\n                return _context.abrupt(\"return\", tx);\n\n              case 34:\n                _context.prev = 34;\n                _context.t1 = _context[\"catch\"](0);\n\n                _logMessage(_context.t1);\n\n                throw _context.t1;\n\n              case 38:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 34]]);\n      }));\n\n      function daiPermit(_x) {\n        return _daiPermit.apply(this, arguments);\n      }\n\n      return daiPermit;\n    }()\n    /**\n     * method to provide permission to spend tokens that support EIP2612 Permit\n     * @param {object} permitOptions - permit options contain domainData, spender, value, deadline, userAddress\n     * domainData and value are manadatory options (check https://biconomy.docs.io to see a working example of this)\n     * If spender is not provided by default approval will be given to ERC20 Forwarder contract on the same network as your provider\n     * When your provider does not have a signer you must pass user address\n     */\n\n  }, {\n    key: \"eip2612Permit\",\n    value: function () {\n      var _eip2612Permit = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(permitOptions) {\n        var tokenDomainData, spender, value, deadline, userAddress, token, nonce, permitDataToSign, result, signature, r, s, v, tx;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                tokenDomainData = permitOptions.domainData;\n                spender = permitOptions.spender || this.erc20ForwarderAddress;\n                value = permitOptions.value;\n                deadline = permitOptions.deadline || Math.floor(Date.now() / 1000 + 3600);\n                _context2.t0 = permitOptions.userAddress;\n\n                if (_context2.t0) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 9;\n                return this.provider.getSigner().getAddress();\n\n              case 9:\n                _context2.t0 = _context2.sent;\n\n              case 10:\n                userAddress = _context2.t0;\n                token = new ethers.Contract(tokenDomainData.verifyingContract, erc20Eip2612Abi, this.provider.getSigner());\n                _context2.next = 14;\n                return token.nonces(userAddress);\n\n              case 14:\n                nonce = _context2.sent;\n                permitDataToSign = {\n                  types: {\n                    EIP712Domain: config.domainType,\n                    Permit: config.eip2612PermitType\n                  },\n                  domain: tokenDomainData,\n                  primaryType: \"Permit\",\n                  message: {\n                    owner: userAddress,\n                    spender: spender,\n                    nonce: parseInt(nonce),\n                    value: value,\n                    deadline: parseInt(deadline)\n                  }\n                };\n                _context2.next = 18;\n                return this.provider.send(\"eth_signTypedData_v4\", [userAddress, JSON.stringify(permitDataToSign)]);\n\n              case 18:\n                result = _context2.sent;\n\n                _logMessage(\"success\", result);\n\n                signature = result.substring(2);\n                r = \"0x\" + signature.substring(0, 64);\n                s = \"0x\" + signature.substring(64, 128);\n                v = parseInt(signature.substring(128, 130), 16);\n                _context2.next = 26;\n                return token.permit(userAddress, spender, value, parseInt(deadline.toString()), v, r, s);\n\n              case 26:\n                tx = _context2.sent;\n                return _context2.abrupt(\"return\", tx);\n\n              case 30:\n                _context2.prev = 30;\n                _context2.t1 = _context2[\"catch\"](0);\n\n                _logMessage(_context2.t1);\n\n                throw _context2.t1;\n\n              case 34:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 30]]);\n      }));\n\n      function eip2612Permit(_x2) {\n        return _eip2612Permit.apply(this, arguments);\n      }\n\n      return eip2612Permit;\n    }()\n  }]);\n  return PermitClient;\n}();\n\nmodule.exports = PermitClient;","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/node_modules/@biconomy/mexa/common-js/PermitClient.js"],"names":["_interopRequireDefault","require","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","_require","daiAbi","erc20Eip2612Abi","_require2","ethers","_require3","config","daiDomainData","name","daiDomainName","version","daiVersion","_logMessage","message","logsEnabled","console","log","isEthersProvider","provider","providers","Provider","isProvider","PermitClient","erc20ForwarderAddress","daiTokenAddress","Web3Provider","key","value","_daiPermit","mark","_callee","daiPermitOptions","spender","expiry","allowed","userAddress","network","dai","nonce","permitDataToSign","result","signature","r","s","v","tx","wrap","_callee$","_context","prev","next","Math","floor","Date","now","t0","getSigner","getAddress","sent","getNetwork","chainId","verifyingContract","Contract","nonces","types","EIP712Domain","domainType","Permit","daiPermitType","domain","primaryType","holder","parseInt","send","JSON","stringify","substring","permit","toString","abrupt","t1","stop","daiPermit","_x","apply","arguments","_eip2612Permit","_callee2","permitOptions","tokenDomainData","deadline","token","_callee2$","_context2","domainData","eip2612PermitType","owner","eip2612Permit","_x2","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _require = require(\"./abis\"),\n    daiAbi = _require.daiAbi,\n    erc20Eip2612Abi = _require.erc20Eip2612Abi;\n\nvar _require2 = require(\"ethers\"),\n    ethers = _require2.ethers;\n\nvar _require3 = require(\"./config\"),\n    config = _require3.config;\n\nvar daiDomainData = {\n  name: config.daiDomainName,\n  version: config.daiVersion\n};\n/**\n * Single method to be used for logging purpose.\n *\n * @param {string} message Message to be logged\n */\n\nfunction _logMessage(message) {\n  if (config && config.logsEnabled && console.log) {\n    console.log(message);\n  }\n}\n\nfunction isEthersProvider(provider) {\n  return ethers.providers.Provider.isProvider(provider);\n}\n/**\n * Class to provide methods to give token transfer permissions to Biconomy's ERC20Forwarder smart contract\n * ERC20Forwarder contract is responsible to calculate gas cost in ERC20 tokens and making a transfer on user's behalf\n * For DAI token there is a special permit method provided\n * For Tokens that support EIP2612 standard (like USDC) users should use eip2612Permit\n * Check https://docs.biconomy.io to see examples of how to use permit client to give one time token approvals\n */\n\n\nvar PermitClient = /*#__PURE__*/function () {\n  function PermitClient(provider, erc20ForwarderAddress, daiTokenAddress) {\n    (0, _classCallCheck2[\"default\"])(this, PermitClient);\n\n    if (isEthersProvider(provider)) {\n      this.provider = provider;\n    } else {\n      this.provider = new ethers.providers.Web3Provider(provider);\n    }\n\n    this.erc20ForwarderAddress = erc20ForwarderAddress;\n    this.daiTokenAddress = daiTokenAddress;\n    this.daiDomainData = daiDomainData;\n  }\n  /**\n   * method to provide permission to spend dai tokens to a desired spender\n   * @param {object} daiPermitOptions - dai permit options contains i) spender ii) expiry iii) user address iv) allowed\n   * All of the above options are optional\n   * If spender is not provided by default approval will be given to ERC20 Forwarder contract on the same network as your provider\n   * When your provider does not have a signer you must pass user address\n   */\n\n\n  (0, _createClass2[\"default\"])(PermitClient, [{\n    key: \"daiPermit\",\n    value: function () {\n      var _daiPermit = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(daiPermitOptions) {\n        var spender, expiry, allowed, userAddress, network, dai, nonce, permitDataToSign, result, signature, r, s, v, tx;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                spender = daiPermitOptions.spender || this.erc20ForwarderAddress;\n                expiry = daiPermitOptions.expiry || Math.floor(Date.now() / 1000 + 3600);\n                allowed = daiPermitOptions.allowed || true;\n                _context.t0 = daiPermitOptions.userAddress;\n\n                if (_context.t0) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 8;\n                return this.provider.getSigner().getAddress();\n\n              case 8:\n                _context.t0 = _context.sent;\n\n              case 9:\n                userAddress = _context.t0;\n                _context.next = 12;\n                return this.provider.getNetwork();\n\n              case 12:\n                network = _context.sent;\n                daiDomainData.chainId = network.chainId;\n                daiDomainData.verifyingContract = this.daiTokenAddress;\n                dai = new ethers.Contract(this.daiDomainData.verifyingContract, daiAbi, this.provider.getSigner());\n                _context.next = 18;\n                return dai.nonces(userAddress);\n\n              case 18:\n                nonce = _context.sent;\n                permitDataToSign = {\n                  types: {\n                    EIP712Domain: config.domainType,\n                    Permit: config.daiPermitType\n                  },\n                  domain: this.daiDomainData,\n                  primaryType: \"Permit\",\n                  message: {\n                    holder: userAddress,\n                    spender: spender,\n                    nonce: parseInt(nonce),\n                    expiry: parseInt(expiry),\n                    allowed: true\n                  }\n                };\n                _context.next = 22;\n                return this.provider.send(\"eth_signTypedData_v4\", [userAddress, JSON.stringify(permitDataToSign)]);\n\n              case 22:\n                result = _context.sent;\n\n                _logMessage(\"success\", result);\n\n                signature = result.substring(2);\n                r = \"0x\" + signature.substring(0, 64);\n                s = \"0x\" + signature.substring(64, 128);\n                v = parseInt(signature.substring(128, 130), 16);\n                _context.next = 30;\n                return dai.permit(userAddress, spender, parseInt(nonce), parseInt(expiry.toString()), allowed, v, r, s);\n\n              case 30:\n                tx = _context.sent;\n                return _context.abrupt(\"return\", tx);\n\n              case 34:\n                _context.prev = 34;\n                _context.t1 = _context[\"catch\"](0);\n\n                _logMessage(_context.t1);\n\n                throw _context.t1;\n\n              case 38:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 34]]);\n      }));\n\n      function daiPermit(_x) {\n        return _daiPermit.apply(this, arguments);\n      }\n\n      return daiPermit;\n    }()\n    /**\n     * method to provide permission to spend tokens that support EIP2612 Permit\n     * @param {object} permitOptions - permit options contain domainData, spender, value, deadline, userAddress\n     * domainData and value are manadatory options (check https://biconomy.docs.io to see a working example of this)\n     * If spender is not provided by default approval will be given to ERC20 Forwarder contract on the same network as your provider\n     * When your provider does not have a signer you must pass user address\n     */\n\n  }, {\n    key: \"eip2612Permit\",\n    value: function () {\n      var _eip2612Permit = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(permitOptions) {\n        var tokenDomainData, spender, value, deadline, userAddress, token, nonce, permitDataToSign, result, signature, r, s, v, tx;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                tokenDomainData = permitOptions.domainData;\n                spender = permitOptions.spender || this.erc20ForwarderAddress;\n                value = permitOptions.value;\n                deadline = permitOptions.deadline || Math.floor(Date.now() / 1000 + 3600);\n                _context2.t0 = permitOptions.userAddress;\n\n                if (_context2.t0) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 9;\n                return this.provider.getSigner().getAddress();\n\n              case 9:\n                _context2.t0 = _context2.sent;\n\n              case 10:\n                userAddress = _context2.t0;\n                token = new ethers.Contract(tokenDomainData.verifyingContract, erc20Eip2612Abi, this.provider.getSigner());\n                _context2.next = 14;\n                return token.nonces(userAddress);\n\n              case 14:\n                nonce = _context2.sent;\n                permitDataToSign = {\n                  types: {\n                    EIP712Domain: config.domainType,\n                    Permit: config.eip2612PermitType\n                  },\n                  domain: tokenDomainData,\n                  primaryType: \"Permit\",\n                  message: {\n                    owner: userAddress,\n                    spender: spender,\n                    nonce: parseInt(nonce),\n                    value: value,\n                    deadline: parseInt(deadline)\n                  }\n                };\n                _context2.next = 18;\n                return this.provider.send(\"eth_signTypedData_v4\", [userAddress, JSON.stringify(permitDataToSign)]);\n\n              case 18:\n                result = _context2.sent;\n\n                _logMessage(\"success\", result);\n\n                signature = result.substring(2);\n                r = \"0x\" + signature.substring(0, 64);\n                s = \"0x\" + signature.substring(64, 128);\n                v = parseInt(signature.substring(128, 130), 16);\n                _context2.next = 26;\n                return token.permit(userAddress, spender, value, parseInt(deadline.toString()), v, r, s);\n\n              case 26:\n                tx = _context2.sent;\n                return _context2.abrupt(\"return\", tx);\n\n              case 30:\n                _context2.prev = 30;\n                _context2.t1 = _context2[\"catch\"](0);\n\n                _logMessage(_context2.t1);\n\n                throw _context2.t1;\n\n              case 34:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 30]]);\n      }));\n\n      function eip2612Permit(_x2) {\n        return _eip2612Permit.apply(this, arguments);\n      }\n\n      return eip2612Permit;\n    }()\n  }]);\n  return PermitClient;\n}();\n\nmodule.exports = PermitClient;"]},"metadata":{},"sourceType":"script"}