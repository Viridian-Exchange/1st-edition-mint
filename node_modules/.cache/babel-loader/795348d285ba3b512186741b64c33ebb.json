{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { STREAM_PRICES, STREAM_TICKER, GET_ASSETS, INITIALIZED, CACHE_ASSETS } from \"./types\";\nexport function CryptoPriceReducer(state, action) {\n  switch (action.type) {\n    case INITIALIZED:\n      return __assign(__assign({}, state), {\n        initialized: action.payload,\n        loading: false\n      });\n\n    case CACHE_ASSETS:\n      return __assign(__assign({}, state), {\n        assetCache: action.payload,\n        loading: false\n      });\n\n    case GET_ASSETS:\n      return __assign(__assign({}, state), {\n        assets: action.payload,\n        loading: false\n      });\n\n    case STREAM_PRICES:\n      return __assign(__assign({}, state), {\n        prices: action.payload,\n        loading: false\n      });\n\n    case STREAM_TICKER:\n      return __assign(__assign({}, state), {\n        tickers: action.payload,\n        loading: false\n      });\n\n    default:\n      throw new Error();\n  }\n}","map":{"version":3,"sources":["../src/CryptoPriceReducer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,SACI,aADJ,EAEI,aAFJ,EAGI,UAHJ,EAII,WAJJ,EAKI,YALJ,QAMO,SANP;AAQA,OAAM,SAAU,kBAAV,CAA6B,KAA7B,EAAyC,MAAzC,EAAoD;AACtD,UAAQ,MAAM,CAAC,IAAf;AACI,SAAK,WAAL;AACI,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACO,KADP,CAAA,EACY;AACR,QAAA,WAAW,EAAE,MAAM,CAAC,OADZ;AAER,QAAA,OAAO,EAAE;AAFD,OADZ,CAAA;;AAKJ,SAAK,YAAL;AACI,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACO,KADP,CAAA,EACY;AACR,QAAA,UAAU,EAAE,MAAM,CAAC,OADX;AAER,QAAA,OAAO,EAAE;AAFD,OADZ,CAAA;;AAKJ,SAAK,UAAL;AACI,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACO,KADP,CAAA,EACY;AACR,QAAA,MAAM,EAAE,MAAM,CAAC,OADP;AAER,QAAA,OAAO,EAAE;AAFD,OADZ,CAAA;;AAKJ,SAAK,aAAL;AACI,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACO,KADP,CAAA,EACY;AACR,QAAA,MAAM,EAAE,MAAM,CAAC,OADP;AAER,QAAA,OAAO,EAAE;AAFD,OADZ,CAAA;;AAKJ,SAAK,aAAL;AACI,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACO,KADP,CAAA,EACY;AACR,QAAA,OAAO,EAAE,MAAM,CAAC,OADR;AAER,QAAA,OAAO,EAAE;AAFD,OADZ,CAAA;;AAKJ;AACI,YAAM,IAAI,KAAJ,EAAN;AAhCR;AAkCH","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { STREAM_PRICES, STREAM_TICKER, GET_ASSETS, INITIALIZED, CACHE_ASSETS, } from \"./types\";\nexport function CryptoPriceReducer(state, action) {\n    switch (action.type) {\n        case INITIALIZED:\n            return __assign(__assign({}, state), { initialized: action.payload, loading: false });\n        case CACHE_ASSETS:\n            return __assign(__assign({}, state), { assetCache: action.payload, loading: false });\n        case GET_ASSETS:\n            return __assign(__assign({}, state), { assets: action.payload, loading: false });\n        case STREAM_PRICES:\n            return __assign(__assign({}, state), { prices: action.payload, loading: false });\n        case STREAM_TICKER:\n            return __assign(__assign({}, state), { tickers: action.payload, loading: false });\n        default:\n            throw new Error();\n    }\n}\n//# sourceMappingURL=CryptoPriceReducer.js.map"]},"metadata":{},"sourceType":"module"}