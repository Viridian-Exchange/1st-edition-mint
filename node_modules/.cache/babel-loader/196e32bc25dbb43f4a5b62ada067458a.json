{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\"; //import axios from \"axios\";\n\nimport \"./styles/app.sass\";\nimport Page from \"./components/Page\";\nimport Faq from \"./screens/Faq\";\nimport Mint from \"./screens/Mint\";\nimport Open from \"./screens/Open\";\nimport Verify from \"./screens/Verify\";\nimport Web3 from \"web3\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Breakpoint, BreakpointProvider } from 'react-socks';\nimport { useWeb3React } from '@web3-react/core';\nimport { Biconomy } from \"@biconomy/mexa\";\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { NetworkConnector } from \"@web3-react/network-connector\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\nimport { toHex, truncateAddress } from \"./utils/utils\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst providerOptions = {\n  coinbasewallet: {\n    package: CoinbaseWalletSDK,\n    // Required\n    options: {\n      appName: \"Viridian Exchange\",\n      // Required\n      rpc: \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\",\n      // Optional if `infuraId` is provided; otherwise it's required\n      chainId: 4,\n      // Optional. It defaults to 1 if not provided\n      darkMode: true // Optional. Use dark theme, defaults to false\n\n    }\n  },\n  walletconnect: {\n    package: WalletConnectProvider,\n    // required\n    options: {\n      rpc: {\n        4: \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"\n      }\n    }\n  }\n};\nconst networkParams = {\n  \"0x0100\": {\n    chainId: \"0x0100\",\n    rpcUrls: [\"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"],\n    chainName: \"Polygon Mainnet\",\n    nativeCurrency: {\n      name: \"Ether\",\n      decimals: 18,\n      symbol: \"ETH\"\n    },\n    blockExplorerUrls: [\"https://explorer.harmony.one\"],\n    iconUrls: [\"https://harmonynews.one/wp-content/uploads/2019/11/slfdjs.png\"]\n  }\n};\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  // optional\n  cacheProvider: true,\n  // optional\n  providerOptions,\n  // required,\n  theme: \"dark\"\n}); //TODO: show address, list of followers, description, etc on profile page\n// function in the smart contract to add a user that is followed\n// (triggered by follow button press-> calls the function which takes in an address and adds the user to the list of following)\n// front end will pull the followee user and be able to show the profile on the initial user\n// , and call in the CLI, once followers working, you will see another profile show up\n// use item flow -> Profile/user flow\n// get current user wallet, then abi->getuserfromaddress->return json of user struct\n\nfunction App() {\n  _s();\n\n  const [biconomyFetched, setBiconomyFetched] = useState(false);\n  const [account, setAccount] = useState();\n  const [provider, setProvider] = useState();\n  const [library, setLibrary] = useState();\n  const [signature, setSignature] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [chainId, setChainId] = useState();\n  const [network, setNetwork] = useState();\n  const [message, setMessage] = useState(\"\");\n  const [signedMessage, setSignedMessage] = useState(\"\");\n  const [verified, setVerified] = useState();\n  const [gaslessReady, setGaslessReady] = useState(false);\n\n  const connectWallet = async () => {\n    //try {\n    const provider = await web3Modal.connect();\n    let library = new Web3(provider);\n    setLibrary(library); //alert(JSON.stringify(library.givenProvider));\n\n    const accounts = await library.eth.getAccounts(); //alert(JSON.stringify(accounts));\n\n    const network = await library.eth.net.getId(); //alert(JSON.stringify(network));\n\n    setProvider(provider);\n    setLibrary(library);\n    if (accounts) setAccount(accounts[0]);\n    setChainId(network); // } catch (error) {\n    //     alert(JSON.stringify(error));\n    // }\n  };\n\n  const handleNetwork = e => {\n    const id = e.target.value;\n    setNetwork(Number(id));\n  };\n\n  const handleInput = e => {\n    const msg = e.target.value;\n    setMessage(msg);\n  };\n\n  const switchNetwork = async toETH => {\n    if (toETH) {\n      try {\n        await window.ethereum.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{\n            chainId: toHex(1)\n          }]\n        });\n      } catch (switchError) {\n        setError(error);\n      }\n    } else {\n      try {\n        await window.ethereum.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{\n            chainId: toHex(4)\n          }]\n        });\n      } catch (switchError) {\n        //alert(JSON.stringify(switchError.code))\n        if (switchError.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainName: 'Polygon Mainnet',\n                chainId: toHex(137),\n                nativeCurrency: {\n                  name: 'Polygon',\n                  symbol: 'MATIC',\n                  decimals: 18\n                },\n                rpcUrls: ['https://rpc-mainnet.maticvigil.com/'],\n                blockExplorerUrls: ['https://polygonscan.com/']\n              }]\n            });\n          } catch (error) {\n            setError(error);\n          }\n        }\n      }\n    }\n  };\n\n  const refreshState = () => {\n    setAccount();\n    setChainId();\n    setNetwork(\"\");\n    setMessage(\"\");\n    setSignature(\"\");\n    setVerified(undefined);\n  };\n\n  const disconnect = async () => {\n    await web3Modal.clearCachedProvider();\n    refreshState();\n  };\n\n  useEffect(async () => {\n    if (web3Modal.cachedProvider) {\n      await connectWallet();\n    }\n  }, []);\n  useEffect(async () => {\n    //alert(chainId);\n    if (toHex(chainId) !== toHex(4)) {\n      await switchNetwork(false);\n    }\n  }, [chainId]);\n  useEffect(() => {\n    if (provider === null || provider === void 0 ? void 0 : provider.on) {\n      const handleAccountsChanged = accounts => {\n        console.log(\"accountsChanged\", accounts);\n        if (accounts) setAccount(accounts[0]);\n      };\n\n      const handleChainChanged = _hexChainId => {\n        setChainId(_hexChainId);\n      };\n\n      const handleDisconnect = () => {\n        console.log(\"disconnect\", error);\n        disconnect();\n      };\n\n      provider.on(\"accountsChanged\", handleAccountsChanged);\n      provider.on(\"chainChanged\", handleChainChanged);\n      provider.on(\"disconnect\", handleDisconnect);\n      return () => {\n        if (provider.removeListener) {\n          provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n          provider.removeListener(\"chainChanged\", handleChainChanged);\n          provider.removeListener(\"disconnect\", handleDisconnect);\n        }\n      };\n    }\n  }, [provider]);\n  return /*#__PURE__*/_jsxDEV(BreakpointProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      forceRefresh: true,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/mint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/mint\",\n          render: () => /*#__PURE__*/_jsxDEV(Page, {\n            library: library,\n            chainId: chainId,\n            biconomyFetched: biconomyFetched,\n            account: account,\n            setAccount: setAccount,\n            connectWallet: connectWallet,\n            disconnect: disconnect,\n            children: /*#__PURE__*/_jsxDEV(Mint, {\n              setGaslessReady: setGaslessReady,\n              library: library,\n              biconomyFetched: biconomyFetched,\n              account: account,\n              setAccount: setAccount,\n              gaslessReady: gaslessReady,\n              connectWallet: connectWallet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/open\",\n          render: () => /*#__PURE__*/_jsxDEV(Page, {\n            library: library,\n            chainId: chainId,\n            biconomyFetched: biconomyFetched,\n            account: account,\n            setAccount: setAccount,\n            connectWallet: connectWallet,\n            disconnect: disconnect,\n            children: /*#__PURE__*/_jsxDEV(Open, {\n              biconomyFetched: biconomyFetched,\n              account: account,\n              setAccount: setAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/verify\",\n          render: () => /*#__PURE__*/_jsxDEV(Page, {\n            library: library,\n            chainId: chainId,\n            children: /*#__PURE__*/_jsxDEV(Verify, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/mint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"0Jmd6xrWaYphlrBbeWFeM+0qUTw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","Redirect","useHistory","React","useState","useEffect","Page","Faq","Mint","Open","Verify","Web3","Web3Provider","Breakpoint","BreakpointProvider","useWeb3React","Biconomy","WalletLinkConnector","WalletConnectConnector","InjectedConnector","NetworkConnector","CoinbaseWalletSDK","WalletConnectProvider","Web3Modal","toHex","truncateAddress","ethers","providerOptions","coinbasewallet","package","options","appName","rpc","chainId","darkMode","walletconnect","networkParams","rpcUrls","chainName","nativeCurrency","name","decimals","symbol","blockExplorerUrls","iconUrls","web3Modal","network","cacheProvider","theme","App","biconomyFetched","setBiconomyFetched","account","setAccount","provider","setProvider","library","setLibrary","signature","setSignature","error","setError","setChainId","setNetwork","message","setMessage","signedMessage","setSignedMessage","verified","setVerified","gaslessReady","setGaslessReady","connectWallet","connect","accounts","eth","getAccounts","net","getId","handleNetwork","e","id","target","value","Number","handleInput","msg","switchNetwork","toETH","window","ethereum","request","method","params","switchError","code","refreshState","undefined","disconnect","clearCachedProvider","cachedProvider","on","handleAccountsChanged","console","log","handleChainChanged","_hexChainId","handleDisconnect","removeListener"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n//import axios from \"axios\";\nimport \"./styles/app.sass\";\nimport Page from \"./components/Page\";\nimport Faq from \"./screens/Faq\";\nimport Mint from \"./screens/Mint\";\nimport Open from \"./screens/Open\";\nimport Verify from \"./screens/Verify\";\nimport Web3 from \"web3\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Breakpoint, BreakpointProvider } from 'react-socks';\nimport { useWeb3React } from '@web3-react/core'\nimport {Biconomy} from \"@biconomy/mexa\";\nimport {WalletLinkConnector} from \"@web3-react/walletlink-connector\";\nimport {WalletConnectConnector} from \"@web3-react/walletconnect-connector\";\nimport {InjectedConnector} from \"@web3-react/injected-connector\";\nimport {NetworkConnector} from \"@web3-react/network-connector\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\nimport {toHex, truncateAddress} from \"./utils/utils\";\nimport { ethers } from \"ethers\";\n\nconst providerOptions = {\n    coinbasewallet: {\n        package: CoinbaseWalletSDK, // Required\n        options: {\n            appName: \"Viridian Exchange\", // Required\n            rpc: \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\", // Optional if `infuraId` is provided; otherwise it's required\n            chainId: 4, // Optional. It defaults to 1 if not provided\n            darkMode: true // Optional. Use dark theme, defaults to false\n        }\n    },\n    walletconnect: {\n        package: WalletConnectProvider, // required\n        options: {\n            rpc: {4: \"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"},\n        }\n    },\n};\n\nconst networkParams = {\n    \"0x0100\": {\n        chainId: \"0x0100\",\n        rpcUrls: [\"https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js\"],\n        chainName: \"Polygon Mainnet\",\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        blockExplorerUrls: [\"https://explorer.harmony.one\"],\n        iconUrls: [\"https://harmonynews.one/wp-content/uploads/2019/11/slfdjs.png\"]\n    },\n};\n\nconst web3Modal = new Web3Modal({\n    network: \"mainnet\", // optional\n    cacheProvider: true, // optional\n    providerOptions, // required,\n    theme: \"dark\"\n});\n\n//TODO: show address, list of followers, description, etc on profile page\n// function in the smart contract to add a user that is followed\n// (triggered by follow button press-> calls the function which takes in an address and adds the user to the list of following)\n// front end will pull the followee user and be able to show the profile on the initial user\n// , and call in the CLI, once followers working, you will see another profile show up\n// use item flow -> Profile/user flow\n// get current user wallet, then abi->getuserfromaddress->return json of user struct\nfunction App() {\n    const [biconomyFetched, setBiconomyFetched] = useState(false);\n    const [account, setAccount] = useState();\n    const [provider, setProvider] = useState();\n    const [library, setLibrary] = useState();\n    const [signature, setSignature] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [chainId, setChainId] = useState();\n    const [network, setNetwork] = useState();\n    const [message, setMessage] = useState(\"\");\n    const [signedMessage, setSignedMessage] = useState(\"\");\n    const [verified, setVerified] = useState();\n    const [gaslessReady, setGaslessReady] = useState(false);\n\n    const connectWallet = async () => {\n        //try {\n            const provider = await web3Modal.connect();\n            let library = new Web3(provider);\n            setLibrary(library);\n            //alert(JSON.stringify(library.givenProvider));\n            const accounts = await library.eth.getAccounts();\n            //alert(JSON.stringify(accounts));\n            const network = await library.eth.net.getId();\n            //alert(JSON.stringify(network));\n            setProvider(provider);\n            setLibrary(library);\n            if (accounts) setAccount(accounts[0]);\n            setChainId(network);\n\n        // } catch (error) {\n        //     alert(JSON.stringify(error));\n        // }\n    };\n\n    const handleNetwork = (e) => {\n        const id = e.target.value;\n        setNetwork(Number(id));\n    };\n\n    const handleInput = (e) => {\n        const msg = e.target.value;\n        setMessage(msg);\n    };\n\n    const switchNetwork = async (toETH) => {\n        if (toETH) {\n            try {\n                await window.ethereum.request({\n                    method: \"wallet_switchEthereumChain\",\n                    params: [{chainId: toHex(1)}]\n                });\n            } catch (switchError) {\n                setError(error);\n            }\n        }\n        else {\n            try {\n                await window.ethereum.request({\n                    method: \"wallet_switchEthereumChain\",\n                    params: [{chainId: toHex(4)}]\n                });\n            } catch (switchError) {\n                //alert(JSON.stringify(switchError.code))\n                if (switchError.code === 4902) {\n                    try {\n                        await window.ethereum.request({\n                            method: 'wallet_addEthereumChain',\n                            params: [\n                                {\n                                    chainName: 'Polygon Mainnet',\n                                    chainId: toHex(137),\n                                    nativeCurrency: {\n                                        name: 'Polygon',\n                                        symbol: 'MATIC',\n                                        decimals: 18\n                                    },\n                                    rpcUrls: ['https://rpc-mainnet.maticvigil.com/'],\n                                    blockExplorerUrls: ['https://polygonscan.com/']\n                                }]\n                        });\n                    } catch (error) {\n                        setError(error);\n                    }\n                }\n            }\n        }\n    };\n\n    const refreshState = () => {\n        setAccount();\n        setChainId();\n        setNetwork(\"\");\n        setMessage(\"\");\n        setSignature(\"\");\n        setVerified(undefined);\n    };\n\n    const disconnect = async () => {\n        await web3Modal.clearCachedProvider();\n        refreshState();\n    };\n\n    useEffect(async () => {\n        if (web3Modal.cachedProvider) {\n            await connectWallet();\n        }\n    }, []);\n\n    useEffect(async () => {\n        //alert(chainId);\n        if (toHex(chainId) !== toHex(4)) {\n            await switchNetwork(false);\n        }\n    }, [chainId])\n\n    useEffect(() => {\n        if (provider?.on) {\n            const handleAccountsChanged = (accounts) => {\n                console.log(\"accountsChanged\", accounts);\n                if (accounts) setAccount(accounts[0]);\n            };\n\n            const handleChainChanged = (_hexChainId) => {\n                setChainId(_hexChainId);\n            };\n\n            const handleDisconnect = () => {\n                console.log(\"disconnect\", error);\n                disconnect();\n            };\n\n            provider.on(\"accountsChanged\", handleAccountsChanged);\n            provider.on(\"chainChanged\", handleChainChanged);\n            provider.on(\"disconnect\", handleDisconnect);\n\n            return () => {\n                if (provider.removeListener) {\n                    provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n                    provider.removeListener(\"chainChanged\", handleChainChanged);\n                    provider.removeListener(\"disconnect\", handleDisconnect);\n                }\n            };\n        }\n    }, [provider]);\n\n  return (\n        <BreakpointProvider>\n            <Router forceRefresh={true}>\n              <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                >\n                  <Redirect to=\"/mint\" />\n                </Route>\n                <Route\n                    exact\n                    path=\"/mint\"\n                    render={() => (\n                        <Page library={library} chainId={chainId} biconomyFetched={biconomyFetched} account={account} setAccount={setAccount} connectWallet = {connectWallet} disconnect={disconnect}>\n                          <Mint setGaslessReady={setGaslessReady} library={library} biconomyFetched={biconomyFetched} account={account} setAccount={setAccount} gaslessReady={gaslessReady} connectWallet = {connectWallet} />\n                        </Page>\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/open\"\n                    render={() => (\n                        <Page library={library} chainId={chainId} biconomyFetched={biconomyFetched} account={account} setAccount={setAccount} connectWallet = {connectWallet} disconnect={disconnect}>\n                          <Open biconomyFetched={biconomyFetched} account={account} setAccount={setAccount} />\n                        </Page>\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/verify\"\n                    render={() => (\n                        <Page library={library} chainId={chainId}>\n                          <Verify  />\n                        </Page>\n                    )}\n                />\n                {/*<Route*/}\n                {/*    exact*/}\n                {/*    path=\"/faq\"*/}\n                {/*    render={() => (*/}\n                {/*        <Page>*/}\n                {/*          <Faq />*/}\n                {/*        </Page>*/}\n                {/*    )}*/}\n                {/*/>*/}\n                <Route path=\"*\">\n                  <Redirect to=\"/mint\" />\n                </Route>\n              </Switch>\n            </Router>\n        </BreakpointProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}