{"ast":null,"code":"var {\n  defaultAbiCoder\n} = require('ethers/utils/abi-coder');\n\nvar {\n  Interface\n} = require('ethers/utils/interface');\n\nvar decodeTx = require('./decodeTransaction.js');\n\nmodule.exports = function FunctionDecoder(iface) {\n  if (!(this instanceof FunctionDecoder)) {\n    throw new Error('missing new');\n  }\n\n  if (!Interface.isInterface(iface)) {\n    iface = new Interface(iface);\n  }\n\n  var functions = {};\n\n  for (var fnName in iface.functions) {\n    var fnInfo = iface.functions[fnName];\n    functions[fnInfo.sighash] = fnName;\n  }\n\n  ;\n\n  this.decodeFn = function (data) {\n    var sighash = data.substring(0, 10);\n    var raw_params = '0x' + data.substring(10);\n    var fnName = functions[sighash];\n    var fnInfo = iface.functions[fnName];\n    var result = defaultAbiCoder.decode(fnInfo.inputs, raw_params);\n    result.signature = fnInfo.signature;\n    result.sighash = fnInfo.sighash;\n    return result;\n  };\n\n  this.decodeFnFromTx = function (raw_tx) {\n    var decodedTx = decodeTx(raw_tx);\n    return this.decodeFn(decodedTx.data);\n  };\n};","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/node_modules/ethereum-tx-decoder/src/FunctionDecoder.js"],"names":["defaultAbiCoder","require","Interface","decodeTx","module","exports","FunctionDecoder","iface","Error","isInterface","functions","fnName","fnInfo","sighash","decodeFn","data","substring","raw_params","result","decode","inputs","signature","decodeFnFromTx","raw_tx","decodedTx"],"mappings":"AAAA,IAAI;AAACA,EAAAA;AAAD,IAAoBC,OAAO,CAAC,wBAAD,CAA/B;;AACA,IAAI;AAACC,EAAAA;AAAD,IAAcD,OAAO,CAAC,wBAAD,CAAzB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC/C,MAAI,EAAE,gBAAgBD,eAAlB,CAAJ,EAAwC;AAAE,UAAM,IAAIE,KAAJ,CAAU,aAAV,CAAN;AAAiC;;AAE3E,MAAI,CAAEN,SAAS,CAACO,WAAV,CAAsBF,KAAtB,CAAN,EAAqC;AAAEA,IAAAA,KAAK,GAAG,IAAIL,SAAJ,CAAcK,KAAd,CAAR;AAA+B;;AAEtE,MAAIG,SAAS,GAAG,EAAhB;;AAEA,OAAK,IAAIC,MAAT,IAAmBJ,KAAK,CAACG,SAAzB,EAAoC;AAClC,QAAIE,MAAM,GAAGL,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAb;AACAD,IAAAA,SAAS,CAACE,MAAM,CAACC,OAAR,CAAT,GAA4BF,MAA5B;AACD;;AAAA;;AAED,OAAKG,QAAL,GAAgB,UAASC,IAAT,EAAe;AAC7B,QAAIF,OAAO,GAAGE,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkB,EAAlB,CAAd;AACA,QAAIC,UAAU,GAAG,OAAKF,IAAI,CAACC,SAAL,CAAe,EAAf,CAAtB;AAEA,QAAIL,MAAM,GAAGD,SAAS,CAACG,OAAD,CAAtB;AACA,QAAID,MAAM,GAAGL,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAb;AAEA,QAAIO,MAAM,GAAGlB,eAAe,CAACmB,MAAhB,CACXP,MAAM,CAACQ,MADI,EAEXH,UAFW,CAAb;AAKAC,IAAAA,MAAM,CAACG,SAAP,GAAmBT,MAAM,CAACS,SAA1B;AACAH,IAAAA,MAAM,CAACL,OAAP,GAAiBD,MAAM,CAACC,OAAxB;AAEA,WAAOK,MAAP;AACD,GAhBD;;AAkBA,OAAKI,cAAL,GAAsB,UAASC,MAAT,EAAiB;AACrC,QAAIC,SAAS,GAAGrB,QAAQ,CAACoB,MAAD,CAAxB;AACA,WAAO,KAAKT,QAAL,CAAcU,SAAS,CAACT,IAAxB,CAAP;AACD,GAHD;AAID,CAlCD","sourcesContent":["var {defaultAbiCoder} = require('ethers/utils/abi-coder');\nvar {Interface} = require('ethers/utils/interface');\nvar decodeTx = require('./decodeTransaction.js');\n\nmodule.exports = function FunctionDecoder(iface) {\n  if (!(this instanceof FunctionDecoder)) { throw new Error('missing new'); }\n\n  if (!(Interface.isInterface(iface))) { iface = new Interface(iface); }\n\n  var functions = {};\n\n  for (var fnName in iface.functions) {\n    var fnInfo = iface.functions[fnName];\n    functions[fnInfo.sighash] = fnName;\n  };\n\n  this.decodeFn = function(data) {\n    var sighash = data.substring(0, 10);\n    var raw_params = '0x'+data.substring(10);\n\n    var fnName = functions[sighash];\n    var fnInfo = iface.functions[fnName];\n\n    var result = defaultAbiCoder.decode(\n      fnInfo.inputs,\n      raw_params\n    );\n\n    result.signature = fnInfo.signature;\n    result.sighash = fnInfo.sighash;\n\n    return result;\n  }\n\n  this.decodeFnFromTx = function(raw_tx) {\n    var decodedTx = decodeTx(raw_tx);\n    return this.decodeFn(decodedTx.data);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}