{"ast":null,"code":"\"use strict\";\n\nvar config = {};\nconfig.version = 'v1';\nconfig.version2 = 'v2';\nconfig.signTypedV3Method = \"eth_signTypedData_v3\";\nconfig.loginDomainName = \"Biconomy Login\";\nconfig.loginVersion = \"1\";\nconfig.eip712SigVersion = \"1\";\nconfig.eip712DomainName = \"Biconomy Meta Transaction\";\nconfig.eip712VerifyingContract = \"0x3457dC2A8Ff1d3FcC45eAd532CA1740f5c477160\";\nconfig.daiDomainName = \"Dai Stablecoin\";\nconfig.daiVersion = \"1\";\nconfig.forwarderDomainName = \"Biconomy Forwarder\";\nconfig.forwarderVersion = \"1\";\nconfig.baseURL = \"https://api.biconomy.io\";\nconfig.nativeMetaTxUrl = \"/api/\".concat(config.version2, \"/meta-tx/native\");\nconfig.userLoginPath = \"/api/\".concat(config.version2, \"/dapp-user/login\");\nconfig.withdrawFundsUrl = \"/api/\".concat(config.version2, \"/meta-tx/withdraw\");\nconfig.getUserContractPath = \"/api/\".concat(config.version2, \"/dapp-user/getUserContract\");\nconfig.MESSAGE_TO_SIGN = 'Sign message to prove the ownership of your account with counter ';\nconfig.WITHDRAW_MESSAGE_TO_SIGN = 'Provide your signature to withdraw funds with counter ';\nconfig.USER_ACCOUNT = \"BUA\";\nconfig.USER_CONTRACT = \"BUC\";\nconfig.JSON_RPC_VERSION = '2.0';\nconfig.LOGIN_MESSAGE_TO_SIGN = \"Sign message to login to Biconomy with counter \";\nconfig.ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nconfig.PAYMENT_TOKEN_CONTRACT = config.ZERO_ADDRESS;\nconfig.PAYMENT_TOKEN_AMOUNT = 0;\nconfig.NONCE_BATCH_ID = 0;\nconfig.EXPIRY = 0;\nconfig.BASE_GAS = 0;\nconfig.RELAYER_ADDRESS = config.ZERO_ADDRESS;\nconfig.TOKEN_CONTRACT_ADDRESS = config.ZERO_ADDRESS;\nconfig.DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS = config.ZERO_ADDRESS;\nconfig.DEFAULT_RELAYER_PAYMENT_AMOUNT = 0;\nconfig.DEFAULT_DESCRIPTION = \"Smart Contract Interaction\";\nconfig.DAI = \"DAI_Permit\";\nconfig.EIP2612 = \"EIP2612_Permit\";\nconfig.handleSignedTxUrl = \"/api/\".concat(config.version2, \"/meta-tx/sendSignedTx\");\nconfig.logsEnabled = false;\nvar EVENTS = {\n  SMART_CONTRACT_DATA_READY: 'smart_contract_data_ready',\n  DAPP_API_DATA_READY: 'dapp_api_data_ready',\n  LOGIN_CONFIRMATION: 'login_confirmation',\n  BICONOMY_ERROR: 'biconomy_error',\n  HELPER_CLENTS_READY: 'permit_and_ercforwarder_clients_ready'\n};\nvar RESPONSE_CODES = {\n  ERROR_RESPONSE: 'B500',\n  API_NOT_FOUND: 'B501',\n  USER_CONTRACT_NOT_FOUND: 'B502',\n  USER_NOT_LOGGED_IN: 'B503',\n  USER_ACCOUNT_NOT_FOUND: 'B504',\n  NETWORK_ID_MISMATCH: 'B505',\n  BICONOMY_NOT_INITIALIZED: 'B506',\n  NETWORK_ID_NOT_FOUND: 'B507',\n  SMART_CONTRACT_NOT_FOUND: 'B508',\n  DAPP_NOT_FOUND: 'B509',\n  INVALID_PAYLOAD: 'B510',\n  DASHBOARD_DATA_MISMATCH: 'B511',\n  SUCCESS_RESPONSE: 'B200',\n  USER_CONTRACT_CREATION_FAILED: 'B512',\n  EVENT_NOT_SUPPORTED: 'B513',\n  INVALID_DATA: 'B514',\n  INVALID_OPERATION: 'B515',\n  WRONG_ABI: 'B516'\n}; // could get these from sys info call\n\nconfig.forwardRequestType = [{\n  name: 'from',\n  type: 'address'\n}, {\n  name: 'to',\n  type: 'address'\n}, {\n  name: 'token',\n  type: 'address'\n}, {\n  name: 'txGas',\n  type: 'uint256'\n}, {\n  name: 'tokenGasPrice',\n  type: 'uint256'\n}, {\n  name: 'batchId',\n  type: 'uint256'\n}, {\n  name: 'batchNonce',\n  type: 'uint256'\n}, {\n  name: 'deadline',\n  type: 'uint256'\n}, {\n  name: 'data',\n  type: 'bytes'\n}];\nconfig.daiPermitType = [{\n  name: \"holder\",\n  type: \"address\"\n}, {\n  name: \"spender\",\n  type: \"address\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"expiry\",\n  type: \"uint256\"\n}, {\n  name: \"allowed\",\n  type: \"bool\"\n}];\nconfig.eip2612PermitType = [{\n  name: \"owner\",\n  type: \"address\"\n}, {\n  name: \"spender\",\n  type: \"address\"\n}, {\n  name: \"value\",\n  type: \"uint256\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"deadline\",\n  type: \"uint256\"\n}]; // This domain type is used in Permit Client where chainId needs to be preserved\n\nconfig.domainType = [{\n  name: \"name\",\n  type: \"string\"\n}, {\n  name: \"version\",\n  type: \"string\"\n}, {\n  name: \"chainId\",\n  type: \"uint256\"\n}, {\n  name: \"verifyingContract\",\n  type: \"address\"\n}];\nvar BICONOMY_RESPONSE_CODES = {\n  SUCCESS: 200,\n  ACTION_COMPLETE: 143,\n  USER_CONTRACT_NOT_FOUND: 148,\n  ERROR_RESPONSE: 144\n};\nvar HTTP_CODES = {\n  OK: 200,\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_FOUND: 404,\n  CONFLICT: 409,\n  EXPECTATION_FAILED: 417\n};\nvar RESPONSE_BODY_CODES = {\n  OK: 200,\n  DAPP_LIMIT_REACHED: 150,\n  USER_LIMIT_REACHED: 151,\n  API_LIMIT_REACHED: 152,\n  GAS_ESTIMATION_FAILED: 417,\n  INTERNAL_ERROR: 500,\n  NOT_FOUND: 404\n};\nvar STATUS = {\n  INIT: 'init',\n  BICONOMY_READY: 'biconomy_ready',\n  NO_DATA: 'no_data'\n};\nconfig.SCW = \"SCW\";\nmodule.exports = {\n  config: config,\n  EVENTS: EVENTS,\n  RESPONSE_CODES: RESPONSE_CODES,\n  HTTP_CODES: HTTP_CODES,\n  RESPONSE_BODY_CODES: RESPONSE_BODY_CODES,\n  BICONOMY_RESPONSE_CODES: BICONOMY_RESPONSE_CODES,\n  STATUS: STATUS\n};","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/node_modules/@biconomy/mexa/common-js/config.js"],"names":["config","version","version2","signTypedV3Method","loginDomainName","loginVersion","eip712SigVersion","eip712DomainName","eip712VerifyingContract","daiDomainName","daiVersion","forwarderDomainName","forwarderVersion","baseURL","nativeMetaTxUrl","concat","userLoginPath","withdrawFundsUrl","getUserContractPath","MESSAGE_TO_SIGN","WITHDRAW_MESSAGE_TO_SIGN","USER_ACCOUNT","USER_CONTRACT","JSON_RPC_VERSION","LOGIN_MESSAGE_TO_SIGN","ZERO_ADDRESS","PAYMENT_TOKEN_CONTRACT","PAYMENT_TOKEN_AMOUNT","NONCE_BATCH_ID","EXPIRY","BASE_GAS","RELAYER_ADDRESS","TOKEN_CONTRACT_ADDRESS","DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS","DEFAULT_RELAYER_PAYMENT_AMOUNT","DEFAULT_DESCRIPTION","DAI","EIP2612","handleSignedTxUrl","logsEnabled","EVENTS","SMART_CONTRACT_DATA_READY","DAPP_API_DATA_READY","LOGIN_CONFIRMATION","BICONOMY_ERROR","HELPER_CLENTS_READY","RESPONSE_CODES","ERROR_RESPONSE","API_NOT_FOUND","USER_CONTRACT_NOT_FOUND","USER_NOT_LOGGED_IN","USER_ACCOUNT_NOT_FOUND","NETWORK_ID_MISMATCH","BICONOMY_NOT_INITIALIZED","NETWORK_ID_NOT_FOUND","SMART_CONTRACT_NOT_FOUND","DAPP_NOT_FOUND","INVALID_PAYLOAD","DASHBOARD_DATA_MISMATCH","SUCCESS_RESPONSE","USER_CONTRACT_CREATION_FAILED","EVENT_NOT_SUPPORTED","INVALID_DATA","INVALID_OPERATION","WRONG_ABI","forwardRequestType","name","type","daiPermitType","eip2612PermitType","domainType","BICONOMY_RESPONSE_CODES","SUCCESS","ACTION_COMPLETE","HTTP_CODES","OK","INTERNAL_SERVER_ERROR","NOT_FOUND","CONFLICT","EXPECTATION_FAILED","RESPONSE_BODY_CODES","DAPP_LIMIT_REACHED","USER_LIMIT_REACHED","API_LIMIT_REACHED","GAS_ESTIMATION_FAILED","INTERNAL_ERROR","STATUS","INIT","BICONOMY_READY","NO_DATA","SCW","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAG,EAAb;AACAA,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACAD,MAAM,CAACE,QAAP,GAAkB,IAAlB;AACAF,MAAM,CAACG,iBAAP,GAA2B,sBAA3B;AACAH,MAAM,CAACI,eAAP,GAAyB,gBAAzB;AACAJ,MAAM,CAACK,YAAP,GAAsB,GAAtB;AACAL,MAAM,CAACM,gBAAP,GAA0B,GAA1B;AACAN,MAAM,CAACO,gBAAP,GAA0B,2BAA1B;AACAP,MAAM,CAACQ,uBAAP,GAAiC,4CAAjC;AACAR,MAAM,CAACS,aAAP,GAAuB,gBAAvB;AACAT,MAAM,CAACU,UAAP,GAAoB,GAApB;AACAV,MAAM,CAACW,mBAAP,GAA6B,oBAA7B;AACAX,MAAM,CAACY,gBAAP,GAA0B,GAA1B;AACAZ,MAAM,CAACa,OAAP,GAAiB,yBAAjB;AACAb,MAAM,CAACc,eAAP,GAAyB,QAAQC,MAAR,CAAef,MAAM,CAACE,QAAtB,EAAgC,iBAAhC,CAAzB;AACAF,MAAM,CAACgB,aAAP,GAAuB,QAAQD,MAAR,CAAef,MAAM,CAACE,QAAtB,EAAgC,kBAAhC,CAAvB;AACAF,MAAM,CAACiB,gBAAP,GAA0B,QAAQF,MAAR,CAAef,MAAM,CAACE,QAAtB,EAAgC,mBAAhC,CAA1B;AACAF,MAAM,CAACkB,mBAAP,GAA6B,QAAQH,MAAR,CAAef,MAAM,CAACE,QAAtB,EAAgC,4BAAhC,CAA7B;AACAF,MAAM,CAACmB,eAAP,GAAyB,mEAAzB;AACAnB,MAAM,CAACoB,wBAAP,GAAkC,wDAAlC;AACApB,MAAM,CAACqB,YAAP,GAAsB,KAAtB;AACArB,MAAM,CAACsB,aAAP,GAAuB,KAAvB;AACAtB,MAAM,CAACuB,gBAAP,GAA0B,KAA1B;AACAvB,MAAM,CAACwB,qBAAP,GAA+B,iDAA/B;AACAxB,MAAM,CAACyB,YAAP,GAAsB,4CAAtB;AACAzB,MAAM,CAAC0B,sBAAP,GAAgC1B,MAAM,CAACyB,YAAvC;AACAzB,MAAM,CAAC2B,oBAAP,GAA8B,CAA9B;AACA3B,MAAM,CAAC4B,cAAP,GAAwB,CAAxB;AACA5B,MAAM,CAAC6B,MAAP,GAAgB,CAAhB;AACA7B,MAAM,CAAC8B,QAAP,GAAkB,CAAlB;AACA9B,MAAM,CAAC+B,eAAP,GAAyB/B,MAAM,CAACyB,YAAhC;AACAzB,MAAM,CAACgC,sBAAP,GAAgChC,MAAM,CAACyB,YAAvC;AACAzB,MAAM,CAACiC,qCAAP,GAA+CjC,MAAM,CAACyB,YAAtD;AACAzB,MAAM,CAACkC,8BAAP,GAAwC,CAAxC;AACAlC,MAAM,CAACmC,mBAAP,GAA6B,4BAA7B;AACAnC,MAAM,CAACoC,GAAP,GAAa,YAAb;AACApC,MAAM,CAACqC,OAAP,GAAiB,gBAAjB;AACArC,MAAM,CAACsC,iBAAP,GAA2B,QAAQvB,MAAR,CAAef,MAAM,CAACE,QAAtB,EAAgC,uBAAhC,CAA3B;AACAF,MAAM,CAACuC,WAAP,GAAqB,KAArB;AACA,IAAIC,MAAM,GAAG;AACXC,EAAAA,yBAAyB,EAAE,2BADhB;AAEXC,EAAAA,mBAAmB,EAAE,qBAFV;AAGXC,EAAAA,kBAAkB,EAAE,oBAHT;AAIXC,EAAAA,cAAc,EAAE,gBAJL;AAKXC,EAAAA,mBAAmB,EAAE;AALV,CAAb;AAOA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,cAAc,EAAE,MADG;AAEnBC,EAAAA,aAAa,EAAE,MAFI;AAGnBC,EAAAA,uBAAuB,EAAE,MAHN;AAInBC,EAAAA,kBAAkB,EAAE,MAJD;AAKnBC,EAAAA,sBAAsB,EAAE,MALL;AAMnBC,EAAAA,mBAAmB,EAAE,MANF;AAOnBC,EAAAA,wBAAwB,EAAE,MAPP;AAQnBC,EAAAA,oBAAoB,EAAE,MARH;AASnBC,EAAAA,wBAAwB,EAAE,MATP;AAUnBC,EAAAA,cAAc,EAAE,MAVG;AAWnBC,EAAAA,eAAe,EAAE,MAXE;AAYnBC,EAAAA,uBAAuB,EAAE,MAZN;AAanBC,EAAAA,gBAAgB,EAAE,MAbC;AAcnBC,EAAAA,6BAA6B,EAAE,MAdZ;AAenBC,EAAAA,mBAAmB,EAAE,MAfF;AAgBnBC,EAAAA,YAAY,EAAE,MAhBK;AAiBnBC,EAAAA,iBAAiB,EAAE,MAjBA;AAkBnBC,EAAAA,SAAS,EAAE;AAlBQ,CAArB,C,CAmBG;;AAEHhE,MAAM,CAACiE,kBAAP,GAA4B,CAAC;AAC3BC,EAAAA,IAAI,EAAE,MADqB;AAE3BC,EAAAA,IAAI,EAAE;AAFqB,CAAD,EAGzB;AACDD,EAAAA,IAAI,EAAE,IADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAHyB,EAMzB;AACDD,EAAAA,IAAI,EAAE,OADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CANyB,EASzB;AACDD,EAAAA,IAAI,EAAE,OADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CATyB,EAYzB;AACDD,EAAAA,IAAI,EAAE,eADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAZyB,EAezB;AACDD,EAAAA,IAAI,EAAE,SADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAfyB,EAkBzB;AACDD,EAAAA,IAAI,EAAE,YADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAlByB,EAqBzB;AACDD,EAAAA,IAAI,EAAE,UADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CArByB,EAwBzB;AACDD,EAAAA,IAAI,EAAE,MADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAxByB,CAA5B;AA4BAnE,MAAM,CAACoE,aAAP,GAAuB,CAAC;AACtBF,EAAAA,IAAI,EAAE,QADgB;AAEtBC,EAAAA,IAAI,EAAE;AAFgB,CAAD,EAGpB;AACDD,EAAAA,IAAI,EAAE,SADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAHoB,EAMpB;AACDD,EAAAA,IAAI,EAAE,OADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CANoB,EASpB;AACDD,EAAAA,IAAI,EAAE,QADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAToB,EAYpB;AACDD,EAAAA,IAAI,EAAE,SADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAZoB,CAAvB;AAgBAnE,MAAM,CAACqE,iBAAP,GAA2B,CAAC;AAC1BH,EAAAA,IAAI,EAAE,OADoB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAAD,EAGxB;AACDD,EAAAA,IAAI,EAAE,SADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAHwB,EAMxB;AACDD,EAAAA,IAAI,EAAE,OADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CANwB,EASxB;AACDD,EAAAA,IAAI,EAAE,OADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CATwB,EAYxB;AACDD,EAAAA,IAAI,EAAE,UADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAZwB,CAA3B,C,CAeI;;AAEJnE,MAAM,CAACsE,UAAP,GAAoB,CAAC;AACnBJ,EAAAA,IAAI,EAAE,MADa;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAAD,EAGjB;AACDD,EAAAA,IAAI,EAAE,SADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CAHiB,EAMjB;AACDD,EAAAA,IAAI,EAAE,SADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CANiB,EASjB;AACDD,EAAAA,IAAI,EAAE,mBADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CATiB,CAApB;AAaA,IAAII,uBAAuB,GAAG;AAC5BC,EAAAA,OAAO,EAAE,GADmB;AAE5BC,EAAAA,eAAe,EAAE,GAFW;AAG5BxB,EAAAA,uBAAuB,EAAE,GAHG;AAI5BF,EAAAA,cAAc,EAAE;AAJY,CAA9B;AAMA,IAAI2B,UAAU,GAAG;AACfC,EAAAA,EAAE,EAAE,GADW;AAEfC,EAAAA,qBAAqB,EAAE,GAFR;AAGfC,EAAAA,SAAS,EAAE,GAHI;AAIfC,EAAAA,QAAQ,EAAE,GAJK;AAKfC,EAAAA,kBAAkB,EAAE;AALL,CAAjB;AAOA,IAAIC,mBAAmB,GAAG;AACxBL,EAAAA,EAAE,EAAE,GADoB;AAExBM,EAAAA,kBAAkB,EAAE,GAFI;AAGxBC,EAAAA,kBAAkB,EAAE,GAHI;AAIxBC,EAAAA,iBAAiB,EAAE,GAJK;AAKxBC,EAAAA,qBAAqB,EAAE,GALC;AAMxBC,EAAAA,cAAc,EAAE,GANQ;AAOxBR,EAAAA,SAAS,EAAE;AAPa,CAA1B;AASA,IAAIS,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE,MADK;AAEXC,EAAAA,cAAc,EAAE,gBAFL;AAGXC,EAAAA,OAAO,EAAE;AAHE,CAAb;AAKAzF,MAAM,CAAC0F,GAAP,GAAa,KAAb;AACAC,MAAM,CAACC,OAAP,GAAiB;AACf5F,EAAAA,MAAM,EAAEA,MADO;AAEfwC,EAAAA,MAAM,EAAEA,MAFO;AAGfM,EAAAA,cAAc,EAAEA,cAHD;AAIf4B,EAAAA,UAAU,EAAEA,UAJG;AAKfM,EAAAA,mBAAmB,EAAEA,mBALN;AAMfT,EAAAA,uBAAuB,EAAEA,uBANV;AAOfe,EAAAA,MAAM,EAAEA;AAPO,CAAjB","sourcesContent":["\"use strict\";\n\nvar config = {};\nconfig.version = 'v1';\nconfig.version2 = 'v2';\nconfig.signTypedV3Method = \"eth_signTypedData_v3\";\nconfig.loginDomainName = \"Biconomy Login\";\nconfig.loginVersion = \"1\";\nconfig.eip712SigVersion = \"1\";\nconfig.eip712DomainName = \"Biconomy Meta Transaction\";\nconfig.eip712VerifyingContract = \"0x3457dC2A8Ff1d3FcC45eAd532CA1740f5c477160\";\nconfig.daiDomainName = \"Dai Stablecoin\";\nconfig.daiVersion = \"1\";\nconfig.forwarderDomainName = \"Biconomy Forwarder\";\nconfig.forwarderVersion = \"1\";\nconfig.baseURL = \"https://api.biconomy.io\";\nconfig.nativeMetaTxUrl = \"/api/\".concat(config.version2, \"/meta-tx/native\");\nconfig.userLoginPath = \"/api/\".concat(config.version2, \"/dapp-user/login\");\nconfig.withdrawFundsUrl = \"/api/\".concat(config.version2, \"/meta-tx/withdraw\");\nconfig.getUserContractPath = \"/api/\".concat(config.version2, \"/dapp-user/getUserContract\");\nconfig.MESSAGE_TO_SIGN = 'Sign message to prove the ownership of your account with counter ';\nconfig.WITHDRAW_MESSAGE_TO_SIGN = 'Provide your signature to withdraw funds with counter ';\nconfig.USER_ACCOUNT = \"BUA\";\nconfig.USER_CONTRACT = \"BUC\";\nconfig.JSON_RPC_VERSION = '2.0';\nconfig.LOGIN_MESSAGE_TO_SIGN = \"Sign message to login to Biconomy with counter \";\nconfig.ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nconfig.PAYMENT_TOKEN_CONTRACT = config.ZERO_ADDRESS;\nconfig.PAYMENT_TOKEN_AMOUNT = 0;\nconfig.NONCE_BATCH_ID = 0;\nconfig.EXPIRY = 0;\nconfig.BASE_GAS = 0;\nconfig.RELAYER_ADDRESS = config.ZERO_ADDRESS;\nconfig.TOKEN_CONTRACT_ADDRESS = config.ZERO_ADDRESS;\nconfig.DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS = config.ZERO_ADDRESS;\nconfig.DEFAULT_RELAYER_PAYMENT_AMOUNT = 0;\nconfig.DEFAULT_DESCRIPTION = \"Smart Contract Interaction\";\nconfig.DAI = \"DAI_Permit\";\nconfig.EIP2612 = \"EIP2612_Permit\";\nconfig.handleSignedTxUrl = \"/api/\".concat(config.version2, \"/meta-tx/sendSignedTx\");\nconfig.logsEnabled = false;\nvar EVENTS = {\n  SMART_CONTRACT_DATA_READY: 'smart_contract_data_ready',\n  DAPP_API_DATA_READY: 'dapp_api_data_ready',\n  LOGIN_CONFIRMATION: 'login_confirmation',\n  BICONOMY_ERROR: 'biconomy_error',\n  HELPER_CLENTS_READY: 'permit_and_ercforwarder_clients_ready'\n};\nvar RESPONSE_CODES = {\n  ERROR_RESPONSE: 'B500',\n  API_NOT_FOUND: 'B501',\n  USER_CONTRACT_NOT_FOUND: 'B502',\n  USER_NOT_LOGGED_IN: 'B503',\n  USER_ACCOUNT_NOT_FOUND: 'B504',\n  NETWORK_ID_MISMATCH: 'B505',\n  BICONOMY_NOT_INITIALIZED: 'B506',\n  NETWORK_ID_NOT_FOUND: 'B507',\n  SMART_CONTRACT_NOT_FOUND: 'B508',\n  DAPP_NOT_FOUND: 'B509',\n  INVALID_PAYLOAD: 'B510',\n  DASHBOARD_DATA_MISMATCH: 'B511',\n  SUCCESS_RESPONSE: 'B200',\n  USER_CONTRACT_CREATION_FAILED: 'B512',\n  EVENT_NOT_SUPPORTED: 'B513',\n  INVALID_DATA: 'B514',\n  INVALID_OPERATION: 'B515',\n  WRONG_ABI: 'B516'\n}; // could get these from sys info call\n\nconfig.forwardRequestType = [{\n  name: 'from',\n  type: 'address'\n}, {\n  name: 'to',\n  type: 'address'\n}, {\n  name: 'token',\n  type: 'address'\n}, {\n  name: 'txGas',\n  type: 'uint256'\n}, {\n  name: 'tokenGasPrice',\n  type: 'uint256'\n}, {\n  name: 'batchId',\n  type: 'uint256'\n}, {\n  name: 'batchNonce',\n  type: 'uint256'\n}, {\n  name: 'deadline',\n  type: 'uint256'\n}, {\n  name: 'data',\n  type: 'bytes'\n}];\nconfig.daiPermitType = [{\n  name: \"holder\",\n  type: \"address\"\n}, {\n  name: \"spender\",\n  type: \"address\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"expiry\",\n  type: \"uint256\"\n}, {\n  name: \"allowed\",\n  type: \"bool\"\n}];\nconfig.eip2612PermitType = [{\n  name: \"owner\",\n  type: \"address\"\n}, {\n  name: \"spender\",\n  type: \"address\"\n}, {\n  name: \"value\",\n  type: \"uint256\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"deadline\",\n  type: \"uint256\"\n}]; // This domain type is used in Permit Client where chainId needs to be preserved\n\nconfig.domainType = [{\n  name: \"name\",\n  type: \"string\"\n}, {\n  name: \"version\",\n  type: \"string\"\n}, {\n  name: \"chainId\",\n  type: \"uint256\"\n}, {\n  name: \"verifyingContract\",\n  type: \"address\"\n}];\nvar BICONOMY_RESPONSE_CODES = {\n  SUCCESS: 200,\n  ACTION_COMPLETE: 143,\n  USER_CONTRACT_NOT_FOUND: 148,\n  ERROR_RESPONSE: 144\n};\nvar HTTP_CODES = {\n  OK: 200,\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_FOUND: 404,\n  CONFLICT: 409,\n  EXPECTATION_FAILED: 417\n};\nvar RESPONSE_BODY_CODES = {\n  OK: 200,\n  DAPP_LIMIT_REACHED: 150,\n  USER_LIMIT_REACHED: 151,\n  API_LIMIT_REACHED: 152,\n  GAS_ESTIMATION_FAILED: 417,\n  INTERNAL_ERROR: 500,\n  NOT_FOUND: 404\n};\nvar STATUS = {\n  INIT: 'init',\n  BICONOMY_READY: 'biconomy_ready',\n  NO_DATA: 'no_data'\n};\nconfig.SCW = \"SCW\";\nmodule.exports = {\n  config: config,\n  EVENTS: EVENTS,\n  RESPONSE_CODES: RESPONSE_CODES,\n  HTTP_CODES: HTTP_CODES,\n  RESPONSE_BODY_CODES: RESPONSE_BODY_CODES,\n  BICONOMY_RESPONSE_CODES: BICONOMY_RESPONSE_CODES,\n  STATUS: STATUS\n};"]},"metadata":{},"sourceType":"script"}