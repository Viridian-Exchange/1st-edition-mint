{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\"; // import {tokenURI, ownerOfNoReq} from \"../../smartContracts/ViridianNFTMethods\";\n// import {tokenPackURI, ownerOfPackNoReq} from \"../../smartContracts/ViridianPackMethods\";\n// import ReactLoading from 'react-loading';\n// import Image from \"../Image\";\n\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page = ({\n  setPromptInstallMetamask,\n  users,\n  ownedNFTs,\n  ownedPacks,\n  nfts,\n  filteredNfts,\n  setFilteredNFTs,\n  children,\n  account,\n  setAccount,\n  connected,\n  setConnected,\n  userInfo,\n  setUserInfo,\n  ethBalance,\n  setEthBalance,\n  vextBalance,\n  setVextBalance\n}) => {\n  _s();\n\n  const [initialLoaded, setInitialLoaded] = useState(false);\n  const [networkName, setNetworkName] = useState(\"peen\");\n  const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\"); // console.log(networkName === \"ropsten\");\n  // if(networkName === \"ropsten\") {\n\n  useEffect(async () => {\n    //window.scrollTo(0, 0);\n    clearAllBodyScrollLocks();\n    setNetworkName(await web3.eth.net.getNetworkType());\n  }, [account]); //if (initialLoaded) {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.page,\n    children: [networkName !== 'ropsten' && networkName !== '' && /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visibleModalWrongNetwork,\n      onClose: () => {\n        setVisibleModalWrongNetwork(false); //history.push(\"/\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 69\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      setPromptInstallMetamask: setPromptInstallMetamask,\n      vextBalance: vextBalance,\n      setVextBalance: setVextBalance,\n      ethBalance: ethBalance,\n      setEthBalance: setEthBalance,\n      account: account,\n      setAccount: setAccount,\n      connected: connected,\n      setConnected: setConnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }, this); //}\n  // else {\n  //     return (\n  //         <div className={styles.page}>\n  //             {account}\n  //             {JSON.stringify(location.state)}\n  //             {/*{JSON.stringify(nfts)}*/}\n  //             {JSON.stringify(initialLoaded)}\n  //             <Header nfts={nfts} filteredNfts={filteredNfts} setFilteredNFTs={setFilteredNFTs}\n  //                     vextBalance={vextBalance} setVextBalance={setVextBalance} account={account}\n  //                     setAccount={setAccount} connected={connected} setConnected={setConnected} userInfo={userInfo}\n  //                     setUserInfo={setUserInfo}/>\n  //             <div style={{display: 'flex',\n  //                 justifyContent: 'center',\n  //                 alignItems: 'center',\n  //                 position: 'relative',\n  //                 marginTop: '20ex', marginBottom: '20ex'}}>\n  //                 <ReactLoading type={'spin'} color={'#bf9a36'} height={'10%'} width={'10%'} />\n  //             </div>\n  //             <div style={{display: 'flex',\n  //                 justifyContent: 'center',\n  //                 position: 'absolute',\n  //                 alignItems: 'center',\n  //                 top: '26.3%',\n  //                 left: '40.656%', transform: 'scale(.36, .36)'}}>\n  //                 <Image\n  //                     style={{maxWidth: '1ex', maxHeight: '1ex'}}\n  //                     src=\"/logo.svg\"\n  //                     srcDark=\"/logo.svg\"\n  //                     alt=\"Viridian Exchange\"\n  //                 />\n  //             </div>\n  //             <Footer/>\n  //         </div>\n  //     )\n  // }\n};\n\n_s(Page, \"b31Vtzj+TiGW3zqucSNTqjyylp4=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js"],"names":["React","useEffect","useState","withRouter","clearAllBodyScrollLocks","styles","Header","Footer","Web3","Modal","Page","setPromptInstallMetamask","users","ownedNFTs","ownedPacks","nfts","filteredNfts","setFilteredNFTs","children","account","setAccount","connected","setConnected","userInfo","setUserInfo","ethBalance","setEthBalance","vextBalance","setVextBalance","initialLoaded","setInitialLoaded","networkName","setNetworkName","visibleModalWrongNetwork","setVisibleModalWrongNetwork","web3","givenProvider","providers","HttpProvider","eth","net","getNetworkType","page","inner"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n// import {tokenURI, ownerOfNoReq} from \"../../smartContracts/ViridianNFTMethods\";\n// import {tokenPackURI, ownerOfPackNoReq} from \"../../smartContracts/ViridianPackMethods\";\n// import ReactLoading from 'react-loading';\n// import Image from \"../Image\";\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\n\nconst Page = ({ setPromptInstallMetamask, users, ownedNFTs, ownedPacks, nfts, filteredNfts, setFilteredNFTs, children, account, setAccount, connected, setConnected, userInfo, setUserInfo, ethBalance, setEthBalance, vextBalance, setVextBalance }) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [networkName, setNetworkName] = useState(\"peen\");\n    const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n    // console.log(networkName === \"ropsten\");\n    // if(networkName === \"ropsten\") {\n\n  useEffect(async () => {\n    //window.scrollTo(0, 0);\n    clearAllBodyScrollLocks();\n\n    setNetworkName(await web3.eth.net.getNetworkType());\n  }, [account]);\n\n  //if (initialLoaded) {\n      return (\n          <div className={styles.page}>\n              {(networkName !== 'ropsten' && networkName !== '') && <Modal\n                  visible={visibleModalWrongNetwork}\n                  onClose={() => {\n                      setVisibleModalWrongNetwork(false);\n                      //history.push(\"/\");\n                  }}\n              >\n              </Modal>}\n              {/*{account}*/}\n              {/*{JSON.stringify(location.state)}*/}\n              {/*{JSON.stringify(nfts)}*/}\n              {/*{JSON.stringify(initialLoaded)}*/}\n              <Header setPromptInstallMetamask={setPromptInstallMetamask} vextBalance={vextBalance} setVextBalance={setVextBalance} ethBalance={ethBalance} setEthBalance={setEthBalance} account={account}\n                      setAccount={setAccount} connected={connected} setConnected={setConnected} />\n              <div className={styles.inner}>{children}</div>\n              <Footer/>\n          </div>\n      );\n  //}\n  // else {\n  //     return (\n  //         <div className={styles.page}>\n  //             {account}\n  //             {JSON.stringify(location.state)}\n  //             {/*{JSON.stringify(nfts)}*/}\n  //             {JSON.stringify(initialLoaded)}\n  //             <Header nfts={nfts} filteredNfts={filteredNfts} setFilteredNFTs={setFilteredNFTs}\n  //                     vextBalance={vextBalance} setVextBalance={setVextBalance} account={account}\n  //                     setAccount={setAccount} connected={connected} setConnected={setConnected} userInfo={userInfo}\n  //                     setUserInfo={setUserInfo}/>\n  //             <div style={{display: 'flex',\n  //                 justifyContent: 'center',\n  //                 alignItems: 'center',\n  //                 position: 'relative',\n  //                 marginTop: '20ex', marginBottom: '20ex'}}>\n  //                 <ReactLoading type={'spin'} color={'#bf9a36'} height={'10%'} width={'10%'} />\n  //             </div>\n  //             <div style={{display: 'flex',\n  //                 justifyContent: 'center',\n  //                 position: 'absolute',\n  //                 alignItems: 'center',\n  //                 top: '26.3%',\n  //                 left: '40.656%', transform: 'scale(.36, .36)'}}>\n  //                 <Image\n  //                     style={{maxWidth: '1ex', maxHeight: '1ex'}}\n  //                     src=\"/logo.svg\"\n  //                     srcDark=\"/logo.svg\"\n  //                     alt=\"Viridian Exchange\"\n  //                 />\n  //             </div>\n  //             <Footer/>\n  //         </div>\n  //     )\n  // }\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}