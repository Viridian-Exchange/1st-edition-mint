{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\"; // import {tokenURI, ownerOfNoReq} from \"../../smartContracts/ViridianNFTMethods\";\n// import {tokenPackURI, ownerOfPackNoReq} from \"../../smartContracts/ViridianPackMethods\";\n// import ReactLoading from 'react-loading';\n// import Image from \"../Image\";\n\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\nimport WalletSelector from \"../WalletSelector\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { totalSupply } from \"../../smartContracts/Viridian1EPassMethods\";\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { MagicConnector } from \"@web3-react/magic-connector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoinbaseWallet = new WalletLinkConnector({\n  url: `https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js`,\n  appName: \"Viridian Genesis Drop\",\n  supportedChainIds: [1, 3, 4, 5, 42]\n});\nconst WalletConnect = new WalletConnectConnector({\n  rpcUrl: `https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js`,\n  bridge: \"https://bridge.walletconnect.org\",\n  qrcode: true\n});\nconst Injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42]\n});\n\nconst Page = ({\n  ethBalance,\n  setEthBalance\n}) => {\n  _s();\n\n  const [initialLoaded, setInitialLoaded] = useState(false);\n  const [networkName, setNetworkName] = useState(\"peen\");\n  const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n  const [visibleModalWallets, setVisibleModalWallets] = useState(false);\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\"); // console.log(networkName === \"ropsten\");\n  // if(networkName === \"ropsten\") {\n\n  const {\n    activate,\n    account\n  } = useWeb3React();\n  useEffect(async () => {\n    //window.scrollTo(0, 0);\n    clearAllBodyScrollLocks();\n    setNetworkName(await web3.eth.net.getNetworkType());\n  }, [account]);\n  useEffect(async () => {\n    alert(JSON.stringify(localStorage.getItem('lastAddConn')));\n\n    if (localStorage.getItem('lastAddConn') !== account) {\n      localStorage.setItem('connection', '');\n    }\n\n    if (localStorage.getItem('connection') === 'mm') {\n      activate(Injected);\n    } else if (localStorage.getItem('connection') === 'wc') {\n      activate(WalletConnect);\n    } else if (localStorage.getItem('connection') === 'cb') {\n      activate(CoinbaseWallet);\n    }\n  }, []); //if (initialLoaded) {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.page,\n    children: [networkName !== 'ropsten' && networkName !== '' && /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visibleModalWrongNetwork,\n      onClose: () => {\n        setVisibleModalWrongNetwork(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 69\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visibleModalWallets,\n      onClose: () => setVisibleModalWallets(false),\n      children: /*#__PURE__*/_jsxDEV(WalletSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      ethBalance: ethBalance,\n      setEthBalance: setEthBalance,\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Page, \"661hymKNLuGfq4AiLsv3WZwnWtE=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js"],"names":["React","useEffect","useState","withRouter","clearAllBodyScrollLocks","styles","Header","Footer","Web3","Modal","WalletSelector","useWeb3React","totalSupply","WalletLinkConnector","WalletConnectConnector","InjectedConnector","MagicConnector","CoinbaseWallet","url","appName","supportedChainIds","WalletConnect","rpcUrl","bridge","qrcode","Injected","Page","ethBalance","setEthBalance","initialLoaded","setInitialLoaded","networkName","setNetworkName","visibleModalWrongNetwork","setVisibleModalWrongNetwork","visibleModalWallets","setVisibleModalWallets","web3","givenProvider","providers","HttpProvider","activate","account","eth","net","getNetworkType","alert","JSON","stringify","localStorage","getItem","setItem","page","inner","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n// import {tokenURI, ownerOfNoReq} from \"../../smartContracts/ViridianNFTMethods\";\n// import {tokenPackURI, ownerOfPackNoReq} from \"../../smartContracts/ViridianPackMethods\";\n// import ReactLoading from 'react-loading';\n// import Image from \"../Image\";\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\nimport WalletSelector from \"../WalletSelector\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {totalSupply} from \"../../smartContracts/Viridian1EPassMethods\";\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { MagicConnector } from \"@web3-react/magic-connector\";\n\nconst CoinbaseWallet = new WalletLinkConnector({\n    url: `https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js`,\n    appName: \"Viridian Genesis Drop\",\n    supportedChainIds: [1, 3, 4, 5, 42],\n});\n\nconst WalletConnect = new WalletConnectConnector({\n    rpcUrl: `https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js`,\n    bridge: \"https://bridge.walletconnect.org\",\n    qrcode: true,\n});\n\nconst Injected = new InjectedConnector({\n    supportedChainIds: [1, 3, 4, 5, 42]\n});\n\n\nconst Page = ({ethBalance, setEthBalance}) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [networkName, setNetworkName] = useState(\"peen\");\n    const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n    const [visibleModalWallets, setVisibleModalWallets] = useState(false);\n\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n    // console.log(networkName === \"ropsten\");\n    // if(networkName === \"ropsten\") {\n\n    const { activate, account } = useWeb3React();\n\n  useEffect(async () => {\n    //window.scrollTo(0, 0);\n    clearAllBodyScrollLocks();\n\n    setNetworkName(await web3.eth.net.getNetworkType());\n  }, [account]);\n\n    useEffect(async () => {\n\n        alert(JSON.stringify(localStorage.getItem('lastAddConn')));\n        if (localStorage.getItem('lastAddConn') !== account) {\n            localStorage.setItem('connection', '')\n        }\n\n        if(localStorage.getItem('connection') === 'mm') {\n            activate(Injected);\n        }\n        else if(localStorage.getItem('connection') === 'wc') {\n            activate(WalletConnect);\n        }\n        else if(localStorage.getItem('connection') === 'cb') {\n            activate(CoinbaseWallet);\n        }\n    }, []);\n\n  //if (initialLoaded) {\n      return (\n          <div className={styles.page}>\n              {(networkName !== 'ropsten' && networkName !== '') && <Modal\n                  visible={visibleModalWrongNetwork}\n                  onClose={() => {\n                      setVisibleModalWrongNetwork(false);\n                  }}\n              >\n              </Modal>}\n\n              <Modal\n                  visible={visibleModalWallets}\n                  onClose={() => setVisibleModalWallets(false)}\n              >\n                  <WalletSelector />\n              </Modal>\n              <Header ethBalance={ethBalance} setEthBalance={setEthBalance} account={account} />\n              <div className={styles.inner}>{children}</div>\n              <Footer/>\n          </div>\n      );\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}