{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Open/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport { getTrackBackground, Range } from \"react-range\";\nimport { totalSupply, mint, getOwnedNFTs, openPack, tokenURI } from \"../../smartContracts/Viridian1EPassMethods\"; //import {useCryptoPrices} from \"react-realtime-crypto-prices\";\n\nimport { Breakpoint } from 'react-socks';\nimport { Carousel } from '3d-react-carousal'; // let slidez = [\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Open = props => {\n  _s();\n\n  const [initialLoaded, setInitialLoaded] = useState(false);\n  const [values, setValues] = useState([1]);\n  const [minted, setMinted] = useState(0); //const prices = useCryptoPrices([\"eth\"]);\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [loadingOpening, setLoadingOpening] = useState(false);\n  const [showOpeningAnimation, setShowOpeningAnimation] = useState(false);\n  const [showOpenedCard, setShowOpenedCard] = useState(false);\n  const [slides, setSlides] = useState([]);\n  const [tokenIds, setTokenIds] = useState([]);\n  const [fetched, setFetched] = useState(false);\n  const STEP = 1;\n  const MIN = 1;\n  const MAX = 10;\n  useEffect(async () => {\n    //alert(JSON.stringify(props));\n    if (props.account) {\n      //alert(await getOwnedNFTs(props.account));\n      if (!fetched) {\n        //alert('hi');\n        // alert('hi1');\n        //alert(await getOwnedNFTs(props.account));\n        //alert('hi3');\n        //setMinted(await totalSupply());\n        let nfts = await getOwnedNFTs(props.account); //alert(\"NFTS: \" /+ JSON.stringify(nfts));\n\n        let slidesTemp = [];\n        let tID = [];\n        nfts.map(async (x, index) => {\n          slidesTemp.push( /*#__PURE__*/_jsxDEV(\"video\", {\n            autoPlay: true,\n            muted: true,\n            loop: true,\n            playsInline: true,\n            style: {\n              maxWidth: '40ex'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: \"https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4\",\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 37\n          }, this));\n          let uri = await tokenURI(x, props.account);\n          tID.push(uri.split('/')[4]);\n        });\n        setSlides(slidesTemp);\n        slidesTemp = [];\n        setTokenIds(tID);\n        setFetched(true);\n      }\n    } else {\n      setFetched(false);\n    }\n  }, [fetched, props]); // let slides = [\n  //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n  //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n  //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n  //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n  //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n  // ]\n\n  const callback = function (index) {\n    console.log(\"callback\", index);\n\n    if (tokenIds.length <= 3) {\n      setCurrentIndex(index % tokenIds.length);\n    } else {\n      setCurrentIndex(index);\n    }\n  };\n\n  const idParse = id => {\n    if (id) {\n      return \"#\" + id;\n    } else {\n      return \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"section\", styles.section),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"container\", styles.container),\n        children: [/*#__PURE__*/_jsxDEV(\"p2\", {\n          style: {\n            color: 'grey'\n          },\n          children: \"Reveal the physically-backed NFT inside!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: cn(\"h3\", styles.title),\n          children: \"Open Viridian Genesis Packs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), slides.length > 0 && /*#__PURE__*/_jsxDEV(Breakpoint, {\n          small: true,\n          down: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Carousel, {\n              slides: slides,\n              onSlideChange: callback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 39\n        }, this), slides.length > 0 && /*#__PURE__*/_jsxDEV(Breakpoint, {\n          medium: true,\n          up: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              minHeight: '65ex'\n            },\n            children: /*#__PURE__*/_jsxDEV(Carousel, {\n              slides: slides,\n              onSlideChange: callback,\n              arrows: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 39\n        }, this), [].length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: '3ex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: 'center',\n              color: 'gray',\n              marginBottom: '2ex'\n            },\n            children: \"Purchase a Viridian Genesis Pass on secondary to open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: cn(\"link\", styles.link),\n            href: \"https://opensea.io\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            style: {\n              marginRight: '1ex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                maxWidth: '5ex'\n              },\n              src: \"https://opensea.io/static/images/logos/opensea.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), \"Opensea\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: cn(\"link\", styles.link),\n            href: \"https://looksrare.org\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            style: {\n              marginLeft: '1ex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                maxWidth: '7ex'\n              },\n              src: \"https://logowik.com/content/uploads/images/looksrare9736.jpg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), \"Looksrare\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: '4ex'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cn(styles.link, {}),\n            onClick: async () => {\n              await openPack(props.account, values[0]);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: '4ex',\n                marginTop: '-.5ex',\n                height: '6ex',\n                marginRight: '1ex'\n              },\n              src: \"/trading_card_icon.svg\",\n              alt: \"ETH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this), \" \", \"Open Pack \" + idParse(tokenIds[currentIndex])]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Open, \"0V9GZ1OdXipD3zOj7zvB0sjOkew=\");\n\n_c = Open;\nexport default Open;\n\nvar _c;\n\n$RefreshReg$(_c, \"Open\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Open/index.js"],"names":["React","useState","useEffect","cn","ProgressBar","styles","getTrackBackground","Range","totalSupply","mint","getOwnedNFTs","openPack","tokenURI","Breakpoint","Carousel","Open","props","initialLoaded","setInitialLoaded","values","setValues","minted","setMinted","currentIndex","setCurrentIndex","loadingOpening","setLoadingOpening","showOpeningAnimation","setShowOpeningAnimation","showOpenedCard","setShowOpenedCard","slides","setSlides","tokenIds","setTokenIds","fetched","setFetched","STEP","MIN","MAX","account","nfts","slidesTemp","tID","map","x","index","push","maxWidth","uri","split","callback","console","log","length","idParse","id","section","container","color","title","textAlign","minHeight","marginTop","marginBottom","link","marginRight","marginLeft","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {totalSupply, mint, getOwnedNFTs, openPack, tokenURI} from \"../../smartContracts/Viridian1EPassMethods\"\n//import {useCryptoPrices} from \"react-realtime-crypto-prices\";\nimport {Breakpoint} from 'react-socks';\nimport {Carousel} from '3d-react-carousal';\n\n// let slidez = [\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>,\n//     <video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n//         <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4' type=\"video/mp4\"/>\n//     </video>];\n\nconst Open = (props) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState(0);\n    //const prices = useCryptoPrices([\"eth\"]);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [loadingOpening, setLoadingOpening] = useState(false);\n    const [showOpeningAnimation, setShowOpeningAnimation] = useState(false);\n    const [showOpenedCard, setShowOpenedCard] = useState(false);\n    const [slides, setSlides] = useState([]);\n    const [tokenIds, setTokenIds] = useState([]);\n\n    const [fetched, setFetched] = useState(false)\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        //alert(JSON.stringify(props));\n        if (props.account) {\n            //alert(await getOwnedNFTs(props.account));\n            if (!fetched) {\n                //alert('hi');\n               // alert('hi1');\n                //alert(await getOwnedNFTs(props.account));\n                //alert('hi3');\n                //setMinted(await totalSupply());\n\n\n                let nfts = await getOwnedNFTs(props.account);\n\n                //alert(\"NFTS: \" /+ JSON.stringify(nfts));\n\n                let slidesTemp = [];\n\n                let tID = [];\n\n                nfts.map(async (x, index) => {\n                    slidesTemp.push(<video autoPlay muted loop={true} playsInline style={{maxWidth: '40ex'}}>\n                        <source src='https://viridian-images.s3.us-east-2.amazonaws.com/ezgif.com-gif-maker.mp4'\n                                type=\"video/mp4\"/>\n                    </video>);\n                    let uri = await tokenURI(x, props.account);\n                    tID.push(uri.split('/')[4]);\n                });\n\n                setSlides(slidesTemp);\n                slidesTemp = [];\n                setTokenIds(tID);\n                setFetched(true);\n            }\n        }\n        else {\n            setFetched(false);\n        }\n    }, [fetched, props]);\n\n    // let slides = [\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />,\n    //     <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n    // ]\n\n    const callback = function(index){\n        console.log(\"callback\",index);\n        if (tokenIds.length <= 3) {\n            setCurrentIndex(index % tokenIds.length);\n        }\n        else {\n            setCurrentIndex(index);\n        }\n    }\n\n    const idParse = (id) => {\n        if (id) {\n            return \"#\" + id;\n        }\n        else {\n            return \"\";\n        }\n    }\n\n  return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                <p2 style={{color: 'grey'}}>Reveal the physically-backed NFT inside!</p2>\n                <h3 className={cn(\"h3\", styles.title)}>Open Viridian Genesis Packs</h3>\n                {/*{JSON.stringify(tokenIds)}*/}\n                {/*{JSON.stringify(slides.length)}*/}\n                {slides.length > 0 && <Breakpoint small down>\n                    <div style={{textAlign: 'center'}}>\n                        <Carousel slides={slides} onSlideChange={callback}/>\n                    </div>\n                </Breakpoint> }\n                {slides.length > 0 && <Breakpoint medium up>\n                    <div style={{textAlign: 'center', minHeight: '65ex'}}>\n                        <Carousel slides={slides} onSlideChange={callback} arrows={true}/>\n                    </div>\n                </Breakpoint>}\n\n                {[].length === 0 &&\n                    <div style={{textAlign: 'center', marginTop: '3ex'}}>\n                        <h2 style={{textAlign: 'center', color: 'gray', marginBottom: '2ex'}}>\n                            Purchase a Viridian Genesis Pass on secondary to open\n                        </h2>\n                        <a className={cn(\"link\", styles.link)}\n                        href=\"https://opensea.io\"\n                        target=\"_blank\" rel=\"noopener noreferrer\"\n                           style={{marginRight: '1ex'}}\n                        >\n                            <img style={{maxWidth: '5ex'}} src='https://opensea.io/static/images/logos/opensea.svg'/>\n                            Opensea\n                        </a>\n\n                        <a className={cn(\"link\", styles.link)}\n                           href=\"https://looksrare.org\"\n                           target=\"_blank\" rel=\"noopener noreferrer\"\n                            style={{marginLeft: '1ex'}}\n                        >\n                            <img style={{maxWidth: '7ex'}} src='https://logowik.com/content/uploads/images/looksrare9736.jpg'/>\n                            Looksrare\n                        </a>\n                    </div>\n                }\n                {/*<h2 style={{marginTop: '2ex', textAlign: 'center'}}>*/}\n                {/*    Open 🃏*/}\n                {/*</h2>*/}\n                {/*<h3 style={{marginBottom: '2ex', textAlign: 'center'}}>*/}\n                {/*    <div className={styles.wallet}>*/}\n                {/*        <img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                {/*        {values[0]}*/}\n                {/*    </div>*/}\n                {/*    {prices.eth && <p2 style={{color: 'grey'}}>*/}\n                {/*        ${((values[0] * prices.eth) * 100) / 100}*/}\n                {/*    </p2>}*/}\n                {/*</h3>*/}\n                <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                    {/*{JSON.stringify(props)}*/}\n                    <button\n                        className={cn(styles.link, {\n                        })}\n                        onClick={async () => {await openPack(props.account, values[0])}}\n                    >\n                        <img style={{width: '4ex', marginTop: '-.5ex', height: '6ex', marginRight: '1ex'}}\n                             src='/trading_card_icon.svg'\n                             alt='ETH' /> {\"Open Pack \" + idParse(tokenIds[currentIndex])}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Open;\n"]},"metadata":{},"sourceType":"module"}