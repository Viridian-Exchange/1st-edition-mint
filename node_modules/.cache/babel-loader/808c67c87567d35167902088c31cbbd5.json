{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\nimport WalletSelector from \"../WalletSelector\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Injected, WalletConnect, CoinbaseWallet } from \"../../utils/connectors\";\nimport { switchNetwork } from \"../../utils/walletHandlers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page = ({\n  biconomyFetched,\n  children\n}) => {\n  _s();\n\n  const [networkName, setNetworkName] = useState(\"\");\n  const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n  const [visibleModalWallets, setVisibleModalWallets] = useState(false);\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n  const {\n    activate,\n    account,\n    library\n  } = useWeb3React();\n  useEffect(async () => {\n    alert(\"LBR: \" + JSON.stringify(provider));\n\n    if (biconomyFetched === true) {\n      alert(\"lib: \" + JSON.stringify(provider)); // if (localStorage.getItem('lastAddConn') !== account) {\n      //     localStorage.setItem('connection', '');\n      // }\n\n      if (localStorage.getItem('connection') === 'mm') {\n        activate(Injected);\n      } else if (localStorage.getItem('connection') === 'wc') {\n        activate(WalletConnect);\n      } else if (localStorage.getItem('connection') === 'cb') {\n        activate(CoinbaseWallet);\n      }\n    }\n  }, [biconomyFetched]);\n  useEffect(async () => {\n    clearAllBodyScrollLocks();\n\n    if (library) {\n      await switchNetwork(library.provider);\n    }\n  }, [provider]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.page,\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      visible: visibleModalWallets,\n      onClose: () => setVisibleModalWallets(false),\n      children: /*#__PURE__*/_jsxDEV(WalletSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Page, \"09qj/poABZ13P5eRb89CDb4PZwg=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js"],"names":["React","useEffect","useState","withRouter","clearAllBodyScrollLocks","styles","Header","Footer","Web3","Modal","WalletSelector","useWeb3React","Injected","WalletConnect","CoinbaseWallet","switchNetwork","Page","biconomyFetched","children","networkName","setNetworkName","visibleModalWrongNetwork","setVisibleModalWrongNetwork","visibleModalWallets","setVisibleModalWallets","web3","givenProvider","providers","HttpProvider","activate","account","library","alert","JSON","stringify","provider","localStorage","getItem","page","inner"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\nimport WalletSelector from \"../WalletSelector\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport { Injected, WalletConnect, CoinbaseWallet } from \"../../utils/connectors\";\nimport { switchNetwork } from \"../../utils/walletHandlers\";\n\nconst Page = ({biconomyFetched, children}) => {\n    const [networkName, setNetworkName] = useState(\"\");\n    const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n    const [visibleModalWallets, setVisibleModalWallets] = useState(false);\n\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n\n    const { activate, account, library } = useWeb3React();\n\n    useEffect(async () => {\n        alert(\"LBR: \" + JSON.stringify(provider));\n        if (biconomyFetched === true) {\n            alert(\"lib: \" + JSON.stringify(provider));\n            // if (localStorage.getItem('lastAddConn') !== account) {\n            //     localStorage.setItem('connection', '');\n            // }\n\n            if (localStorage.getItem('connection') === 'mm') {\n                activate(Injected);\n            } else if (localStorage.getItem('connection') === 'wc') {\n                activate(WalletConnect);\n            } else if (localStorage.getItem('connection') === 'cb') {\n                activate(CoinbaseWallet);\n            }\n        }\n    }, [biconomyFetched]);\n\n  useEffect(async () => {\n    clearAllBodyScrollLocks();\n\n    if (library) {\n        await switchNetwork(library.provider);\n    }\n  }, [provider]);\n\n      return (\n          <div className={styles.page}>\n\n              <Modal\n                  visible={visibleModalWallets}\n                  onClose={() => setVisibleModalWallets(false)}\n              >\n                  <WalletSelector />\n              </Modal>\n              <Header account={account} />\n              <div className={styles.inner}>{children}</div>\n              <Footer/>\n          </div>\n      );\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}