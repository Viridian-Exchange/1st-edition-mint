{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nvar address_1 = require(\"./address\");\n\nvar abi_coder_1 = require(\"./abi-coder\");\n\nvar bignumber_1 = require(\"./bignumber\");\n\nvar bytes_1 = require(\"./bytes\");\n\nvar hash_1 = require(\"./hash\");\n\nvar keccak256_1 = require(\"./keccak256\");\n\nvar properties_1 = require(\"./properties\");\n\nvar errors = __importStar(require(\"../errors\")); ///////////////////////////////\n\n\nvar _Indexed =\n/** @class */\nfunction () {\n  function _Indexed(hash) {\n    properties_1.setType(this, 'Indexed');\n    properties_1.defineReadOnly(this, 'hash', hash);\n  }\n\n  return _Indexed;\n}();\n\nvar Description =\n/** @class */\nfunction () {\n  function Description(info) {\n    properties_1.setType(this, 'Description');\n\n    for (var key in info) {\n      properties_1.defineReadOnly(this, key, properties_1.deepCopy(info[key], true));\n    }\n\n    Object.freeze(this);\n  }\n\n  return Description;\n}();\n\nvar _DeployDescription =\n/** @class */\nfunction (_super) {\n  __extends(_DeployDescription, _super);\n\n  function _DeployDescription() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  _DeployDescription.prototype.encode = function (bytecode, params) {\n    if (!bytes_1.isHexString(bytecode)) {\n      errors.throwError('invalid contract bytecode', errors.INVALID_ARGUMENT, {\n        arg: 'bytecode',\n        value: bytecode\n      });\n    }\n\n    errors.checkArgumentCount(params.length, this.inputs.length, ' in Interface constructor');\n\n    try {\n      return bytecode + abi_coder_1.defaultAbiCoder.encode(this.inputs, params).substring(2);\n    } catch (error) {\n      errors.throwError('invalid constructor argument', errors.INVALID_ARGUMENT, {\n        arg: error.arg,\n        reason: error.reason,\n        value: error.value\n      });\n    }\n\n    return null;\n  };\n\n  return _DeployDescription;\n}(Description);\n\nvar _FunctionDescription =\n/** @class */\nfunction (_super) {\n  __extends(_FunctionDescription, _super);\n\n  function _FunctionDescription() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  _FunctionDescription.prototype.encode = function (params) {\n    errors.checkArgumentCount(params.length, this.inputs.length, ' in interface function ' + this.name);\n\n    try {\n      return this.sighash + abi_coder_1.defaultAbiCoder.encode(this.inputs, params).substring(2);\n    } catch (error) {\n      errors.throwError('invalid input argument', errors.INVALID_ARGUMENT, {\n        arg: error.arg,\n        reason: error.reason,\n        value: error.value\n      });\n    }\n\n    return null;\n  };\n\n  _FunctionDescription.prototype.decode = function (data) {\n    try {\n      return abi_coder_1.defaultAbiCoder.decode(this.outputs, bytes_1.arrayify(data));\n    } catch (error) {\n      errors.throwError('invalid data for function output', errors.INVALID_ARGUMENT, {\n        arg: 'data',\n        errorArg: error.arg,\n        errorValue: error.value,\n        value: data,\n        reason: error.reason\n      });\n    }\n  };\n\n  return _FunctionDescription;\n}(Description);\n\nvar Result =\n/** @class */\nfunction (_super) {\n  __extends(Result, _super);\n\n  function Result() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return Result;\n}(Description);\n\nvar _EventDescription =\n/** @class */\nfunction (_super) {\n  __extends(_EventDescription, _super);\n\n  function _EventDescription() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  _EventDescription.prototype.encodeTopics = function (params) {\n    var _this = this;\n\n    if (params.length > this.inputs.length) {\n      errors.throwError('too many arguments for ' + this.name, errors.UNEXPECTED_ARGUMENT, {\n        maxCount: params.length,\n        expectedCount: this.inputs.length\n      });\n    }\n\n    var topics = [];\n\n    if (!this.anonymous) {\n      topics.push(this.topic);\n    }\n\n    params.forEach(function (arg, index) {\n      var param = _this.inputs[index];\n\n      if (!param.indexed) {\n        if (arg != null) {\n          errors.throwError('cannot filter non-indexed parameters; must be null', errors.INVALID_ARGUMENT, {\n            argument: param.name || index,\n            value: arg\n          });\n        }\n\n        return;\n      }\n\n      if (arg == null) {\n        topics.push(null);\n      } else if (param.type === 'string') {\n        topics.push(hash_1.id(arg));\n      } else if (param.type === 'bytes') {\n        topics.push(keccak256_1.keccak256(arg));\n      } else if (param.type.indexOf('[') !== -1 || param.type.substring(0, 5) === 'tuple') {\n        errors.throwError('filtering with tuples or arrays not implemented yet; bug us on GitHub', errors.NOT_IMPLEMENTED, {\n          operation: 'filter(array|tuple)'\n        });\n      } else {\n        if (param.type === 'address') {\n          address_1.getAddress(arg);\n        }\n\n        topics.push(bytes_1.hexZeroPad(bytes_1.hexlify(arg), 32).toLowerCase());\n      }\n    }); // Trim off trailing nulls\n\n    while (topics.length && topics[topics.length - 1] === null) {\n      topics.pop();\n    }\n\n    return topics;\n  };\n\n  _EventDescription.prototype.decode = function (data, topics) {\n    // Strip the signature off of non-anonymous topics\n    if (topics != null && !this.anonymous) {\n      topics = topics.slice(1);\n    }\n\n    var inputIndexed = [];\n    var inputNonIndexed = [];\n    var inputDynamic = [];\n    this.inputs.forEach(function (param, index) {\n      if (param.indexed) {\n        if (param.type === 'string' || param.type === 'bytes' || param.type.indexOf('[') >= 0 || param.type.substring(0, 5) === 'tuple') {\n          inputIndexed.push({\n            type: 'bytes32',\n            name: param.name || ''\n          });\n          inputDynamic.push(true);\n        } else {\n          inputIndexed.push(param);\n          inputDynamic.push(false);\n        }\n      } else {\n        inputNonIndexed.push(param);\n        inputDynamic.push(false);\n      }\n    });\n\n    if (topics != null) {\n      var resultIndexed = abi_coder_1.defaultAbiCoder.decode(inputIndexed, bytes_1.concat(topics));\n    }\n\n    var resultNonIndexed = abi_coder_1.defaultAbiCoder.decode(inputNonIndexed, bytes_1.arrayify(data));\n    var result = {};\n    var nonIndexedIndex = 0,\n        indexedIndex = 0;\n    this.inputs.forEach(function (input, index) {\n      if (input.indexed) {\n        if (topics == null) {\n          result[index] = new _Indexed(null);\n        } else if (inputDynamic[index]) {\n          result[index] = new _Indexed(resultIndexed[indexedIndex++]);\n        } else {\n          result[index] = resultIndexed[indexedIndex++];\n        }\n      } else {\n        result[index] = resultNonIndexed[nonIndexedIndex++];\n      }\n\n      if (input.name) {\n        result[input.name] = result[index];\n      }\n    });\n    result.length = this.inputs.length;\n    return new Result(result);\n  };\n\n  return _EventDescription;\n}(Description);\n\nvar _TransactionDescription =\n/** @class */\nfunction (_super) {\n  __extends(_TransactionDescription, _super);\n\n  function _TransactionDescription() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return _TransactionDescription;\n}(Description);\n\nvar _LogDescription =\n/** @class */\nfunction (_super) {\n  __extends(_LogDescription, _super);\n\n  function _LogDescription() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return _LogDescription;\n}(Description);\n\nfunction addMethod(method) {\n  switch (method.type) {\n    case 'constructor':\n      {\n        var description = new _DeployDescription({\n          inputs: method.inputs,\n          payable: method.payable == null || !!method.payable\n        });\n\n        if (!this.deployFunction) {\n          this.deployFunction = description;\n        }\n\n        break;\n      }\n\n    case 'function':\n      {\n        var signature = abi_coder_1.formatSignature(method).replace(/tuple/g, '');\n        var sighash = hash_1.id(signature).substring(0, 10);\n        var isConst = false;\n\n        if (method.constant != null) {\n          isConst = method.constant;\n        } else if (method.stateMutability != null) {\n          isConst = method.stateMutability == \"view\" || method.stateMutability == \"pure\";\n        }\n\n        var description = new _FunctionDescription({\n          inputs: method.inputs,\n          outputs: method.outputs,\n          gas: method.gas,\n          payable: method.payable == null || !!method.payable,\n          type: isConst ? 'call' : 'transaction',\n          name: method.name,\n          signature: signature,\n          sighash: sighash\n        }); // Expose the first (and hopefully unique named function)\n\n        if (method.name) {\n          if (this.functions[method.name] == null) {\n            properties_1.defineReadOnly(this.functions, method.name, description);\n          } else {\n            errors.warn('WARNING: Multiple definitions for ' + method.name);\n          }\n        } // Expose all methods by their signature, for overloaded functions\n\n\n        if (this.functions[description.signature] == null) {\n          properties_1.defineReadOnly(this.functions, description.signature, description);\n        }\n\n        break;\n      }\n\n    case 'event':\n      {\n        var signature = abi_coder_1.formatSignature(method).replace(/tuple/g, '');\n        var description = new _EventDescription({\n          name: method.name,\n          signature: signature,\n          inputs: method.inputs,\n          topic: hash_1.id(signature),\n          anonymous: !!method.anonymous\n        }); // Expose the first (and hopefully unique) event name\n\n        if (method.name && this.events[method.name] == null) {\n          properties_1.defineReadOnly(this.events, method.name, description);\n        } // Expose all events by their signature, for overloaded functions\n\n\n        if (this.events[description.signature] == null) {\n          properties_1.defineReadOnly(this.events, description.signature, description);\n        }\n\n        break;\n      }\n\n    case \"receive\":\n    case 'fallback':\n      // Nothing to do for fallback\n      break;\n\n    default:\n      errors.warn('WARNING: unsupported ABI type - ' + method.type);\n      break;\n  }\n}\n\nvar Interface =\n/** @class */\nfunction () {\n  // ParamType is not actually correct here, but for legacy reasons,\n  // we need it. See #721.\n  function Interface(abi) {\n    errors.checkNew(this, Interface);\n\n    if (typeof abi === 'string') {\n      try {\n        abi = JSON.parse(abi);\n      } catch (error) {\n        errors.throwError('could not parse ABI JSON', errors.INVALID_ARGUMENT, {\n          arg: 'abi',\n          errorMessage: error.message,\n          value: abi\n        });\n      }\n\n      if (!Array.isArray(abi)) {\n        errors.throwError('invalid abi', errors.INVALID_ARGUMENT, {\n          arg: 'abi',\n          value: abi\n        });\n        return null;\n      }\n    }\n\n    properties_1.defineReadOnly(this, 'functions', {});\n    properties_1.defineReadOnly(this, 'events', {}); // Convert any supported ABI format into a standard ABI format\n\n    var _abi = [];\n    abi.forEach(function (fragment) {\n      if (typeof fragment === 'string') {\n        fragment = abi_coder_1.parseSignature(fragment);\n      } // @TODO: We should probable do some validation; create abiCoder.formatSignature for checking\n\n\n      _abi.push(fragment);\n    });\n    properties_1.defineReadOnly(this, 'abi', properties_1.deepCopy(_abi, true));\n\n    _abi.forEach(addMethod, this); // If there wasn't a constructor, create the default constructor\n\n\n    if (!this.deployFunction) {\n      addMethod.call(this, {\n        type: 'constructor',\n        inputs: []\n      });\n    }\n\n    properties_1.setType(this, 'Interface');\n  }\n\n  Interface.prototype.parseTransaction = function (tx) {\n    var sighash = tx.data.substring(0, 10).toLowerCase();\n\n    for (var name in this.functions) {\n      if (name.indexOf('(') === -1) {\n        continue;\n      }\n\n      var func = this.functions[name];\n\n      if (func.sighash === sighash) {\n        var result = abi_coder_1.defaultAbiCoder.decode(func.inputs, '0x' + tx.data.substring(10));\n        return new _TransactionDescription({\n          args: result,\n          decode: func.decode,\n          name: func.name,\n          signature: func.signature,\n          sighash: func.sighash,\n          value: bignumber_1.bigNumberify(tx.value || '0')\n        });\n      }\n    }\n\n    return null;\n  };\n\n  Interface.prototype.parseLog = function (log) {\n    for (var name in this.events) {\n      if (name.indexOf('(') === -1) {\n        continue;\n      }\n\n      var event = this.events[name];\n\n      if (event.anonymous) {\n        continue;\n      }\n\n      if (event.topic !== log.topics[0]) {\n        continue;\n      } // @TODO: If anonymous, and the only method, and the input count matches, should we parse and return it?\n\n\n      return new _LogDescription({\n        decode: event.decode,\n        name: event.name,\n        signature: event.signature,\n        topic: event.topic,\n        values: event.decode(log.data, log.topics)\n      });\n    }\n\n    return null;\n  };\n\n  Interface.isInterface = function (value) {\n    return properties_1.isType(value, 'Interface');\n  };\n\n  Interface.isIndexed = function (value) {\n    return properties_1.isType(value, 'Indexed');\n  };\n\n  return Interface;\n}();\n\nexports.Interface = Interface;","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/node_modules/ethereum-tx-decoder/node_modules/ethers/utils/interface.js"],"names":["__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","__importStar","mod","__esModule","result","k","call","defineProperty","exports","value","address_1","require","abi_coder_1","bignumber_1","bytes_1","hash_1","keccak256_1","properties_1","errors","_Indexed","hash","setType","defineReadOnly","Description","info","key","deepCopy","freeze","_DeployDescription","_super","apply","arguments","encode","bytecode","params","isHexString","throwError","INVALID_ARGUMENT","arg","checkArgumentCount","length","inputs","defaultAbiCoder","substring","error","reason","_FunctionDescription","name","sighash","decode","data","outputs","arrayify","errorArg","errorValue","Result","_EventDescription","encodeTopics","_this","UNEXPECTED_ARGUMENT","maxCount","expectedCount","topics","anonymous","push","topic","forEach","index","param","indexed","argument","type","id","keccak256","indexOf","NOT_IMPLEMENTED","operation","getAddress","hexZeroPad","hexlify","toLowerCase","pop","slice","inputIndexed","inputNonIndexed","inputDynamic","resultIndexed","concat","resultNonIndexed","nonIndexedIndex","indexedIndex","input","_TransactionDescription","_LogDescription","addMethod","method","description","payable","deployFunction","signature","formatSignature","replace","isConst","constant","stateMutability","gas","functions","warn","events","Interface","abi","checkNew","JSON","parse","errorMessage","message","isArray","_abi","fragment","parseSignature","parseTransaction","tx","func","args","bigNumberify","parseLog","log","event","values","isInterface","isType","isIndexed"],"mappings":"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","sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nvar address_1 = require(\"./address\");\nvar abi_coder_1 = require(\"./abi-coder\");\nvar bignumber_1 = require(\"./bignumber\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\nvar keccak256_1 = require(\"./keccak256\");\nvar properties_1 = require(\"./properties\");\nvar errors = __importStar(require(\"../errors\"));\n///////////////////////////////\nvar _Indexed = /** @class */ (function () {\n    function _Indexed(hash) {\n        properties_1.setType(this, 'Indexed');\n        properties_1.defineReadOnly(this, 'hash', hash);\n    }\n    return _Indexed;\n}());\nvar Description = /** @class */ (function () {\n    function Description(info) {\n        properties_1.setType(this, 'Description');\n        for (var key in info) {\n            properties_1.defineReadOnly(this, key, properties_1.deepCopy(info[key], true));\n        }\n        Object.freeze(this);\n    }\n    return Description;\n}());\nvar _DeployDescription = /** @class */ (function (_super) {\n    __extends(_DeployDescription, _super);\n    function _DeployDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _DeployDescription.prototype.encode = function (bytecode, params) {\n        if (!bytes_1.isHexString(bytecode)) {\n            errors.throwError('invalid contract bytecode', errors.INVALID_ARGUMENT, {\n                arg: 'bytecode',\n                value: bytecode\n            });\n        }\n        errors.checkArgumentCount(params.length, this.inputs.length, ' in Interface constructor');\n        try {\n            return (bytecode + abi_coder_1.defaultAbiCoder.encode(this.inputs, params).substring(2));\n        }\n        catch (error) {\n            errors.throwError('invalid constructor argument', errors.INVALID_ARGUMENT, {\n                arg: error.arg,\n                reason: error.reason,\n                value: error.value\n            });\n        }\n        return null;\n    };\n    return _DeployDescription;\n}(Description));\nvar _FunctionDescription = /** @class */ (function (_super) {\n    __extends(_FunctionDescription, _super);\n    function _FunctionDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _FunctionDescription.prototype.encode = function (params) {\n        errors.checkArgumentCount(params.length, this.inputs.length, ' in interface function ' + this.name);\n        try {\n            return this.sighash + abi_coder_1.defaultAbiCoder.encode(this.inputs, params).substring(2);\n        }\n        catch (error) {\n            errors.throwError('invalid input argument', errors.INVALID_ARGUMENT, {\n                arg: error.arg,\n                reason: error.reason,\n                value: error.value\n            });\n        }\n        return null;\n    };\n    _FunctionDescription.prototype.decode = function (data) {\n        try {\n            return abi_coder_1.defaultAbiCoder.decode(this.outputs, bytes_1.arrayify(data));\n        }\n        catch (error) {\n            errors.throwError('invalid data for function output', errors.INVALID_ARGUMENT, {\n                arg: 'data',\n                errorArg: error.arg,\n                errorValue: error.value,\n                value: data,\n                reason: error.reason\n            });\n        }\n    };\n    return _FunctionDescription;\n}(Description));\nvar Result = /** @class */ (function (_super) {\n    __extends(Result, _super);\n    function Result() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Result;\n}(Description));\nvar _EventDescription = /** @class */ (function (_super) {\n    __extends(_EventDescription, _super);\n    function _EventDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _EventDescription.prototype.encodeTopics = function (params) {\n        var _this = this;\n        if (params.length > this.inputs.length) {\n            errors.throwError('too many arguments for ' + this.name, errors.UNEXPECTED_ARGUMENT, { maxCount: params.length, expectedCount: this.inputs.length });\n        }\n        var topics = [];\n        if (!this.anonymous) {\n            topics.push(this.topic);\n        }\n        params.forEach(function (arg, index) {\n            var param = _this.inputs[index];\n            if (!param.indexed) {\n                if (arg != null) {\n                    errors.throwError('cannot filter non-indexed parameters; must be null', errors.INVALID_ARGUMENT, { argument: (param.name || index), value: arg });\n                }\n                return;\n            }\n            if (arg == null) {\n                topics.push(null);\n            }\n            else if (param.type === 'string') {\n                topics.push(hash_1.id(arg));\n            }\n            else if (param.type === 'bytes') {\n                topics.push(keccak256_1.keccak256(arg));\n            }\n            else if (param.type.indexOf('[') !== -1 || param.type.substring(0, 5) === 'tuple') {\n                errors.throwError('filtering with tuples or arrays not implemented yet; bug us on GitHub', errors.NOT_IMPLEMENTED, { operation: 'filter(array|tuple)' });\n            }\n            else {\n                if (param.type === 'address') {\n                    address_1.getAddress(arg);\n                }\n                topics.push(bytes_1.hexZeroPad(bytes_1.hexlify(arg), 32).toLowerCase());\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    };\n    _EventDescription.prototype.decode = function (data, topics) {\n        // Strip the signature off of non-anonymous topics\n        if (topics != null && !this.anonymous) {\n            topics = topics.slice(1);\n        }\n        var inputIndexed = [];\n        var inputNonIndexed = [];\n        var inputDynamic = [];\n        this.inputs.forEach(function (param, index) {\n            if (param.indexed) {\n                if (param.type === 'string' || param.type === 'bytes' || param.type.indexOf('[') >= 0 || param.type.substring(0, 5) === 'tuple') {\n                    inputIndexed.push({ type: 'bytes32', name: (param.name || '') });\n                    inputDynamic.push(true);\n                }\n                else {\n                    inputIndexed.push(param);\n                    inputDynamic.push(false);\n                }\n            }\n            else {\n                inputNonIndexed.push(param);\n                inputDynamic.push(false);\n            }\n        });\n        if (topics != null) {\n            var resultIndexed = abi_coder_1.defaultAbiCoder.decode(inputIndexed, bytes_1.concat(topics));\n        }\n        var resultNonIndexed = abi_coder_1.defaultAbiCoder.decode(inputNonIndexed, bytes_1.arrayify(data));\n        var result = {};\n        var nonIndexedIndex = 0, indexedIndex = 0;\n        this.inputs.forEach(function (input, index) {\n            if (input.indexed) {\n                if (topics == null) {\n                    result[index] = new _Indexed(null);\n                }\n                else if (inputDynamic[index]) {\n                    result[index] = new _Indexed(resultIndexed[indexedIndex++]);\n                }\n                else {\n                    result[index] = resultIndexed[indexedIndex++];\n                }\n            }\n            else {\n                result[index] = resultNonIndexed[nonIndexedIndex++];\n            }\n            if (input.name) {\n                result[input.name] = result[index];\n            }\n        });\n        result.length = this.inputs.length;\n        return new Result(result);\n    };\n    return _EventDescription;\n}(Description));\nvar _TransactionDescription = /** @class */ (function (_super) {\n    __extends(_TransactionDescription, _super);\n    function _TransactionDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return _TransactionDescription;\n}(Description));\nvar _LogDescription = /** @class */ (function (_super) {\n    __extends(_LogDescription, _super);\n    function _LogDescription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return _LogDescription;\n}(Description));\nfunction addMethod(method) {\n    switch (method.type) {\n        case 'constructor': {\n            var description = new _DeployDescription({\n                inputs: method.inputs,\n                payable: (method.payable == null || !!method.payable)\n            });\n            if (!this.deployFunction) {\n                this.deployFunction = description;\n            }\n            break;\n        }\n        case 'function': {\n            var signature = abi_coder_1.formatSignature(method).replace(/tuple/g, '');\n            var sighash = hash_1.id(signature).substring(0, 10);\n            var isConst = false;\n            if (method.constant != null) {\n                isConst = method.constant;\n            }\n            else if (method.stateMutability != null) {\n                isConst = (method.stateMutability == \"view\" || method.stateMutability == \"pure\");\n            }\n            var description = new _FunctionDescription({\n                inputs: method.inputs,\n                outputs: method.outputs,\n                gas: method.gas,\n                payable: (method.payable == null || !!method.payable),\n                type: (isConst ? 'call' : 'transaction'),\n                name: method.name,\n                signature: signature,\n                sighash: sighash,\n            });\n            // Expose the first (and hopefully unique named function)\n            if (method.name) {\n                if (this.functions[method.name] == null) {\n                    properties_1.defineReadOnly(this.functions, method.name, description);\n                }\n                else {\n                    errors.warn('WARNING: Multiple definitions for ' + method.name);\n                }\n            }\n            // Expose all methods by their signature, for overloaded functions\n            if (this.functions[description.signature] == null) {\n                properties_1.defineReadOnly(this.functions, description.signature, description);\n            }\n            break;\n        }\n        case 'event': {\n            var signature = abi_coder_1.formatSignature(method).replace(/tuple/g, '');\n            var description = new _EventDescription({\n                name: method.name,\n                signature: signature,\n                inputs: method.inputs,\n                topic: hash_1.id(signature),\n                anonymous: (!!method.anonymous)\n            });\n            // Expose the first (and hopefully unique) event name\n            if (method.name && this.events[method.name] == null) {\n                properties_1.defineReadOnly(this.events, method.name, description);\n            }\n            // Expose all events by their signature, for overloaded functions\n            if (this.events[description.signature] == null) {\n                properties_1.defineReadOnly(this.events, description.signature, description);\n            }\n            break;\n        }\n        case \"receive\":\n        case 'fallback':\n            // Nothing to do for fallback\n            break;\n        default:\n            errors.warn('WARNING: unsupported ABI type - ' + method.type);\n            break;\n    }\n}\nvar Interface = /** @class */ (function () {\n    // ParamType is not actually correct here, but for legacy reasons,\n    // we need it. See #721.\n    function Interface(abi) {\n        errors.checkNew(this, Interface);\n        if (typeof (abi) === 'string') {\n            try {\n                abi = JSON.parse(abi);\n            }\n            catch (error) {\n                errors.throwError('could not parse ABI JSON', errors.INVALID_ARGUMENT, {\n                    arg: 'abi',\n                    errorMessage: error.message,\n                    value: abi\n                });\n            }\n            if (!Array.isArray(abi)) {\n                errors.throwError('invalid abi', errors.INVALID_ARGUMENT, { arg: 'abi', value: abi });\n                return null;\n            }\n        }\n        properties_1.defineReadOnly(this, 'functions', {});\n        properties_1.defineReadOnly(this, 'events', {});\n        // Convert any supported ABI format into a standard ABI format\n        var _abi = [];\n        abi.forEach(function (fragment) {\n            if (typeof (fragment) === 'string') {\n                fragment = abi_coder_1.parseSignature(fragment);\n            }\n            // @TODO: We should probable do some validation; create abiCoder.formatSignature for checking\n            _abi.push(fragment);\n        });\n        properties_1.defineReadOnly(this, 'abi', properties_1.deepCopy(_abi, true));\n        _abi.forEach(addMethod, this);\n        // If there wasn't a constructor, create the default constructor\n        if (!this.deployFunction) {\n            addMethod.call(this, { type: 'constructor', inputs: [] });\n        }\n        properties_1.setType(this, 'Interface');\n    }\n    Interface.prototype.parseTransaction = function (tx) {\n        var sighash = tx.data.substring(0, 10).toLowerCase();\n        for (var name in this.functions) {\n            if (name.indexOf('(') === -1) {\n                continue;\n            }\n            var func = this.functions[name];\n            if (func.sighash === sighash) {\n                var result = abi_coder_1.defaultAbiCoder.decode(func.inputs, '0x' + tx.data.substring(10));\n                return new _TransactionDescription({\n                    args: result,\n                    decode: func.decode,\n                    name: func.name,\n                    signature: func.signature,\n                    sighash: func.sighash,\n                    value: bignumber_1.bigNumberify(tx.value || '0'),\n                });\n            }\n        }\n        return null;\n    };\n    Interface.prototype.parseLog = function (log) {\n        for (var name in this.events) {\n            if (name.indexOf('(') === -1) {\n                continue;\n            }\n            var event = this.events[name];\n            if (event.anonymous) {\n                continue;\n            }\n            if (event.topic !== log.topics[0]) {\n                continue;\n            }\n            // @TODO: If anonymous, and the only method, and the input count matches, should we parse and return it?\n            return new _LogDescription({\n                decode: event.decode,\n                name: event.name,\n                signature: event.signature,\n                topic: event.topic,\n                values: event.decode(log.data, log.topics)\n            });\n        }\n        return null;\n    };\n    Interface.isInterface = function (value) {\n        return properties_1.isType(value, 'Interface');\n    };\n    Interface.isIndexed = function (value) {\n        return properties_1.isType(value, 'Indexed');\n    };\n    return Interface;\n}());\nexports.Interface = Interface;\n"]},"metadata":{},"sourceType":"script"}