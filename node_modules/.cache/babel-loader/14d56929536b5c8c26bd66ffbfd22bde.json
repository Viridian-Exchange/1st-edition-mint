{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\"; //import axios from \"axios\";\n\nimport \"./styles/app.sass\";\nimport Page from \"./components/Page\";\nimport Faq from \"./screens/Faq\";\nimport Drops from \"./screens/Drops\";\nimport Open from \"./screens/Open\";\nimport Verify from \"./screens/Verify\";\nimport Web3 from \"web3\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Breakpoint, BreakpointProvider } from 'react-socks';\nimport { useWeb3React } from '@web3-react/core';\nimport { Biconomy } from \"@biconomy/mexa\";\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { NetworkConnector } from \"@web3-react/network-connector\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\nimport { toHex, truncateAddress } from \"./utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst providerOptions = {\n  coinbasewallet: {\n    package: CoinbaseWalletSDK,\n    // Required\n    options: {\n      appName: \"My Awesome App\",\n      // Required\n      rpc: \"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\",\n      // Optional if `infuraId` is provided; otherwise it's required\n      chainId: 4,\n      // Optional. It defaults to 1 if not provided\n      darkMode: true // Optional. Use dark theme, defaults to false\n\n    }\n  },\n  walletconnect: {\n    package: WalletConnectProvider,\n    // required\n    options: {\n      rpc: \"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\"\n    }\n  }\n};\nconst networkParams = {\n  \"0x63564c40\": {\n    chainId: \"0x0100\",\n    rpcUrls: [\"https://api.harmony.one\"],\n    chainName: \"Polygon Mainnet\",\n    nativeCurrency: {\n      name: \"Ether\",\n      decimals: 18,\n      symbol: \"ETH\"\n    },\n    blockExplorerUrls: [\"https://explorer.harmony.one\"],\n    iconUrls: [\"https://harmonynews.one/wp-content/uploads/2019/11/slfdjs.png\"]\n  }\n};\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  // optional\n  cacheProvider: true,\n  // optional\n  providerOptions,\n  // required,\n  theme: \"dark\"\n}); //TODO: show address, list of followers, description, etc on profile page\n// function in the smart contract to add a user that is followed\n// (triggered by follow button press-> calls the function which takes in an address and adds the user to the list of following)\n// front end will pull the followee user and be able to show the profile on the initial user\n// , and call in the CLI, once followers working, you will see another profile show up\n// use item flow -> Profile/user flow\n// get current user wallet, then abi->getuserfromaddress->return json of user struct\n\nfunction App() {\n  _s();\n\n  const [biconomyFetched, setBiconomyFetched] = useState(false);\n  const [account, setAccount] = useState();\n  const [provider, setProvider] = useState();\n  const [library, setLibrary] = useState();\n  const [signature, setSignature] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [chainId, setChainId] = useState();\n  const [network, setNetwork] = useState();\n  const [message, setMessage] = useState(\"\");\n  const [signedMessage, setSignedMessage] = useState(\"\");\n  const [verified, setVerified] = useState();\n\n  const connectWallet = async () => {\n    //try {\n    const provider = await web3Modal.connect();\n    const library = new Web3(provider);\n    const accounts = await library.listAccounts();\n    alert(JSON.stringify(accounts));\n    const network = await library.getNetwork();\n    setProvider(provider);\n    setLibrary(library);\n    if (accounts) setAccount(accounts[0]);\n    setChainId(network.chainId); // } catch (error) {\n    //     alert(JSON.stringify(error));\n    // }\n  };\n\n  const handleNetwork = e => {\n    const id = e.target.value;\n    setNetwork(Number(id));\n  };\n\n  const handleInput = e => {\n    const msg = e.target.value;\n    setMessage(msg);\n  };\n\n  const switchNetwork = async () => {\n    try {\n      await library.provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: toHex(4)\n        }]\n      });\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          await library.provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [networkParams[toHex(4)]]\n          });\n        } catch (error) {\n          setError(error);\n        }\n      }\n    }\n  };\n\n  const signMessage = async () => {\n    if (!library) return;\n\n    try {\n      const signature = await library.provider.request({\n        method: \"personal_sign\",\n        params: [message, account]\n      });\n      setSignedMessage(message);\n      setSignature(signature);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const verifyMessage = async () => {\n    if (!library) return;\n\n    try {\n      const verify = await library.provider.request({\n        method: \"personal_ecRecover\",\n        params: [signedMessage, signature]\n      });\n      setVerified(verify === account.toLowerCase());\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const refreshState = () => {\n    setAccount();\n    setChainId();\n    setNetwork(\"\");\n    setMessage(\"\");\n    setSignature(\"\");\n    setVerified(undefined);\n  };\n\n  const disconnect = async () => {\n    await web3Modal.clearCachedProvider();\n    refreshState();\n  };\n\n  useEffect(async () => {\n    if (web3Modal.cachedProvider) {\n      alert(JSON.stringify(web3Modal.cachedProvider)); // await web3Modal.clearCachedProvider();\n      // refreshState();\n\n      await connectWallet();\n    }\n  }, []);\n  useEffect(async () => {\n    if (chainId !== toHex(4)) {\n      await switchNetwork();\n    }\n  });\n  useEffect(() => {\n    if (provider === null || provider === void 0 ? void 0 : provider.on) {\n      const handleAccountsChanged = accounts => {\n        console.log(\"accountsChanged\", accounts);\n        if (accounts) setAccount(accounts[0]);\n      };\n\n      const handleChainChanged = _hexChainId => {\n        setChainId(_hexChainId);\n      };\n\n      const handleDisconnect = () => {\n        console.log(\"disconnect\", error);\n        disconnect();\n      };\n\n      provider.on(\"accountsChanged\", handleAccountsChanged);\n      provider.on(\"chainChanged\", handleChainChanged);\n      provider.on(\"disconnect\", handleDisconnect);\n      return () => {\n        if (provider.removeListener) {\n          provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n          provider.removeListener(\"chainChanged\", handleChainChanged);\n          provider.removeListener(\"disconnect\", handleDisconnect);\n        }\n      };\n    }\n  }, [provider]);\n  return /*#__PURE__*/_jsxDEV(BreakpointProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      forceRefresh: true,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/genesis-drop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/genesis-drop\",\n          render: () => /*#__PURE__*/_jsxDEV(Page, {\n            biconomyFetched: biconomyFetched,\n            account: account,\n            setAccount: setAccount,\n            connectWallet: connectWallet,\n            disconnect: disconnect,\n            children: /*#__PURE__*/_jsxDEV(Drops, {\n              biconomyFetched: biconomyFetched,\n              account: account,\n              setAccount: setAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/open\",\n          render: () => /*#__PURE__*/_jsxDEV(Page, {\n            children: /*#__PURE__*/_jsxDEV(Open, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/verify\",\n          render: () => /*#__PURE__*/_jsxDEV(Page, {\n            children: /*#__PURE__*/_jsxDEV(Verify, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/faq\",\n          render: () => /*#__PURE__*/_jsxDEV(Page, {\n            children: /*#__PURE__*/_jsxDEV(Faq, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/genesis-drop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"mH1pwIhmbHYKH36fyT6vvlZ0+wk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","Redirect","useHistory","React","useState","useEffect","Page","Faq","Drops","Open","Verify","Web3","Web3Provider","Breakpoint","BreakpointProvider","useWeb3React","Biconomy","WalletLinkConnector","WalletConnectConnector","InjectedConnector","NetworkConnector","CoinbaseWalletSDK","WalletConnectProvider","Web3Modal","toHex","truncateAddress","providerOptions","coinbasewallet","package","options","appName","rpc","chainId","darkMode","walletconnect","networkParams","rpcUrls","chainName","nativeCurrency","name","decimals","symbol","blockExplorerUrls","iconUrls","web3Modal","network","cacheProvider","theme","App","biconomyFetched","setBiconomyFetched","account","setAccount","provider","setProvider","library","setLibrary","signature","setSignature","error","setError","setChainId","setNetwork","message","setMessage","signedMessage","setSignedMessage","verified","setVerified","connectWallet","connect","accounts","listAccounts","alert","JSON","stringify","getNetwork","handleNetwork","e","id","target","value","Number","handleInput","msg","switchNetwork","request","method","params","switchError","code","signMessage","verifyMessage","verify","toLowerCase","refreshState","undefined","disconnect","clearCachedProvider","cachedProvider","on","handleAccountsChanged","console","log","handleChainChanged","_hexChainId","handleDisconnect","removeListener"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n//import axios from \"axios\";\nimport \"./styles/app.sass\";\nimport Page from \"./components/Page\";\nimport Faq from \"./screens/Faq\";\nimport Drops from \"./screens/Drops\";\nimport Open from \"./screens/Open\";\nimport Verify from \"./screens/Verify\";\nimport Web3 from \"web3\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Breakpoint, BreakpointProvider } from 'react-socks';\nimport { useWeb3React } from '@web3-react/core'\nimport {Biconomy} from \"@biconomy/mexa\";\nimport {WalletLinkConnector} from \"@web3-react/walletlink-connector\";\nimport {WalletConnectConnector} from \"@web3-react/walletconnect-connector\";\nimport {InjectedConnector} from \"@web3-react/injected-connector\";\nimport {NetworkConnector} from \"@web3-react/network-connector\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\nimport {toHex, truncateAddress} from \"./utils/utils\";\n\nconst providerOptions = {\n    coinbasewallet: {\n        package: CoinbaseWalletSDK, // Required\n        options: {\n            appName: \"My Awesome App\", // Required\n            rpc: \"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\", // Optional if `infuraId` is provided; otherwise it's required\n            chainId: 4, // Optional. It defaults to 1 if not provided\n            darkMode: true // Optional. Use dark theme, defaults to false\n        }\n    },\n    walletconnect: {\n        package: WalletConnectProvider, // required\n        options: {\n            rpc: \"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\"\n        }\n    },\n};\n\nconst networkParams = {\n    \"0x63564c40\": {\n        chainId: \"0x0100\",\n        rpcUrls: [\"https://api.harmony.one\"],\n        chainName: \"Polygon Mainnet\",\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        blockExplorerUrls: [\"https://explorer.harmony.one\"],\n        iconUrls: [\"https://harmonynews.one/wp-content/uploads/2019/11/slfdjs.png\"]\n    },\n};\n\nconst web3Modal = new Web3Modal({\n    network: \"mainnet\", // optional\n    cacheProvider: true, // optional\n    providerOptions, // required,\n    theme: \"dark\"\n});\n\n//TODO: show address, list of followers, description, etc on profile page\n// function in the smart contract to add a user that is followed\n// (triggered by follow button press-> calls the function which takes in an address and adds the user to the list of following)\n// front end will pull the followee user and be able to show the profile on the initial user\n// , and call in the CLI, once followers working, you will see another profile show up\n// use item flow -> Profile/user flow\n// get current user wallet, then abi->getuserfromaddress->return json of user struct\nfunction App() {\n    const [biconomyFetched, setBiconomyFetched] = useState(false);\n    const [account, setAccount] = useState();\n    const [provider, setProvider] = useState();\n    const [library, setLibrary] = useState();\n    const [signature, setSignature] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [chainId, setChainId] = useState();\n    const [network, setNetwork] = useState();\n    const [message, setMessage] = useState(\"\");\n    const [signedMessage, setSignedMessage] = useState(\"\");\n    const [verified, setVerified] = useState();\n\n    const connectWallet = async () => {\n        //try {\n            const provider = await web3Modal.connect();\n            const library = new Web3(provider);\n            const accounts = await library.listAccounts();\n            alert(JSON.stringify(accounts));\n            const network = await library.getNetwork();\n            setProvider(provider);\n            setLibrary(library);\n            if (accounts) setAccount(accounts[0]);\n            setChainId(network.chainId);\n        // } catch (error) {\n        //     alert(JSON.stringify(error));\n        // }\n    };\n\n    const handleNetwork = (e) => {\n        const id = e.target.value;\n        setNetwork(Number(id));\n    };\n\n    const handleInput = (e) => {\n        const msg = e.target.value;\n        setMessage(msg);\n    };\n\n    const switchNetwork = async () => {\n        try {\n            await library.provider.request({\n                method: \"wallet_switchEthereumChain\",\n                params: [{ chainId: toHex(4) }]\n            });\n        } catch (switchError) {\n            if (switchError.code === 4902) {\n                try {\n                    await library.provider.request({\n                        method: \"wallet_addEthereumChain\",\n                        params: [networkParams[toHex(4)]]\n                    });\n                } catch (error) {\n                    setError(error);\n                }\n            }\n        }\n    };\n\n    const signMessage = async () => {\n        if (!library) return;\n        try {\n            const signature = await library.provider.request({\n                method: \"personal_sign\",\n                params: [message, account]\n            });\n            setSignedMessage(message);\n            setSignature(signature);\n        } catch (error) {\n            setError(error);\n        }\n    };\n\n    const verifyMessage = async () => {\n        if (!library) return;\n        try {\n            const verify = await library.provider.request({\n                method: \"personal_ecRecover\",\n                params: [signedMessage, signature]\n            });\n            setVerified(verify === account.toLowerCase());\n        } catch (error) {\n            setError(error);\n        }\n    };\n\n    const refreshState = () => {\n        setAccount();\n        setChainId();\n        setNetwork(\"\");\n        setMessage(\"\");\n        setSignature(\"\");\n        setVerified(undefined);\n    };\n\n    const disconnect = async () => {\n        await web3Modal.clearCachedProvider();\n        refreshState();\n    };\n\n    useEffect(async () => {\n        if (web3Modal.cachedProvider) {\n            alert(JSON.stringify(web3Modal.cachedProvider))\n            // await web3Modal.clearCachedProvider();\n            // refreshState();\n            await connectWallet();\n        }\n    }, []);\n\n    useEffect(async () => {\n        if (chainId !== toHex(4)) {\n            await switchNetwork();\n        }\n    })\n\n    useEffect(() => {\n        if (provider?.on) {\n            const handleAccountsChanged = (accounts) => {\n                console.log(\"accountsChanged\", accounts);\n                if (accounts) setAccount(accounts[0]);\n            };\n\n            const handleChainChanged = (_hexChainId) => {\n                setChainId(_hexChainId);\n            };\n\n            const handleDisconnect = () => {\n                console.log(\"disconnect\", error);\n                disconnect();\n            };\n\n            provider.on(\"accountsChanged\", handleAccountsChanged);\n            provider.on(\"chainChanged\", handleChainChanged);\n            provider.on(\"disconnect\", handleDisconnect);\n\n            return () => {\n                if (provider.removeListener) {\n                    provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n                    provider.removeListener(\"chainChanged\", handleChainChanged);\n                    provider.removeListener(\"disconnect\", handleDisconnect);\n                }\n            };\n        }\n    }, [provider]);\n\n  return (\n        <BreakpointProvider>\n            <Router forceRefresh={true}>\n              <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                >\n                  <Redirect to=\"/genesis-drop\" />\n                </Route>\n                <Route\n                    exact\n                    path=\"/genesis-drop\"\n                    render={() => (\n                        <Page biconomyFetched={biconomyFetched} account={account} setAccount={setAccount} connectWallet = {connectWallet} disconnect={disconnect}>\n                          <Drops biconomyFetched={biconomyFetched} account={account} setAccount={setAccount} />\n                        </Page>\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/open\"\n                    render={() => (\n                        <Page>\n                          <Open  />\n                        </Page>\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/verify\"\n                    render={() => (\n                        <Page>\n                          <Verify  />\n                        </Page>\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/faq\"\n                    render={() => (\n                        <Page>\n                          <Faq />\n                        </Page>\n                    )}\n                />\n                <Route path=\"*\">\n                  <Redirect to=\"/genesis-drop\" />\n                </Route>\n              </Switch>\n            </Router>\n        </BreakpointProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}