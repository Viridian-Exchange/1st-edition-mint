{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport { getTrackBackground, Range } from \"react-range\";\nimport { getOwnedNFTs, mint } from \"../../smartContracts/Viridian1EPassMethods\";\nimport { useCryptoPrices } from \"react-realtime-crypto-prices\";\nimport { Breakpoint } from 'react-socks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bridge = props => {\n  _s();\n\n  const [initialLoaded, setInitialLoaded] = useState(false);\n  const [values, setValues] = useState([1]);\n  const [minted, setMinted] = useState([]);\n  const [toBridge, setToBridge] = useState([]);\n  const prices = useCryptoPrices([\"eth\"]);\n  const STEP = 1;\n  const MIN = 1;\n  const MAX = 10;\n  useEffect(async () => {\n    setMinted(await getOwnedNFTs(props.account));\n    setToBridge(await getOwnedNFTs(props.account));\n  }, []);\n\n  function removeItemFromArray(arr, value) {\n    var index = arr.indexOf(value);\n\n    if (index > -1) {\n      arr.splice(index, 1);\n    }\n\n    return arr;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"section\", styles.section),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"container\", styles.container),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: cn(\"h3\", styles.title),\n          children: \"Bridge Viridian 1st Edition Pass to Polygon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginBottom: '7ex',\n            marginTop: '-3ex',\n            textAlign: 'left',\n            color: 'grey'\n          },\n          children: \"Select NFTs to bridge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.list,\n          children: minted.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: '5ex',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: toBridge.includes(x),\n              onChange: () => {\n                if (toBridge.includes(x)) {\n                  setToBridge(removeItemFromArray([...toBridge], x));\n                } else {\n                  setToBridge([...toBridge].concat(x));\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  maxWidth: '20ex'\n                },\n                src: \"https://d4xub33rt3s5u.cloudfront.net/Viridian+1E+Pass+Preview.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Viridian Pass #\", x]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: '4ex'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cn(styles.link, {\n              [styles.active]: true\n            }),\n            onClick: async () => {\n              await mint(props.account, values[0]);\n            },\n            children: \"Bridge \\uD83C\\uDF09\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Bridge, \"DO8bPlTYOn9N9exikUOK9YPlHiU=\", false, function () {\n  return [useCryptoPrices];\n});\n\n_c = Bridge;\nexport default Bridge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bridge\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js"],"names":["React","useState","useEffect","cn","ProgressBar","styles","getTrackBackground","Range","getOwnedNFTs","mint","useCryptoPrices","Breakpoint","Bridge","props","initialLoaded","setInitialLoaded","values","setValues","minted","setMinted","toBridge","setToBridge","prices","STEP","MIN","MAX","account","removeItemFromArray","arr","value","index","indexOf","splice","section","container","title","marginBottom","marginTop","textAlign","color","list","map","x","marginRight","includes","concat","maxWidth","link","active"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAAQC,kBAAR,EAA4BC,KAA5B,QAAwC,aAAxC;AACA,SAAQC,YAAR,EAAsBC,IAAtB,QAAiC,4CAAjC;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,UAAR,QAAyB,aAAzB;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,CAAC,CAAD,CAAD,CAApC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMqB,MAAM,GAAGZ,eAAe,CAAC,CAAC,KAAD,CAAD,CAA9B;AAEA,QAAMa,IAAI,GAAG,CAAb;AACA,QAAMC,GAAG,GAAG,CAAZ;AACA,QAAMC,GAAG,GAAG,EAAZ;AAEAvB,EAAAA,SAAS,CAAC,YAAY;AAClBiB,IAAAA,SAAS,CAAC,MAAMX,YAAY,CAACK,KAAK,CAACa,OAAP,CAAnB,CAAT;AACAL,IAAAA,WAAW,CAAC,MAAMb,YAAY,CAACK,KAAK,CAACa,OAAP,CAAnB,CAAX;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASC,mBAAT,CAA6BC,GAA7B,EAAkCC,KAAlC,EAAyC;AACrC,QAAIC,KAAK,GAAGF,GAAG,CAACG,OAAJ,CAAYF,KAAZ,CAAZ;;AACA,QAAIC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZF,MAAAA,GAAG,CAACI,MAAJ,CAAWF,KAAX,EAAkB,CAAlB;AACH;;AACD,WAAOF,GAAP;AACH;;AAEH,sBACE;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEzB,EAAE,CAAC,SAAD,EAAYE,MAAM,CAAC4B,OAAnB,CAAlB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE9B,EAAE,CAAC,WAAD,EAAcE,MAAM,CAAC6B,SAArB,CAAlB;AAAA,gCAEI;AAAI,UAAA,SAAS,EAAE/B,EAAE,CAAC,IAAD,EAAOE,MAAM,CAAC8B,KAAd,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAiBI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,YAAY,EAAE,KAAf;AAAsBC,YAAAA,SAAS,EAAE,MAAjC;AAAyCC,YAAAA,SAAS,EAAE,MAApD;AAA4DC,YAAAA,KAAK,EAAE;AAAnE,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAqBI;AAAK,UAAA,SAAS,EAAElC,MAAM,CAACmC,IAAvB;AAAA,oBACKtB,MAAM,CAACuB,GAAP,CAAW,CAACC,CAAD,EAAIZ,KAAJ,kBACR;AAAK,YAAA,KAAK,EAAE;AAACa,cAAAA,WAAW,EAAE,KAAd;AAAqBL,cAAAA,SAAS,EAAE;AAAhC,aAAZ;AAAA,oCACI;AAAO,cAAA,IAAI,EAAC,UAAZ;AACO,cAAA,OAAO,EAAElB,QAAQ,CAACwB,QAAT,CAAkBF,CAAlB,CADhB;AAEO,cAAA,QAAQ,EAAE,MAAM;AACX,oBAAItB,QAAQ,CAACwB,QAAT,CAAkBF,CAAlB,CAAJ,EAA0B;AACtBrB,kBAAAA,WAAW,CAACM,mBAAmB,CAAC,CAAC,GAAGP,QAAJ,CAAD,EAAgBsB,CAAhB,CAApB,CAAX;AACH,iBAFD,MAGK;AACDrB,kBAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcyB,MAAd,CAAqBH,CAArB,CAAD,CAAX;AACH;AACJ;AATT;AAAA;AAAA;AAAA;AAAA,oBADJ,eAWI;AAAA,qCACI;AAAK,gBAAA,KAAK,EAAE;AAACI,kBAAAA,QAAQ,EAAE;AAAX,iBAAZ;AAAgC,gBAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAcI;AAAA,4CACoBJ,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBArBJ,eA2CI;AAAK,UAAA,KAAK,EAAE;AAACJ,YAAAA,SAAS,EAAE,QAAZ;AAAsBD,YAAAA,SAAS,EAAE;AAAjC,WAAZ;AAAA,iCAEI;AACI,YAAA,SAAS,EAAElC,EAAE,CAACE,MAAM,CAAC0C,IAAR,EAAc;AACvB,eAAC1C,MAAM,CAAC2C,MAAR,GAAiB;AADM,aAAd,CADjB;AAII,YAAA,OAAO,EAAE,YAAY;AAAC,oBAAMvC,IAAI,CAACI,KAAK,CAACa,OAAP,EAAgBV,MAAM,CAAC,CAAD,CAAtB,CAAV;AAAqC,aAJ/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADF;AA6DD,CArFD;;GAAMJ,M;UAKaF,e;;;KALbE,M;AAuFN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport cn from \"classnames\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport styles from \"./Home.module.sass\";\nimport {getTrackBackground, Range} from \"react-range\";\nimport {getOwnedNFTs, mint} from \"../../smartContracts/Viridian1EPassMethods\"\nimport {useCryptoPrices} from \"react-realtime-crypto-prices\";\nimport {Breakpoint} from 'react-socks';\n\nconst Bridge = (props) => {\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [values, setValues] = useState([1]);\n    const [minted, setMinted] = useState([]);\n    const [toBridge, setToBridge] = useState([]);\n    const prices = useCryptoPrices([\"eth\"]);\n\n    const STEP = 1;\n    const MIN = 1;\n    const MAX = 10;\n\n    useEffect(async () => {\n        setMinted(await getOwnedNFTs(props.account));\n        setToBridge(await getOwnedNFTs(props.account));\n    }, []);\n\n    function removeItemFromArray(arr, value) {\n        var index = arr.indexOf(value);\n        if (index > -1) {\n            arr.splice(index, 1);\n        }\n        return arr;\n    }\n\n  return (\n    <>\n        <div className={cn(\"section\", styles.section)}>\n            <div className={cn(\"container\", styles.container)}>\n                {/*<p2 style={{color: 'grey'}}>Recieve a card-backed nft from the 1st edition Pokemon booster box break, along with platform perks!</p2>*/}\n                <h3 className={cn(\"h3\", styles.title)}>Bridge Viridian 1st Edition Pass to Polygon</h3>\n                {/*<Breakpoint small down>*/}\n                {/*    <div style={{textAlign: 'center'}}>*/}\n                {/*        <video autoPlay loop muted playsInline style={{marginTop: '0ex', maxWidth: '40ex', borderRadius: '25px'}}>*/}\n                {/*            <source src='https://d4xub33rt3s5u.cloudfront.net/passVidGoodLoop.mp4' type=\"video/mp4\"/>*/}\n                {/*        </video>*/}\n                {/*    </div>*/}\n                {/*</Breakpoint>*/}\n                {/*<Breakpoint medium up>*/}\n                {/*    <div style={{textAlign: 'center'}}>*/}\n                {/*        <video autoPlay loop muted playsInline style={{marginTop: '-4ex', maxWidth: '90ex', borderRadius: '25px'}}>*/}\n                {/*            <source src='https://d4xub33rt3s5u.cloudfront.net/passVidGoodLoop.mp4' type=\"video/mp4\"/>*/}\n                {/*        </video>*/}\n                {/*    </div>*/}\n                {/*</Breakpoint>*/}\n                <h2 style={{marginBottom: '7ex', marginTop: '-3ex', textAlign: 'left', color: 'grey'}}>\n                    Select NFTs to bridge\n                </h2>\n                {/*{toBridge}*/}\n                <div className={styles.list}>\n                    {minted.map((x, index) => (\n                        <div style={{marginRight: '5ex', textAlign: 'center'}}>\n                            <input type=\"checkbox\"\n                                   checked={toBridge.includes(x)}\n                                   onChange={() => {\n                                        if (toBridge.includes(x)) {\n                                            setToBridge(removeItemFromArray([...toBridge], x));\n                                        }\n                                        else {\n                                            setToBridge([...toBridge].concat(x));\n                                        }\n                                    }}/>\n                            <div>\n                                <img style={{maxWidth: '20ex'}} src='https://d4xub33rt3s5u.cloudfront.net/Viridian+1E+Pass+Preview.png'/>\n                            </div>\n                            <h4>\n                                Viridian Pass #{x}\n                            </h4>\n                        </div>))}\n                </div>\n\n                <div style={{textAlign: 'center', marginTop: '4ex'}}>\n                    {/*{JSON.stringify(props)}*/}\n                    <button\n                        className={cn(styles.link, {\n                            [styles.active]: true,\n                        })}\n                        onClick={async () => {await mint(props.account, values[0])}}\n                    >\n                        Bridge 🌉\n                    </button>\n                </div>\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default Bridge;\n"]},"metadata":{},"sourceType":"module"}