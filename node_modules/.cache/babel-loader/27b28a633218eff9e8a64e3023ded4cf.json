{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import cn from \"classnames\";\n// import ProgressBar from \"@ramonak/react-progress-bar\";\n// import styles from \"./Home.module.sass\";\n// import {getTrackBackground, Range} from \"react-range\";\n// import {getOwnedNFTs, bridge} from \"../../smartContracts/Viridian1EPassMethods\"\n// import {useCryptoPrices} from \"react-realtime-crypto-prices\";\n// import {Breakpoint} from 'react-socks';\n//\n// const Bridge = (props) => {\n//     const [initialLoaded, setInitialLoaded] = useState(false);\n//     const [values, setValues] = useState([1]);\n//     const [minted, setMinted] = useState([]);\n//     const [toBridge, setToBridge] = useState([]);\n//     const [fetched, setFetched] = useState(false);\n//     const prices = useCryptoPrices([\"eth\"]);\n//\n//     const STEP = 1;\n//     const MIN = 1;\n//     const MAX = 10;\n//\n//     useEffect(async () => {\n//         console.log(props.account)\n//         setMinted(await getOwnedNFTs(props.account));\n//         setToBridge(await getOwnedNFTs(props.account));\n//         if (!fetched) {\n//             setFetched(true)\n//         }\n//     }, [fetched]);\n//\n//     function removeItemFromArray(arr, value) {\n//         var index = arr.indexOf(value);\n//         if (index > -1) {\n//             arr.splice(index, 1);\n//         }\n//         return arr;\n//     }\n//\n//   return (\n//     <>\n//         <div className={cn(\"section\", styles.section)}>\n//             <div className={cn(\"container\", styles.container)}>\n//                 {/*<p2 style={{color: 'grey'}}>Recieve a card-backed nft from the 1st edition Pokemon booster box break, along with platform perks!</p2>*/}\n//                 <h3 className={cn(\"h3\", styles.title)}>Bridge Viridian 1st Edition Pass to Polygon</h3>\n//                 {/*<Breakpoint small down>*/}\n//                 {/*    <div style={{textAlign: 'center'}}>*/}\n//                 {/*        <video autoPlay loop muted playsInline style={{marginTop: '0ex', maxWidth: '40ex', borderRadius: '25px'}}>*/}\n//                 {/*            <source src='https://d4xub33rt3s5u.cloudfront.net/passVidGoodLoop.mp4' type=\"video/mp4\"/>*/}\n//                 {/*        </video>*/}\n//                 {/*    </div>*/}\n//                 {/*</Breakpoint>*/}\n//                 {/*<Breakpoint medium up>*/}\n//                 {/*    <div style={{textAlign: 'center'}}>*/}\n//                 {/*        <video autoPlay loop muted playsInline style={{marginTop: '-4ex', maxWidth: '90ex', borderRadius: '25px'}}>*/}\n//                 {/*            <source src='https://d4xub33rt3s5u.cloudfront.net/passVidGoodLoop.mp4' type=\"video/mp4\"/>*/}\n//                 {/*        </video>*/}\n//                 {/*    </div>*/}\n//                 {/*</Breakpoint>*/}\n//                 <h2 style={{marginBottom: '7ex', marginTop: '-3ex', textAlign: 'left', color: 'grey'}}>\n//                     Bridging all NFTs below\n//                 </h2>\n//                 {/*{toBridge}*/}\n//                 {minted.length > 0 ? <div className={styles.list}>\n//                     {minted.map((x, index) => (\n//                         <div style={{marginRight: '5ex', textAlign: 'center'}}>\n//                             {/*<input type=\"checkbox\"*/}\n//                             {/*       checked={toBridge.includes(x)}*/}\n//                             {/*       onChange={() => {*/}\n//                             {/*            if (toBridge.includes(x)) {*/}\n//                             {/*                setToBridge(removeItemFromArray([...toBridge], x));*/}\n//                             {/*            }*/}\n//                             {/*            else {*/}\n//                             {/*                setToBridge([...toBridge].concat(x));*/}\n//                             {/*            }*/}\n//                             {/*        }}/>*/}\n//                             <div>\n//                                 <img style={{maxWidth: '20ex'}} src='https://d4xub33rt3s5u.cloudfront.net/Viridian+1E+Pass+Preview.png'/>\n//                             </div>\n//                             <h4>\n//                                 Viridian 1st Ed. Pass #{x}\n//                             </h4>\n//                         </div>))}\n//                 </div> : <div style={{textAlign: 'center'}}>No NFTs to bridge</div>}\n//\n//                 <div style={{textAlign: 'center', marginTop: '4ex'}}>\n//                     {/*{JSON.stringify(props)}*/}\n//                     <button\n//                         className={cn(styles.link, {\n//                             [styles.active]: true,\n//                         })}\n//                         onClick={async () => {await bridge(props.account, toBridge)}}\n//                     >\n//                         Bridge ðŸŒ‰\n//                     </button>\n//                 </div>\n//             </div>\n//         </div>\n//     </>\n//   );\n// }\n//\n// export default Bridge;","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/screens/Bridge/index.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import cn from \"classnames\";\n// import ProgressBar from \"@ramonak/react-progress-bar\";\n// import styles from \"./Home.module.sass\";\n// import {getTrackBackground, Range} from \"react-range\";\n// import {getOwnedNFTs, bridge} from \"../../smartContracts/Viridian1EPassMethods\"\n// import {useCryptoPrices} from \"react-realtime-crypto-prices\";\n// import {Breakpoint} from 'react-socks';\n//\n// const Bridge = (props) => {\n//     const [initialLoaded, setInitialLoaded] = useState(false);\n//     const [values, setValues] = useState([1]);\n//     const [minted, setMinted] = useState([]);\n//     const [toBridge, setToBridge] = useState([]);\n//     const [fetched, setFetched] = useState(false);\n//     const prices = useCryptoPrices([\"eth\"]);\n//\n//     const STEP = 1;\n//     const MIN = 1;\n//     const MAX = 10;\n//\n//     useEffect(async () => {\n//         console.log(props.account)\n//         setMinted(await getOwnedNFTs(props.account));\n//         setToBridge(await getOwnedNFTs(props.account));\n//         if (!fetched) {\n//             setFetched(true)\n//         }\n//     }, [fetched]);\n//\n//     function removeItemFromArray(arr, value) {\n//         var index = arr.indexOf(value);\n//         if (index > -1) {\n//             arr.splice(index, 1);\n//         }\n//         return arr;\n//     }\n//\n//   return (\n//     <>\n//         <div className={cn(\"section\", styles.section)}>\n//             <div className={cn(\"container\", styles.container)}>\n//                 {/*<p2 style={{color: 'grey'}}>Recieve a card-backed nft from the 1st edition Pokemon booster box break, along with platform perks!</p2>*/}\n//                 <h3 className={cn(\"h3\", styles.title)}>Bridge Viridian 1st Edition Pass to Polygon</h3>\n//                 {/*<Breakpoint small down>*/}\n//                 {/*    <div style={{textAlign: 'center'}}>*/}\n//                 {/*        <video autoPlay loop muted playsInline style={{marginTop: '0ex', maxWidth: '40ex', borderRadius: '25px'}}>*/}\n//                 {/*            <source src='https://d4xub33rt3s5u.cloudfront.net/passVidGoodLoop.mp4' type=\"video/mp4\"/>*/}\n//                 {/*        </video>*/}\n//                 {/*    </div>*/}\n//                 {/*</Breakpoint>*/}\n//                 {/*<Breakpoint medium up>*/}\n//                 {/*    <div style={{textAlign: 'center'}}>*/}\n//                 {/*        <video autoPlay loop muted playsInline style={{marginTop: '-4ex', maxWidth: '90ex', borderRadius: '25px'}}>*/}\n//                 {/*            <source src='https://d4xub33rt3s5u.cloudfront.net/passVidGoodLoop.mp4' type=\"video/mp4\"/>*/}\n//                 {/*        </video>*/}\n//                 {/*    </div>*/}\n//                 {/*</Breakpoint>*/}\n//                 <h2 style={{marginBottom: '7ex', marginTop: '-3ex', textAlign: 'left', color: 'grey'}}>\n//                     Bridging all NFTs below\n//                 </h2>\n//                 {/*{toBridge}*/}\n//                 {minted.length > 0 ? <div className={styles.list}>\n//                     {minted.map((x, index) => (\n//                         <div style={{marginRight: '5ex', textAlign: 'center'}}>\n//                             {/*<input type=\"checkbox\"*/}\n//                             {/*       checked={toBridge.includes(x)}*/}\n//                             {/*       onChange={() => {*/}\n//                             {/*            if (toBridge.includes(x)) {*/}\n//                             {/*                setToBridge(removeItemFromArray([...toBridge], x));*/}\n//                             {/*            }*/}\n//                             {/*            else {*/}\n//                             {/*                setToBridge([...toBridge].concat(x));*/}\n//                             {/*            }*/}\n//                             {/*        }}/>*/}\n//                             <div>\n//                                 <img style={{maxWidth: '20ex'}} src='https://d4xub33rt3s5u.cloudfront.net/Viridian+1E+Pass+Preview.png'/>\n//                             </div>\n//                             <h4>\n//                                 Viridian 1st Ed. Pass #{x}\n//                             </h4>\n//                         </div>))}\n//                 </div> : <div style={{textAlign: 'center'}}>No NFTs to bridge</div>}\n//\n//                 <div style={{textAlign: 'center', marginTop: '4ex'}}>\n//                     {/*{JSON.stringify(props)}*/}\n//                     <button\n//                         className={cn(styles.link, {\n//                             [styles.active]: true,\n//                         })}\n//                         onClick={async () => {await bridge(props.account, toBridge)}}\n//                     >\n//                         Bridge ðŸŒ‰\n//                     </button>\n//                 </div>\n//             </div>\n//         </div>\n//     </>\n//   );\n// }\n//\n// export default Bridge;\n"]},"metadata":{},"sourceType":"module"}