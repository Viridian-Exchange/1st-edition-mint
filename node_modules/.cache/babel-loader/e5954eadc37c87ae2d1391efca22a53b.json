{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\nimport WalletSelector from \"../WalletSelector\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoinbaseWallet = new WalletLinkConnector({\n  url: `https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js`,\n  appName: \"Viridian Genesis Drop\",\n  supportedChainIds: [1, 3, 4, 5, 42]\n});\nconst WalletConnect = new WalletConnectConnector({\n  rpcUrl: `https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js`,\n  bridge: \"https://bridge.walletconnect.org\",\n  qrcode: true\n});\nconst Injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42]\n});\n\nconst Page = ({\n  biconomyFetched,\n  children\n}) => {\n  _s();\n\n  const [networkName, setNetworkName] = useState(\"\");\n  const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n  const [visibleModalWallets, setVisibleModalWallets] = useState(false);\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n  const {\n    activate,\n    account,\n    library\n  } = useWeb3React();\n  useEffect(async () => {\n    alert(JSON.stringify(library));\n\n    if (biconomyFetched === true) {\n      alert(\"lib: \" + JSON.stringify(library.provider)); // if (localStorage.getItem('lastAddConn') !== account) {\n      //     localStorage.setItem('connection', '');\n      // }\n\n      if (localStorage.getItem('connection') === 'mm') {\n        activate(Injected);\n      } else if (localStorage.getItem('connection') === 'wc') {\n        activate(WalletConnect);\n      } else if (localStorage.getItem('connection') === 'cb') {\n        activate(CoinbaseWallet);\n      }\n    }\n  }, [biconomyFetched]);\n\n  const switchNetwork = async () => {\n    try {\n      await library.provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: '0x13881'\n        }] // chainId must be in hexadecimal numbers\n\n      });\n    } catch (switchError) {\n      //alert(switchError.code);\n      // 4902 error code indicates the chain is missing on the wallet\n      if (switchError.code === 4902) {\n        try {\n          await library.providerrequest({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainName: 'Polygon Mumbai Testnet',\n              chainId: '0x13881',\n              nativeCurrency: {\n                name: 'Polygon',\n                symbol: 'MATIC',\n                decimals: 18\n              },\n              rpcUrls: ['https://matic-mumbai.chainstacklabs.com'],\n              blockExplorerUrls: ['https://mumbai.polygonscan.com/']\n            }]\n          });\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n  };\n\n  useEffect(async () => {\n    clearAllBodyScrollLocks();\n\n    if (biconomyFetched) {\n      await switchNetwork();\n    }\n  }, [biconomyFetched]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.page,\n    children: [networkName !== 'ropsten' && networkName !== '' && /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visibleModalWrongNetwork,\n      onClose: () => {\n        setVisibleModalWrongNetwork(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 69\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visibleModalWallets,\n      onClose: () => setVisibleModalWallets(false),\n      children: /*#__PURE__*/_jsxDEV(WalletSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Page, \"09qj/poABZ13P5eRb89CDb4PZwg=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js"],"names":["React","useEffect","useState","withRouter","clearAllBodyScrollLocks","styles","Header","Footer","Web3","Modal","WalletSelector","useWeb3React","WalletLinkConnector","WalletConnectConnector","InjectedConnector","CoinbaseWallet","url","appName","supportedChainIds","WalletConnect","rpcUrl","bridge","qrcode","Injected","Page","biconomyFetched","children","networkName","setNetworkName","visibleModalWrongNetwork","setVisibleModalWrongNetwork","visibleModalWallets","setVisibleModalWallets","web3","givenProvider","providers","HttpProvider","activate","account","library","alert","JSON","stringify","provider","localStorage","getItem","switchNetwork","request","method","params","chainId","switchError","code","providerrequest","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","error","console","page","inner"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\nimport WalletSelector from \"../WalletSelector\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n\nconst CoinbaseWallet = new WalletLinkConnector({\n    url: `https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js`,\n    appName: \"Viridian Genesis Drop\",\n    supportedChainIds: [1, 3, 4, 5, 42],\n});\n\nconst WalletConnect = new WalletConnectConnector({\n    rpcUrl: `https://eth-rinkeby.alchemyapi.io/v2/LAxJKtplSWDfvNU0-v7K77WOeCWYb4Js`,\n    bridge: \"https://bridge.walletconnect.org\",\n    qrcode: true,\n});\n\nconst Injected = new InjectedConnector({\n    supportedChainIds: [1, 3, 4, 5, 42]\n});\n\nconst Page = ({biconomyFetched, children}) => {\n    const [networkName, setNetworkName] = useState(\"\");\n    const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n    const [visibleModalWallets, setVisibleModalWallets] = useState(false);\n\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n\n    const { activate, account, library } = useWeb3React();\n\n    useEffect(async () => {\n        alert(JSON.stringify(library));\n        if (biconomyFetched === true) {\n            alert(\"lib: \" + JSON.stringify(library.provider));\n            // if (localStorage.getItem('lastAddConn') !== account) {\n            //     localStorage.setItem('connection', '');\n            // }\n\n            if (localStorage.getItem('connection') === 'mm') {\n                activate(Injected);\n            } else if (localStorage.getItem('connection') === 'wc') {\n                activate(WalletConnect);\n            } else if (localStorage.getItem('connection') === 'cb') {\n                activate(CoinbaseWallet);\n            }\n        }\n    }, [biconomyFetched]);\n\n    const switchNetwork = async () => {\n        try {\n            await library.provider.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: '0x13881' }], // chainId must be in hexadecimal numbers\n            });\n        } catch (switchError) {\n            //alert(switchError.code);\n            // 4902 error code indicates the chain is missing on the wallet\n            if (switchError.code === 4902) {\n                try {\n                    await library.providerrequest({\n                        method: 'wallet_addEthereumChain',\n                        params: [\n                            {\n                                chainName: 'Polygon Mumbai Testnet',\n                                chainId: '0x13881',\n                                nativeCurrency: {\n                                    name: 'Polygon',\n                                    symbol: 'MATIC',\n                                    decimals: 18\n                                },\n                                rpcUrls: ['https://matic-mumbai.chainstacklabs.com'],\n                                blockExplorerUrls: ['https://mumbai.polygonscan.com/']\n                            },\n                        ],\n                    });\n                } catch (error) {\n                    console.error(error)\n                }\n            }\n        }\n    };\n\n  useEffect(async () => {\n    clearAllBodyScrollLocks();\n    if(biconomyFetched) {\n        await switchNetwork();\n    }\n  }, [biconomyFetched]);\n\n      return (\n          <div className={styles.page}>\n              {(networkName !== 'ropsten' && networkName !== '') && <Modal\n                  visible={visibleModalWrongNetwork}\n                  onClose={() => {\n                      setVisibleModalWrongNetwork(false);\n                  }}\n              >\n              </Modal>}\n\n              <Modal\n                  visible={visibleModalWallets}\n                  onClose={() => setVisibleModalWallets(false)}\n              >\n                  <WalletSelector />\n              </Modal>\n              <Header account={account} />\n              <div className={styles.inner}>{children}</div>\n              <Footer/>\n          </div>\n      );\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}