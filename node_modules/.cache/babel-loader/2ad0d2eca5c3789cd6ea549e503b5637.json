{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\nimport WalletSelector from \"../WalletSelector\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Injected, WalletConnect, CoinbaseWallet } from \"../../utils/connectors\";\nimport { switchNetwork } from \"../../utils/walletHandlers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Page = ({\n  biconomyFetched,\n  children,\n  account,\n  setAccount,\n  connectWallet,\n  disconnect,\n  chainId\n}) => {\n  _s();\n\n  const [networkName, setNetworkName] = useState(\"\");\n  const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n  const [visibleModalWallets, setVisibleModalWallets] = useState(false);\n  let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\"); //const { activate, account, library } = useWeb3React();\n  // useEffect(async () => {\n  //     alert(\"LBR: \" + JSON.stringify(library));\n  //     if (biconomyFetched === true) {\n  //         alert(\"lib: \" + JSON.stringify(library));\n  //         // if (localStorage.getItem('lastAddConn') !== account) {\n  //         //     localStorage.setItem('connection', '');\n  //         // }\n  //\n  //         if (localStorage.getItem('connection') === 'mm') {\n  //             activate(Injected);\n  //         } else if (localStorage.getItem('connection') === 'wc') {\n  //             activate(WalletConnect);\n  //         } else if (localStorage.getItem('connection') === 'cb') {\n  //             activate(CoinbaseWallet);\n  //         }\n  //     }\n  // }, [biconomyFetched]);\n\n  useEffect(async () => {\n    clearAllBodyScrollLocks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.page,\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      visible: visibleModalWallets,\n      onClose: () => setVisibleModalWallets(false),\n      children: /*#__PURE__*/_jsxDEV(WalletSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      account: account,\n      setAccount: setAccount,\n      connectWallet: connectWallet,\n      disconnect: disconnect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }, this), chainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.ntwrk,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Current Network:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 57\n      }, this), chainId.toString() === \"0x1\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          height: \"100\",\n          width: \"100\",\n          style: {\n            marginRight: '-10.75ex'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"5\",\n            cy: \"50\",\n            r: \"3\",\n            stroke: \"green\",\n            \"stroke-width\": \"3\",\n            fill: \"red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 56\n        }, this), \"Ethereum\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 51\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: chainId.toString() === \"0x89\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"100\",\n            width: \"100\",\n            style: {\n              marginRight: '-10.75ex'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"5\",\n              cy: \"50\",\n              r: \"3\",\n              stroke: \"green\",\n              \"stroke-width\": \"3\",\n              fill: \"red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 63\n          }, this), \"Polygon\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 58\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '-5ex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"100\",\n            width: \"100\",\n            style: {\n              marginRight: '-10.75ex'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"5\",\n              cy: \"50\",\n              r: \"3\",\n              stroke: \"red\",\n              \"stroke-width\": \"3\",\n              fill: \"red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 78\n          }, this), \"Invalid\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 45\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Page, \"1flYALpX5XK9MQgMk77uepDp/30=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Page/index.js"],"names":["React","useEffect","useState","withRouter","clearAllBodyScrollLocks","styles","Header","Footer","Web3","Modal","WalletSelector","useWeb3React","Injected","WalletConnect","CoinbaseWallet","switchNetwork","Page","biconomyFetched","children","account","setAccount","connectWallet","disconnect","chainId","networkName","setNetworkName","visibleModalWrongNetwork","setVisibleModalWrongNetwork","visibleModalWallets","setVisibleModalWallets","web3","givenProvider","providers","HttpProvider","page","ntwrk","color","toString","marginRight","marginTop","inner"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport styles from \"./Page.module.sass\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport Web3 from \"web3\";\nimport Modal from \"../Modal\";\nimport WalletSelector from \"../WalletSelector\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport { Injected, WalletConnect, CoinbaseWallet } from \"../../utils/connectors\";\nimport { switchNetwork } from \"../../utils/walletHandlers\";\n\nconst Page = ({biconomyFetched, children, account, setAccount, connectWallet, disconnect, chainId}) => {\n    const [networkName, setNetworkName] = useState(\"\");\n    const [visibleModalWrongNetwork, setVisibleModalWrongNetwork] = useState(false);\n    const [visibleModalWallets, setVisibleModalWallets] = useState(false);\n\n    let web3 = new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n\n    //const { activate, account, library } = useWeb3React();\n\n    // useEffect(async () => {\n    //     alert(\"LBR: \" + JSON.stringify(library));\n    //     if (biconomyFetched === true) {\n    //         alert(\"lib: \" + JSON.stringify(library));\n    //         // if (localStorage.getItem('lastAddConn') !== account) {\n    //         //     localStorage.setItem('connection', '');\n    //         // }\n    //\n    //         if (localStorage.getItem('connection') === 'mm') {\n    //             activate(Injected);\n    //         } else if (localStorage.getItem('connection') === 'wc') {\n    //             activate(WalletConnect);\n    //         } else if (localStorage.getItem('connection') === 'cb') {\n    //             activate(CoinbaseWallet);\n    //         }\n    //     }\n    // }, [biconomyFetched]);\n\n  useEffect(async () => {\n    clearAllBodyScrollLocks();\n  }, []);\n\n      return (\n          <div className={styles.page}>\n              <Modal\n                  visible={visibleModalWallets}\n                  onClose={() => setVisibleModalWallets(false)}\n              >\n                  <WalletSelector />\n              </Modal>\n              <Header account={account} setAccount={setAccount} connectWallet={connectWallet} disconnect={disconnect} />\n              {}\n              {chainId && <div className={styles.ntwrk}><div style={{color: 'white'}}>Current Network:</div>\n                  {chainId.toString() === \"0x1\" ? <div><svg height=\"100\" width=\"100\" style={{marginRight: '-10.75ex'}}>\n                          <circle cx=\"5\" cy=\"50\" r=\"3\" stroke=\"green\" stroke-width=\"3\" fill=\"red\" />\n                      </svg>Ethereum</div> :\n                      <>{chainId.toString() === \"0x89\" ? <div><svg height=\"100\" width=\"100\" style={{marginRight: '-10.75ex'}}>\n                          <circle cx=\"5\" cy=\"50\" r=\"3\" stroke=\"green\" stroke-width=\"3\" fill=\"red\" />\n                      </svg>Polygon</div> : <div style={{marginTop: '-5ex'}}><svg height=\"100\" width=\"100\" style={{marginRight: '-10.75ex'}}>\n                          <circle cx=\"5\" cy=\"50\" r=\"3\" stroke=\"red\" stroke-width=\"3\" fill=\"red\" />\n                      </svg>Invalid</div>}</>}</div>}\n              <div className={styles.inner}>{children}</div>\n              <Footer/>\n          </div>\n      );\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}