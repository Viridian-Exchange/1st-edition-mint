{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport styles from \"./User.module.sass\";\nimport Icon from \"../../Icon\";\nimport Theme from \"../../Theme\";\nimport Web3 from \"web3\";\nimport config from \"../../../local-dev-config\"; //import veJSON from \"../../../abis/ViridianExchange.json\";\n\nimport vTJSON from \"../../../abis/ViridianToken.json\";\nimport BigNumber from \"bignumber.js\"; //import {FetchUser} from \"../../../apis/UserAPI\";\n\nimport ReactLoading from \"react-loading\";\nimport { useCryptoPrices, CryptoPriceProvider } from \"react-realtime-crypto-prices\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletSelector from \"../../WalletSelector\";\nimport { useWeb3React } from '@web3-react/core';\nimport CoinbaseWalletSDK from '@coinbase/wallet-sdk';\nimport Web3Modal from \"web3modal\"; // const wcProvider = new WalletConnectProvider({\n//   rpc: {1: \"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\"},\n//   bridge: \"https://bridge.walletconnect.org\",\n//   qrcodeModalOptions: {\n//   },\n// });\n//let web3 = new Web3(new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n//TODO: Instead of account, pass in user with all info through to profile/user\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst items = account => [{\n  title: \"Disconnect\",\n  icon: \"exit\",\n  url: \"/\"\n}];\n\nlet provider;\nlet selectedAccount;\n\nconst User = ({\n  className,\n  connectWallet,\n  account,\n  setAccount,\n  connected,\n  setConnected,\n  userInfo,\n  setUserInfo,\n  ethBalance,\n  setEthBalance,\n  setPromptInstallMetamask,\n  setVisibleModalWallets\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [walletVis, setWalletVis] = useState(false);\n  const [balance, setBalance] = useState(0);\n  useEffect(async () => {\n    if (account) {\n      setBalance(parseBalance());\n    } //alert('initing')\n\n  }, []);\n\n  function parseBalance(balance) {\n    balance = new BigNumber(balance);\n\n    if (10000 < balance && balance < 1000000.0) {\n      return (balance / 1000).toFixed(2) + \"K\";\n    } else if (balance > 1000000.0) {\n      return (balance / 1000000).toFixed(2) + \"M\";\n    } else {\n      return balance.toFixed(2);\n    }\n  }\n\n  const round = (number, decimalPlaces) => {\n    const factorOfTen = Math.pow(10, decimalPlaces);\n    return Math.round(number * factorOfTen) / factorOfTen;\n  };\n\n  const shortenAccount = () => {\n    if (account) {\n      return account.toString().substring(0, 6) + \"...\" + account.toString().substring(38);\n    }\n  }; //alert(account);\n\n\n  if (account) {\n    //if username is empty, ask to set up\n    return /*#__PURE__*/_jsxDEV(OutsideClickHandler, {\n      onOutsideClick: () => setVisible(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(styles.user, className),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.head,\n          onClick: () => setVisible(!visible),\n          children: balance === 0 ? [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatar,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"wallet\",\n              fill: \"white\",\n              size: \"32\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.wallet,\n            children: account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)] : [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatar,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"wallet\",\n              fill: \"white\",\n              size: \"32\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ethBalance === 0 && parseBalance(balance) !== \"0.00\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.wallet,\n              children: [parseBalance(balance), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.currency,\n                children: \"USDT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 82\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.wallet,\n              children: account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), visible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.body,\n          children: [/*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: account // onCopy={() => this.setState({copied: true})}\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.code,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.number,\n                children: shortenAccount()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.copy,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"copy\",\n                  size: \"16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.wrap,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.line,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.details,\n                style: {\n                  marginLeft: '-1ex'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.info,\n                  children: \"Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: ethBalance === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.price,\n                    children: [parseBalance(balance), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: styles.currency,\n                      children: \"USDT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 51\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 52\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.price,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      style: {\n                        width: '2ex',\n                        marginTop: '-.4ex'\n                      },\n                      src: \"https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg\",\n                      alt: \"ETH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 27\n                    }, this), ethBalance]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 34\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.menu,\n            children: items(account).map((x, index) => x.url ? x.url.startsWith(\"http\") ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {},\n              className: styles.item,\n              href: x.url,\n              rel: \"noopener noreferrer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.icon,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: x.icon,\n                  size: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.text,\n                children: x.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 35\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              className: styles.item,\n              onClick: () => setVisible(!visible),\n              to: {\n                pathname: x.url,\n                state: {\n                  account: account\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.icon,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: x.icon,\n                  size: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.text,\n                children: x.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 35\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.item,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.icon,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: x.icon,\n                  size: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.text,\n                children: x.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Theme, {\n                className: styles.theme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 31\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(OutsideClickHandler, {\n      onOutsideClick: () => {\n        setWalletVis(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(styles.user, className),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.head,\n          onClick: async () => await connectWallet(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.disconnectedWallet,\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 12\n        }, this), walletVis && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.body,\n          children: /*#__PURE__*/_jsxDEV(WalletSelector, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s(User, \"mgEHczU2dehdH+eXTuOxAqBucco=\");\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js"],"names":["React","useState","useEffect","Link","cn","OutsideClickHandler","styles","Icon","Theme","Web3","config","vTJSON","BigNumber","ReactLoading","useCryptoPrices","CryptoPriceProvider","CopyToClipboard","WalletConnectProvider","WalletSelector","useWeb3React","CoinbaseWalletSDK","Web3Modal","items","account","title","icon","url","provider","selectedAccount","User","className","connectWallet","setAccount","connected","setConnected","userInfo","setUserInfo","ethBalance","setEthBalance","setPromptInstallMetamask","setVisibleModalWallets","visible","setVisible","walletVis","setWalletVis","balance","setBalance","parseBalance","toFixed","round","number","decimalPlaces","factorOfTen","Math","pow","shortenAccount","toString","substring","user","head","avatar","wallet","currency","body","code","copy","wrap","line","details","marginLeft","info","price","width","marginTop","menu","map","x","index","startsWith","item","text","pathname","state","theme","disconnectedWallet"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport styles from \"./User.module.sass\";\nimport Icon from \"../../Icon\";\nimport Theme from \"../../Theme\";\nimport Web3 from \"web3\";\nimport config from \"../../../local-dev-config\";\n//import veJSON from \"../../../abis/ViridianExchange.json\";\nimport vTJSON from \"../../../abis/ViridianToken.json\";\nimport BigNumber from \"bignumber.js\";\n//import {FetchUser} from \"../../../apis/UserAPI\";\nimport ReactLoading from \"react-loading\";\nimport {\n  useCryptoPrices,\n  CryptoPriceProvider\n} from \"react-realtime-crypto-prices\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletSelector from \"../../WalletSelector\";\nimport { useWeb3React } from '@web3-react/core'\nimport CoinbaseWalletSDK from '@coinbase/wallet-sdk';\nimport Web3Modal from \"web3modal\";\n\n// const wcProvider = new WalletConnectProvider({\n//   rpc: {1: \"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\"},\n//   bridge: \"https://bridge.walletconnect.org\",\n//   qrcodeModalOptions: {\n//   },\n// });\n\n//let web3 = new Web3(new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n\n//TODO: Instead of account, pass in user with all info through to profile/user\nconst items = (account) => [\n  {\n    title: \"Disconnect\",\n    icon: \"exit\",\n    url: \"/\",\n  },\n];\n\nlet provider;\nlet selectedAccount;\n\nconst User = ({ className, connectWallet, account, setAccount, connected, setConnected, userInfo, setUserInfo, ethBalance, setEthBalance, setPromptInstallMetamask, setVisibleModalWallets}) => {\n  const [visible, setVisible] = useState(false);\n  const [walletVis, setWalletVis] = useState(false);\n  const [balance, setBalance] = useState(0);\n\n  useEffect(async () => {\n    if(account) {\n      setBalance(parseBalance());\n    }\n\n    //alert('initing')\n  }, []);\n\n  function parseBalance(balance) {\n    balance = new BigNumber(balance);\n    if (10000 < balance && balance < 1000000.0) {\n      return (balance / 1000).toFixed(2) + \"K\"\n    }\n    else if (balance > 1000000.0) {\n      return (balance / 1000000).toFixed(2) + \"M\"\n    }\n    else {\n      return balance.toFixed(2);\n    }\n  }\n\n  const round = (number, decimalPlaces) => {\n    const factorOfTen = Math.pow(10, decimalPlaces)\n    return Math.round(number * factorOfTen) / factorOfTen\n  }\n\n  const shortenAccount = () => {\n    if (account) {\n      return account.toString().substring(0, 6) + \"...\" + account.toString().substring(38);\n    }\n  }\n\n  //alert(account);\n  if (account) {\n    //if username is empty, ask to set up\n  return (\n    <OutsideClickHandler onOutsideClick={() => setVisible(false)}>\n      <div className={cn(styles.user, className)}>\n        <div className={styles.head} onClick={() => setVisible(!visible)}>\n          {(balance === 0) ?\n              [<div className={styles.avatar}>\n                <Icon name=\"wallet\" fill='white' size=\"32\" />\n              </div>,\n                <div className={styles.wallet}>\n                  {account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)}\n                </div>] : [<div className={styles.avatar}>\n                <Icon name=\"wallet\" fill='white' size=\"32\" />\n            </div>,\n                <div>{(ethBalance === 0) && (parseBalance(balance) !== \"0.00\") ? <div className={styles.wallet}>\n          {parseBalance(balance)} <span className={styles.currency}>USDT</span>\n            </div> : <div className={styles.wallet}>\n                  {/*<img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                  {/*{ethBalance}*/}\n                  {account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)}\n                </div>}</div>]}\n        </div>\n            {visible && (\n                <div className={styles.body}>\n                  <CopyToClipboard text={account}\n                      // onCopy={() => this.setState({copied: true})}\n                  >\n                    <div className={styles.code}>\n                      <div className={styles.number}>{shortenAccount()}</div>\n                      <button className={styles.copy}>\n                        <Icon name=\"copy\" size=\"16\"/>\n                      </button>\n                    </div>\n                  </CopyToClipboard>\n                  <div className={styles.wrap}>\n                    <div className={styles.line}>\n                      {/*<div className={styles.preview}>*/}\n                      {/*  <img*/}\n                      {/*      src=\"/images/content/ve_circle.png\"*/}\n                      {/*      alt=\"Ethereum\"*/}\n                      {/*  />*/}\n                      {/*</div>*/}\n                      <div className={styles.details} style={{marginLeft: '-1ex'}}>\n                        <div className={styles.info}>Balance</div>\n                        <div>{(ethBalance === 0) ? <div className={styles.price}>\n                          {parseBalance(balance)} <span className={styles.currency}>USDT</span>\n                        </div> : <div className={styles.price}>\n                          <img style={{width: '2ex', marginTop: '-.4ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n                          {ethBalance}\n                          {/*<>{prices.eth && <div style={{color: 'grey', fontSize: '5'}}>${Math.round((prices.eth * ethBalance) * 100) / 100}</div>}</>*/}\n                          {/*<span className={styles.currency}>ETH</span>*/}\n                        </div>}</div>\n                      </div>\n                    </div>\n                    {/*<button*/}\n                    {/*    className={cn(\"button-stroke button-small\", styles.button)}*/}\n                    {/*>*/}\n                    {/*  Manage fun on Coinbase*/}\n                    {/*</button>*/}\n                  </div>\n                  <div className={styles.menu}>\n                    {items(account).map((x, index) =>\n                        x.url ? (\n                            x.url.startsWith(\"http\") ? (\n                                <button\n                                    onClick={() => {}}\n                                    className={styles.item}\n                                    href={x.url}\n                                    rel=\"noopener noreferrer\"\n                                    key={index}\n                                >\n                                  <div className={styles.icon}>\n                                    <Icon name={x.icon} size=\"20\"/>\n                                  </div>\n                                  <div className={styles.text}>{x.title}</div>\n                                </button>\n                            ) : (\n                                <Link\n                                    className={styles.item}\n                                    onClick={() => setVisible(!visible)}\n                                    key={index}\n                                    to={{ pathname: x.url, state: { account: account }}}\n                                >\n                                  <div className={styles.icon}>\n                                    <Icon name={x.icon} size=\"20\"/>\n                                  </div>\n                                  <div className={styles.text}>{x.title}</div>\n                                </Link>\n                            )\n                        ) : (\n                            <div className={styles.item} key={index}>\n                              <div className={styles.icon}>\n                                <Icon name={x.icon} size=\"20\"/>\n                              </div>\n                              <div className={styles.text}>{x.title}</div>\n                              <Theme className={styles.theme}/>\n                            </div>\n                        )\n                    )}\n                  </div>\n                </div>\n            )}\n          </div>\n        </OutsideClickHandler>\n    );\n  }\n  else {\n    return (\n        <OutsideClickHandler onOutsideClick={() => {setWalletVis(false)}}>\n          <div className={cn(styles.user, className)}>\n           <div className={styles.head} onClick={async () => await connectWallet()}>\n              <div className={styles.disconnectedWallet}>\n                Connect Wallet\n              </div>\n            </div>\n          {walletVis && (\n              <div className={styles.body}>\n                <WalletSelector/>\n              </div>\n          )}\n          </div>\n        </OutsideClickHandler>\n    );\n  }\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}