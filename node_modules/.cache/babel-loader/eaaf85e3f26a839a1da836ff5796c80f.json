{"ast":null,"code":"var _jsxFileName = \"/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport styles from \"./User.module.sass\";\nimport Icon from \"../../Icon\";\nimport Theme from \"../../Theme\";\nimport Web3 from \"web3\";\nimport config from \"../../../local-dev-config\"; //import veJSON from \"../../../abis/ViridianExchange.json\";\n\nimport vTJSON from \"../../../abis/ViridianToken.json\";\nimport BigNumber from \"bignumber.js\"; //import {FetchUser} from \"../../../apis/UserAPI\";\n\nimport ReactLoading from \"react-loading\";\nimport { useCryptoPrices, CryptoPriceProvider } from \"react-realtime-crypto-prices\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletSelector from \"../../WalletSelector\";\nimport { useWeb3React } from '@web3-react/core';\nimport Web3Modal from \"web3modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wcProvider = new WalletConnectProvider({\n  rpc: {\n    1: \"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\"\n  },\n  bridge: \"https://bridge.walletconnect.org\",\n  qrcodeModalOptions: {}\n}); //let web3 = new Web3(new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n//TODO: Instead of account, pass in user with all info through to profile/user\n\nconst items = account => [];\n\nconst User = async ({\n  className,\n  setAccount,\n  connected,\n  setConnected,\n  userInfo,\n  setUserInfo,\n  ethBalance,\n  setEthBalance,\n  setPromptInstallMetamask,\n  setVisibleModalWallets\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [walletVis, setWalletVis] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const providerOptions = {\n    /* See Provider Options Section */\n  };\n  const web3Modal = new Web3Modal({\n    network: \"mainnet\",\n    // optional\n    cacheProvider: true,\n    // optional\n    providerOptions // required\n\n  });\n  const provider = await web3Modal.connect();\n  const web3 = new Web3(provider); //Todo: if they press skip for now, then link address to user struct and default profile picture\n  //const [ethBalance, setEthBalance] = useState(0);\n\n  const {\n    library,\n    active,\n    chainId,\n    account\n  } = useWeb3React();\n  useEffect(async () => {\n    if (account) {\n      setBalance(parseBalance(await getBalance()));\n    }\n  }, [active]);\n\n  const isMetaMaskInstalled = () => {\n    //Have to check the ethereum binding on the window object to see if it's installed\n    const {\n      ethereum\n    } = window;\n\n    if (!Boolean(ethereum && ethereum.isMetaMask)) {\n      setPromptInstallMetamask(true);\n    }\n  };\n\n  async function connectWallet() {\n    try {\n      // Will open the MetaMask UI\n      // You should disable this button while the request is pending!\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(async accounts => {\n        setAccount(accounts[0]);\n\n        if (accounts[0]) {//await FetchUser(setUserInfo, accounts[0]);\n          //alert(\"FETCH FROM USER SCREEN\")\n        } //alert(accounts[0]);\n        //alert(JSON.stringify(account));\n\n      }); //alert(JSON.stringify(web3));\n\n      await web3.eth.getBalance(account).then(async balance => {\n        //alert(balance);\n        await setEthBalance(round(balance * .000000000000000001, 4));\n      });\n      await setBalance(await getBalance());\n      await setConnected(true); //alert(\"setting connected from user/index\");\n      // await setUserInfo(await getUserInfo());\n      //alert(account);\n      //await web3.eth.sign(web3.utils.sha3(\"test\"), account, function (err, result) { //console.log(err, result); });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function getBalance() {\n    const vtContractAddress = config.mumbai_contract_addresses.vt_contract; ////console.log(JSON.stringify(vNFTJSON));\n    //alert(account);\n\n    let vtABI = new web3.eth.Contract(vTJSON['abi'], vtContractAddress);\n    return await vtABI.methods.balanceOf(account).call();\n  }\n\n  function parseBalance(balance) {\n    balance = new BigNumber(balance);\n\n    if (10000 < balance && balance < 1000000.0) {\n      return (balance / 1000).toFixed(2) + \"K\";\n    } else if (balance > 1000000.0) {\n      return (balance / 1000000).toFixed(2) + \"M\";\n    } else {\n      return balance.toFixed(2);\n    }\n  }\n\n  const round = (number, decimalPlaces) => {\n    const factorOfTen = Math.pow(10, decimalPlaces);\n    return Math.round(number * factorOfTen) / factorOfTen;\n  };\n\n  const shortenAccount = () => {\n    if (account) {\n      return account.toString().substring(0, 6) + \"...\" + account.toString().substring(38);\n    }\n  }; //alert(account);\n\n\n  if (active) {\n    //if username is empty, ask to set up\n    return /*#__PURE__*/_jsxDEV(OutsideClickHandler, {\n      onOutsideClick: () => setVisible(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(styles.user, className),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.head,\n          onClick: () => setVisible(!visible),\n          children: balance === 0 ? [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatar,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"wallet\",\n              fill: \"white\",\n              size: \"32\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.wallet,\n            children: account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)] : [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatar,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"wallet\",\n              fill: \"white\",\n              size: \"32\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ethBalance === 0 && parseBalance(balance) !== \"0.00\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.wallet,\n              children: [parseBalance(balance), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.currency,\n                children: \"USDT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 82\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.wallet,\n              children: account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), visible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.body,\n          children: [/*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: account // onCopy={() => this.setState({copied: true})}\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.code,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.number,\n                children: shortenAccount()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.copy,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"copy\",\n                  size: \"16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.wrap,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.line,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.details,\n                style: {\n                  marginLeft: '-1ex'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.info,\n                  children: \"Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: ethBalance === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.price,\n                    children: [parseBalance(balance), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: styles.currency,\n                      children: \"USDT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 51\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 52\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.price,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      style: {\n                        width: '2ex',\n                        marginTop: '-.4ex'\n                      },\n                      src: \"https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg\",\n                      alt: \"ETH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 27\n                    }, this), ethBalance]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 34\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.menu,\n            children: items(account).map((x, index) => x.url ? x.url.startsWith(\"http\") ? /*#__PURE__*/_jsxDEV(\"a\", {\n              className: styles.item,\n              href: x.url,\n              rel: \"noopener noreferrer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.icon,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: x.icon,\n                  size: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.text,\n                children: x.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 35\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              className: styles.item,\n              onClick: () => setVisible(!visible),\n              to: {\n                pathname: x.url,\n                state: {\n                  account: account\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.icon,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: x.icon,\n                  size: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.text,\n                children: x.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 35\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.item,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.icon,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: x.icon,\n                  size: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.text,\n                children: x.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Theme, {\n                className: styles.theme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 31\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(OutsideClickHandler, {\n      onOutsideClick: () => {\n        setWalletVis(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(styles.user, className),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.head,\n          onClick: () => setWalletVis(!visible),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.disconnectedWallet,\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 12\n        }, this), walletVis && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.body,\n          children: /*#__PURE__*/_jsxDEV(WalletSelector, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s(User, \"HUOIB2Fovj09lqU/AdfSqjgtPyE=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/blakehatch/WebstormProjects/1st-edition-mint/src/components/Header/User/index.js"],"names":["React","useState","useEffect","Link","cn","OutsideClickHandler","styles","Icon","Theme","Web3","config","vTJSON","BigNumber","ReactLoading","useCryptoPrices","CryptoPriceProvider","CopyToClipboard","WalletConnectProvider","WalletSelector","useWeb3React","Web3Modal","wcProvider","rpc","bridge","qrcodeModalOptions","items","account","User","className","setAccount","connected","setConnected","userInfo","setUserInfo","ethBalance","setEthBalance","setPromptInstallMetamask","setVisibleModalWallets","visible","setVisible","walletVis","setWalletVis","balance","setBalance","providerOptions","web3Modal","network","cacheProvider","provider","connect","web3","library","active","chainId","parseBalance","getBalance","isMetaMaskInstalled","ethereum","window","Boolean","isMetaMask","connectWallet","request","method","then","accounts","eth","round","error","console","vtContractAddress","mumbai_contract_addresses","vt_contract","vtABI","Contract","methods","balanceOf","call","toFixed","number","decimalPlaces","factorOfTen","Math","pow","shortenAccount","toString","substring","user","head","avatar","wallet","currency","body","code","copy","wrap","line","details","marginLeft","info","price","width","marginTop","menu","map","x","index","url","startsWith","item","icon","text","title","pathname","state","theme","disconnectedWallet"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport styles from \"./User.module.sass\";\nimport Icon from \"../../Icon\";\nimport Theme from \"../../Theme\";\nimport Web3 from \"web3\";\nimport config from \"../../../local-dev-config\";\n//import veJSON from \"../../../abis/ViridianExchange.json\";\nimport vTJSON from \"../../../abis/ViridianToken.json\";\nimport BigNumber from \"bignumber.js\";\n//import {FetchUser} from \"../../../apis/UserAPI\";\nimport ReactLoading from \"react-loading\";\nimport {\n  useCryptoPrices,\n  CryptoPriceProvider\n} from \"react-realtime-crypto-prices\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletSelector from \"../../WalletSelector\";\nimport { useWeb3React } from '@web3-react/core'\nimport Web3Modal from \"web3modal\";\n\nconst wcProvider = new WalletConnectProvider({\n  rpc: {1: \"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\"},\n  bridge: \"https://bridge.walletconnect.org\",\n  qrcodeModalOptions: {\n  },\n});\n\n//let web3 = new Web3(new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/XvPpXkhm8UtkGw9b8tIMcR3vr1zTZd3b\") || \"HTTP://127.0.0.1:7545\");\n\n//TODO: Instead of account, pass in user with all info through to profile/user\nconst items = (account) => [\n];\n\nconst User = async ({ className, setAccount, connected, setConnected, userInfo, setUserInfo, ethBalance, setEthBalance, setPromptInstallMetamask, setVisibleModalWallets}) => {\n  const [visible, setVisible] = useState(false);\n  const [walletVis, setWalletVis] = useState(false);\n  const [balance, setBalance] = useState(0);\n\n  const providerOptions = {\n    /* See Provider Options Section */\n  };\n\n  const web3Modal = new Web3Modal({\n    network: \"mainnet\", // optional\n    cacheProvider: true, // optional\n    providerOptions // required\n  });\n\n  const provider = await web3Modal.connect();\n  const web3 = new Web3(provider);\n\n\n  //Todo: if they press skip for now, then link address to user struct and default profile picture\n  //const [ethBalance, setEthBalance] = useState(0);\n\n  const { library, active, chainId, account } = useWeb3React();\n\n  useEffect(async () => {\n    if(account) {\n      setBalance(parseBalance(await getBalance()));\n    }\n  }, [active]);\n\n\n  const isMetaMaskInstalled = () => {\n    //Have to check the ethereum binding on the window object to see if it's installed\n    const {ethereum} = window;\n    if (!Boolean(ethereum && ethereum.isMetaMask)) {\n      setPromptInstallMetamask(true);\n    }\n  };\n\n\n  async function connectWallet() {\n    try {\n      // Will open the MetaMask UI\n      // You should disable this button while the request is pending!\n      await window.ethereum.request({ method: 'eth_requestAccounts' }).then(async (accounts) => {\n        setAccount(accounts[0]);\n        if (accounts[0]) {\n          //await FetchUser(setUserInfo, accounts[0]);\n          //alert(\"FETCH FROM USER SCREEN\")\n        }\n        //alert(accounts[0]);\n        //alert(JSON.stringify(account));\n      });\n\n\n      //alert(JSON.stringify(web3));\n      await web3.eth.getBalance(account).then(async (balance) => {\n        //alert(balance);\n          await setEthBalance(round(balance * .000000000000000001, 4))});\n      await setBalance(await getBalance());\n      await setConnected(true);\n\n      //alert(\"setting connected from user/index\");\n\n      // await setUserInfo(await getUserInfo());\n\n\n\n\n\n      //alert(account);\n      //await web3.eth.sign(web3.utils.sha3(\"test\"), account, function (err, result) { //console.log(err, result); });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function getBalance() {\n\n    const vtContractAddress = config.mumbai_contract_addresses.vt_contract;\n    ////console.log(JSON.stringify(vNFTJSON));\n    //alert(account);\n    let vtABI = new web3.eth.Contract(vTJSON['abi'], vtContractAddress);\n    return await vtABI.methods.balanceOf(account).call();\n  }\n\n  function parseBalance(balance) {\n    balance = new BigNumber(balance);\n    if (10000 < balance && balance < 1000000.0) {\n      return (balance / 1000).toFixed(2) + \"K\"\n    }\n    else if (balance > 1000000.0) {\n      return (balance / 1000000).toFixed(2) + \"M\"\n    }\n    else {\n      return balance.toFixed(2);\n    }\n  }\n\n  const round = (number, decimalPlaces) => {\n    const factorOfTen = Math.pow(10, decimalPlaces)\n    return Math.round(number * factorOfTen) / factorOfTen\n  }\n\n  const shortenAccount = () => {\n    if (account) {\n      return account.toString().substring(0, 6) + \"...\" + account.toString().substring(38);\n    }\n  }\n\n  //alert(account);\n  if (active) {\n    //if username is empty, ask to set up\n  return (\n    <OutsideClickHandler onOutsideClick={() => setVisible(false)}>\n      <div className={cn(styles.user, className)}>\n        <div className={styles.head} onClick={() => setVisible(!visible)}>\n          {(balance === 0) ?\n              [<div className={styles.avatar}>\n                <Icon name=\"wallet\" fill='white' size=\"32\" />\n              </div>,\n                <div className={styles.wallet}>\n                  {account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)}\n                </div>] : [<div className={styles.avatar}>\n                <Icon name=\"wallet\" fill='white' size=\"32\" />\n            </div>,\n                <div>{(ethBalance === 0) && (parseBalance(balance) !== \"0.00\") ? <div className={styles.wallet}>\n          {parseBalance(balance)} <span className={styles.currency}>USDT</span>\n            </div> : <div className={styles.wallet}>\n                  {/*<img style={{width: '3ex', marginTop: '-.5ex', marginLeft: '-1ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />*/}\n                  {/*{ethBalance}*/}\n                  {account.toString().substring(0, 2) + \"...\" + account.toString().substring(38)}\n                </div>}</div>]}\n        </div>\n            {visible && (\n                <div className={styles.body}>\n                  <CopyToClipboard text={account}\n                      // onCopy={() => this.setState({copied: true})}\n                  >\n                    <div className={styles.code}>\n                      <div className={styles.number}>{shortenAccount()}</div>\n                      <button className={styles.copy}>\n                        <Icon name=\"copy\" size=\"16\"/>\n                      </button>\n                    </div>\n                  </CopyToClipboard>\n                  <div className={styles.wrap}>\n                    <div className={styles.line}>\n                      {/*<div className={styles.preview}>*/}\n                      {/*  <img*/}\n                      {/*      src=\"/images/content/ve_circle.png\"*/}\n                      {/*      alt=\"Ethereum\"*/}\n                      {/*  />*/}\n                      {/*</div>*/}\n                      <div className={styles.details} style={{marginLeft: '-1ex'}}>\n                        <div className={styles.info}>Balance</div>\n                        <div>{(ethBalance === 0) ? <div className={styles.price}>\n                          {parseBalance(balance)} <span className={styles.currency}>USDT</span>\n                        </div> : <div className={styles.price}>\n                          <img style={{width: '2ex', marginTop: '-.4ex'}} src='https://upload.wikimedia.org/wikipedia/commons/6/6f/Ethereum-icon-purple.svg' alt='ETH' />\n                          {ethBalance}\n                          {/*<>{prices.eth && <div style={{color: 'grey', fontSize: '5'}}>${Math.round((prices.eth * ethBalance) * 100) / 100}</div>}</>*/}\n                          {/*<span className={styles.currency}>ETH</span>*/}\n                        </div>}</div>\n                      </div>\n                    </div>\n                    {/*<button*/}\n                    {/*    className={cn(\"button-stroke button-small\", styles.button)}*/}\n                    {/*>*/}\n                    {/*  Manage fun on Coinbase*/}\n                    {/*</button>*/}\n                  </div>\n                  <div className={styles.menu}>\n                    {items(account).map((x, index) =>\n                        x.url ? (\n                            x.url.startsWith(\"http\") ? (\n                                <a\n                                    className={styles.item}\n                                    href={x.url}\n                                    rel=\"noopener noreferrer\"\n                                    key={index}\n                                >\n                                  <div className={styles.icon}>\n                                    <Icon name={x.icon} size=\"20\"/>\n                                  </div>\n                                  <div className={styles.text}>{x.title}</div>\n                                </a>\n                            ) : (\n                                <Link\n                                    className={styles.item}\n                                    onClick={() => setVisible(!visible)}\n                                    key={index}\n                                    to={{ pathname: x.url, state: { account: account }}}\n                                >\n                                  <div className={styles.icon}>\n                                    <Icon name={x.icon} size=\"20\"/>\n                                  </div>\n                                  <div className={styles.text}>{x.title}</div>\n                                </Link>\n                            )\n                        ) : (\n                            <div className={styles.item} key={index}>\n                              <div className={styles.icon}>\n                                <Icon name={x.icon} size=\"20\"/>\n                              </div>\n                              <div className={styles.text}>{x.title}</div>\n                              <Theme className={styles.theme}/>\n                            </div>\n                        )\n                    )}\n                  </div>\n                </div>\n            )}\n          </div>\n        </OutsideClickHandler>\n    );\n  }\n  else {\n    return (\n        <OutsideClickHandler onOutsideClick={() => {setWalletVis(false)}}>\n          <div className={cn(styles.user, className)}>\n           <div className={styles.head} onClick={() => setWalletVis(!visible)}>\n              <div className={styles.disconnectedWallet}>\n                Connect Wallet\n              </div>\n            </div>\n          {walletVis && (\n              <div className={styles.body}>\n                <WalletSelector/>\n              </div>\n          )}\n          </div>\n        </OutsideClickHandler>\n    );\n  }\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}